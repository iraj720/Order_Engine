// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: accounting/toman/enums.proto

package toman

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DepositActions int32

const (
	DepositActions_DEPOSIT_ACTION_UNSPECIFIED   DepositActions = 0
	DepositActions_DEPOSIT_ACTION_INIT          DepositActions = 1
	DepositActions_DEPOSIT_ACTION_FINALIZE      DepositActions = 2
	DepositActions_DEPOSIT_ACTION_CONFISCATE    DepositActions = 3
	DepositActions_DEPOSIT_ACTION_INIT_FINALIZE DepositActions = 4
)

// Enum value maps for DepositActions.
var (
	DepositActions_name = map[int32]string{
		0: "DEPOSIT_ACTION_UNSPECIFIED",
		1: "DEPOSIT_ACTION_INIT",
		2: "DEPOSIT_ACTION_FINALIZE",
		3: "DEPOSIT_ACTION_CONFISCATE",
		4: "DEPOSIT_ACTION_INIT_FINALIZE",
	}
	DepositActions_value = map[string]int32{
		"DEPOSIT_ACTION_UNSPECIFIED":   0,
		"DEPOSIT_ACTION_INIT":          1,
		"DEPOSIT_ACTION_FINALIZE":      2,
		"DEPOSIT_ACTION_CONFISCATE":    3,
		"DEPOSIT_ACTION_INIT_FINALIZE": 4,
	}
)

func (x DepositActions) Enum() *DepositActions {
	p := new(DepositActions)
	*p = x
	return p
}

func (x DepositActions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepositActions) Descriptor() protoreflect.EnumDescriptor {
	return file_accounting_toman_enums_proto_enumTypes[0].Descriptor()
}

func (DepositActions) Type() protoreflect.EnumType {
	return &file_accounting_toman_enums_proto_enumTypes[0]
}

func (x DepositActions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepositActions.Descriptor instead.
func (DepositActions) EnumDescriptor() ([]byte, []int) {
	return file_accounting_toman_enums_proto_rawDescGZIP(), []int{0}
}

type WithdrawActions int32

const (
	WithdrawActions_WITHDRAW_ACTION_UNSPECIFIED WithdrawActions = 0
	WithdrawActions_WITHDRAW_ACTION_INIT        WithdrawActions = 1
	WithdrawActions_WITHDRAW_ACTION_FINALIZE    WithdrawActions = 2
	WithdrawActions_WITHDRAW_ACTION_CANCEL      WithdrawActions = 3
)

// Enum value maps for WithdrawActions.
var (
	WithdrawActions_name = map[int32]string{
		0: "WITHDRAW_ACTION_UNSPECIFIED",
		1: "WITHDRAW_ACTION_INIT",
		2: "WITHDRAW_ACTION_FINALIZE",
		3: "WITHDRAW_ACTION_CANCEL",
	}
	WithdrawActions_value = map[string]int32{
		"WITHDRAW_ACTION_UNSPECIFIED": 0,
		"WITHDRAW_ACTION_INIT":        1,
		"WITHDRAW_ACTION_FINALIZE":    2,
		"WITHDRAW_ACTION_CANCEL":      3,
	}
)

func (x WithdrawActions) Enum() *WithdrawActions {
	p := new(WithdrawActions)
	*p = x
	return p
}

func (x WithdrawActions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawActions) Descriptor() protoreflect.EnumDescriptor {
	return file_accounting_toman_enums_proto_enumTypes[1].Descriptor()
}

func (WithdrawActions) Type() protoreflect.EnumType {
	return &file_accounting_toman_enums_proto_enumTypes[1]
}

func (x WithdrawActions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawActions.Descriptor instead.
func (WithdrawActions) EnumDescriptor() ([]byte, []int) {
	return file_accounting_toman_enums_proto_rawDescGZIP(), []int{1}
}

type CorrectiveDepositActions int32

const (
	CorrectiveDepositActions_CORRECTIVE_DEPOSIT_ACTION_UNSPECIFIED CorrectiveDepositActions = 0
	CorrectiveDepositActions_CORRECTIVE_DEPOSIT_ACTION_INIT        CorrectiveDepositActions = 1
	CorrectiveDepositActions_CORRECTIVE_DEPOSIT_ACTION_FINALIZE    CorrectiveDepositActions = 2
	// CORRECTIVE_DEPOSIT_ACTION_CONFISCATE = 3;
	CorrectiveDepositActions_CORRECTIVE_DEPOSIT_ACTION_INIT_FINALIZE CorrectiveDepositActions = 4
)

// Enum value maps for CorrectiveDepositActions.
var (
	CorrectiveDepositActions_name = map[int32]string{
		0: "CORRECTIVE_DEPOSIT_ACTION_UNSPECIFIED",
		1: "CORRECTIVE_DEPOSIT_ACTION_INIT",
		2: "CORRECTIVE_DEPOSIT_ACTION_FINALIZE",
		4: "CORRECTIVE_DEPOSIT_ACTION_INIT_FINALIZE",
	}
	CorrectiveDepositActions_value = map[string]int32{
		"CORRECTIVE_DEPOSIT_ACTION_UNSPECIFIED":   0,
		"CORRECTIVE_DEPOSIT_ACTION_INIT":          1,
		"CORRECTIVE_DEPOSIT_ACTION_FINALIZE":      2,
		"CORRECTIVE_DEPOSIT_ACTION_INIT_FINALIZE": 4,
	}
)

func (x CorrectiveDepositActions) Enum() *CorrectiveDepositActions {
	p := new(CorrectiveDepositActions)
	*p = x
	return p
}

func (x CorrectiveDepositActions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CorrectiveDepositActions) Descriptor() protoreflect.EnumDescriptor {
	return file_accounting_toman_enums_proto_enumTypes[2].Descriptor()
}

func (CorrectiveDepositActions) Type() protoreflect.EnumType {
	return &file_accounting_toman_enums_proto_enumTypes[2]
}

func (x CorrectiveDepositActions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CorrectiveDepositActions.Descriptor instead.
func (CorrectiveDepositActions) EnumDescriptor() ([]byte, []int) {
	return file_accounting_toman_enums_proto_rawDescGZIP(), []int{2}
}

var File_accounting_toman_enums_proto protoreflect.FileDescriptor

var file_accounting_toman_enums_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x6f, 0x6d,
	0x61, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x2a, 0xa7, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x45, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10,
	0x01, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x10, 0x02, 0x12, 0x1d,
	0x0a, 0x19, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x53, 0x43, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x20, 0x0a,
	0x1c, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x49, 0x4e, 0x49, 0x54, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x10, 0x04, 0x2a,
	0x86, 0x01, 0x0a, 0x0f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x01, 0x12, 0x1c,
	0x0a, 0x18, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16,
	0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x03, 0x2a, 0xbe, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x72,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x44,
	0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e,
	0x49, 0x54, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x10, 0x02, 0x12, 0x2b, 0x0a, 0x27,
	0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x46,
	0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x10, 0x04, 0x42, 0x25, 0x5a, 0x23, 0x72, 0x61, 0x62,
	0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x3b, 0x74, 0x6f, 0x6d, 0x61, 0x6e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_accounting_toman_enums_proto_rawDescOnce sync.Once
	file_accounting_toman_enums_proto_rawDescData = file_accounting_toman_enums_proto_rawDesc
)

func file_accounting_toman_enums_proto_rawDescGZIP() []byte {
	file_accounting_toman_enums_proto_rawDescOnce.Do(func() {
		file_accounting_toman_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_accounting_toman_enums_proto_rawDescData)
	})
	return file_accounting_toman_enums_proto_rawDescData
}

var file_accounting_toman_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_accounting_toman_enums_proto_goTypes = []interface{}{
	(DepositActions)(0),           // 0: toman.DepositActions
	(WithdrawActions)(0),          // 1: toman.WithdrawActions
	(CorrectiveDepositActions)(0), // 2: toman.CorrectiveDepositActions
}
var file_accounting_toman_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_accounting_toman_enums_proto_init() }
func file_accounting_toman_enums_proto_init() {
	if File_accounting_toman_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accounting_toman_enums_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_accounting_toman_enums_proto_goTypes,
		DependencyIndexes: file_accounting_toman_enums_proto_depIdxs,
		EnumInfos:         file_accounting_toman_enums_proto_enumTypes,
	}.Build()
	File_accounting_toman_enums_proto = out.File
	file_accounting_toman_enums_proto_rawDesc = nil
	file_accounting_toman_enums_proto_goTypes = nil
	file_accounting_toman_enums_proto_depIdxs = nil
}
