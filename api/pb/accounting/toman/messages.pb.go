// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: accounting/toman/messages.proto

package toman

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TomanDeposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Treasury        string `protobuf:"bytes,1,opt,name=treasury,proto3" json:"treasury,omitempty"`
	TxId            string `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Amount          string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Cost            string `protobuf:"bytes,4,opt,name=cost,proto3" json:"cost,omitempty"`
	Asset           string `protobuf:"bytes,5,opt,name=asset,proto3" json:"asset,omitempty"`
	Network         string `protobuf:"bytes,6,opt,name=network,proto3" json:"network,omitempty"`
	UserWarehouse   string `protobuf:"bytes,7,opt,name=user_warehouse,json=userWarehouse,proto3" json:"user_warehouse,omitempty"`
	BrokerWarehouse string `protobuf:"bytes,8,opt,name=broker_warehouse,json=brokerWarehouse,proto3" json:"broker_warehouse,omitempty"`
	Broker          string `protobuf:"bytes,10,opt,name=broker,proto3" json:"broker,omitempty"`
	User            string `protobuf:"bytes,11,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *TomanDeposit) Reset() {
	*x = TomanDeposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_toman_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TomanDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TomanDeposit) ProtoMessage() {}

func (x *TomanDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_toman_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TomanDeposit.ProtoReflect.Descriptor instead.
func (*TomanDeposit) Descriptor() ([]byte, []int) {
	return file_accounting_toman_messages_proto_rawDescGZIP(), []int{0}
}

func (x *TomanDeposit) GetTreasury() string {
	if x != nil {
		return x.Treasury
	}
	return ""
}

func (x *TomanDeposit) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *TomanDeposit) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TomanDeposit) GetCost() string {
	if x != nil {
		return x.Cost
	}
	return ""
}

func (x *TomanDeposit) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *TomanDeposit) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *TomanDeposit) GetUserWarehouse() string {
	if x != nil {
		return x.UserWarehouse
	}
	return ""
}

func (x *TomanDeposit) GetBrokerWarehouse() string {
	if x != nil {
		return x.BrokerWarehouse
	}
	return ""
}

func (x *TomanDeposit) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *TomanDeposit) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type TomanDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositList []*TomanDeposit `protobuf:"bytes,1,rep,name=deposit_list,json=depositList,proto3" json:"deposit_list,omitempty"`
	Action      DepositActions  `protobuf:"varint,2,opt,name=action,proto3,enum=toman.DepositActions" json:"action,omitempty"`
}

func (x *TomanDepositRequest) Reset() {
	*x = TomanDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_toman_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TomanDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TomanDepositRequest) ProtoMessage() {}

func (x *TomanDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_toman_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TomanDepositRequest.ProtoReflect.Descriptor instead.
func (*TomanDepositRequest) Descriptor() ([]byte, []int) {
	return file_accounting_toman_messages_proto_rawDescGZIP(), []int{1}
}

func (x *TomanDepositRequest) GetDepositList() []*TomanDeposit {
	if x != nil {
		return x.DepositList
	}
	return nil
}

func (x *TomanDepositRequest) GetAction() DepositActions {
	if x != nil {
		return x.Action
	}
	return DepositActions_DEPOSIT_ACTION_UNSPECIFIED
}

type TomanDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Error   []string `protobuf:"bytes,3,rep,name=error,proto3" json:"error,omitempty"`
	Data    string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TomanDepositResponse) Reset() {
	*x = TomanDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_toman_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TomanDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TomanDepositResponse) ProtoMessage() {}

func (x *TomanDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_toman_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TomanDepositResponse.ProtoReflect.Descriptor instead.
func (*TomanDepositResponse) Descriptor() ([]byte, []int) {
	return file_accounting_toman_messages_proto_rawDescGZIP(), []int{2}
}

func (x *TomanDepositResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TomanDepositResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TomanDepositResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TomanDepositResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type TomanWithdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Treasury        string `protobuf:"bytes,1,opt,name=treasury,proto3" json:"treasury,omitempty"`
	TxId            string `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Amount          string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Cost            string `protobuf:"bytes,4,opt,name=cost,proto3" json:"cost,omitempty"`
	Asset           string `protobuf:"bytes,5,opt,name=asset,proto3" json:"asset,omitempty"`
	Network         string `protobuf:"bytes,6,opt,name=network,proto3" json:"network,omitempty"`
	UserWarehouse   string `protobuf:"bytes,7,opt,name=user_warehouse,json=userWarehouse,proto3" json:"user_warehouse,omitempty"`
	BrokerWarehouse string `protobuf:"bytes,8,opt,name=broker_warehouse,json=brokerWarehouse,proto3" json:"broker_warehouse,omitempty"`
	Broker          string `protobuf:"bytes,9,opt,name=broker,proto3" json:"broker,omitempty"`
	Revenue         string `protobuf:"bytes,10,opt,name=revenue,proto3" json:"revenue,omitempty"`
	User            string `protobuf:"bytes,11,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *TomanWithdraw) Reset() {
	*x = TomanWithdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_toman_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TomanWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TomanWithdraw) ProtoMessage() {}

func (x *TomanWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_toman_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TomanWithdraw.ProtoReflect.Descriptor instead.
func (*TomanWithdraw) Descriptor() ([]byte, []int) {
	return file_accounting_toman_messages_proto_rawDescGZIP(), []int{3}
}

func (x *TomanWithdraw) GetTreasury() string {
	if x != nil {
		return x.Treasury
	}
	return ""
}

func (x *TomanWithdraw) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *TomanWithdraw) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TomanWithdraw) GetCost() string {
	if x != nil {
		return x.Cost
	}
	return ""
}

func (x *TomanWithdraw) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *TomanWithdraw) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *TomanWithdraw) GetUserWarehouse() string {
	if x != nil {
		return x.UserWarehouse
	}
	return ""
}

func (x *TomanWithdraw) GetBrokerWarehouse() string {
	if x != nil {
		return x.BrokerWarehouse
	}
	return ""
}

func (x *TomanWithdraw) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *TomanWithdraw) GetRevenue() string {
	if x != nil {
		return x.Revenue
	}
	return ""
}

func (x *TomanWithdraw) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type TomanWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WithdrawList []*TomanWithdraw `protobuf:"bytes,1,rep,name=withdraw_list,json=withdrawList,proto3" json:"withdraw_list,omitempty"`
	Action       WithdrawActions  `protobuf:"varint,2,opt,name=action,proto3,enum=toman.WithdrawActions" json:"action,omitempty"`
}

func (x *TomanWithdrawRequest) Reset() {
	*x = TomanWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_toman_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TomanWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TomanWithdrawRequest) ProtoMessage() {}

func (x *TomanWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_toman_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TomanWithdrawRequest.ProtoReflect.Descriptor instead.
func (*TomanWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_accounting_toman_messages_proto_rawDescGZIP(), []int{4}
}

func (x *TomanWithdrawRequest) GetWithdrawList() []*TomanWithdraw {
	if x != nil {
		return x.WithdrawList
	}
	return nil
}

func (x *TomanWithdrawRequest) GetAction() WithdrawActions {
	if x != nil {
		return x.Action
	}
	return WithdrawActions_WITHDRAW_ACTION_UNSPECIFIED
}

type TomanWithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Error   []string `protobuf:"bytes,3,rep,name=error,proto3" json:"error,omitempty"`
	Data    string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TomanWithdrawResponse) Reset() {
	*x = TomanWithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_toman_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TomanWithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TomanWithdrawResponse) ProtoMessage() {}

func (x *TomanWithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_toman_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TomanWithdrawResponse.ProtoReflect.Descriptor instead.
func (*TomanWithdrawResponse) Descriptor() ([]byte, []int) {
	return file_accounting_toman_messages_proto_rawDescGZIP(), []int{5}
}

func (x *TomanWithdrawResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TomanWithdrawResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TomanWithdrawResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TomanWithdrawResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type TomanCorrectiveDeposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Treasury        string `protobuf:"bytes,1,opt,name=treasury,proto3" json:"treasury,omitempty"`
	TxId            string `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Amount          string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Cost            string `protobuf:"bytes,4,opt,name=cost,proto3" json:"cost,omitempty"`
	Asset           string `protobuf:"bytes,5,opt,name=asset,proto3" json:"asset,omitempty"`
	Network         string `protobuf:"bytes,6,opt,name=network,proto3" json:"network,omitempty"`
	UserWarehouse   string `protobuf:"bytes,7,opt,name=user_warehouse,json=userWarehouse,proto3" json:"user_warehouse,omitempty"`
	BrokerWarehouse string `protobuf:"bytes,8,opt,name=broker_warehouse,json=brokerWarehouse,proto3" json:"broker_warehouse,omitempty"`
	Broker          string `protobuf:"bytes,9,opt,name=broker,proto3" json:"broker,omitempty"`
	Revenue         string `protobuf:"bytes,10,opt,name=revenue,proto3" json:"revenue,omitempty"`
	User            string `protobuf:"bytes,11,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *TomanCorrectiveDeposit) Reset() {
	*x = TomanCorrectiveDeposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_toman_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TomanCorrectiveDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TomanCorrectiveDeposit) ProtoMessage() {}

func (x *TomanCorrectiveDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_toman_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TomanCorrectiveDeposit.ProtoReflect.Descriptor instead.
func (*TomanCorrectiveDeposit) Descriptor() ([]byte, []int) {
	return file_accounting_toman_messages_proto_rawDescGZIP(), []int{6}
}

func (x *TomanCorrectiveDeposit) GetTreasury() string {
	if x != nil {
		return x.Treasury
	}
	return ""
}

func (x *TomanCorrectiveDeposit) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *TomanCorrectiveDeposit) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TomanCorrectiveDeposit) GetCost() string {
	if x != nil {
		return x.Cost
	}
	return ""
}

func (x *TomanCorrectiveDeposit) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *TomanCorrectiveDeposit) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *TomanCorrectiveDeposit) GetUserWarehouse() string {
	if x != nil {
		return x.UserWarehouse
	}
	return ""
}

func (x *TomanCorrectiveDeposit) GetBrokerWarehouse() string {
	if x != nil {
		return x.BrokerWarehouse
	}
	return ""
}

func (x *TomanCorrectiveDeposit) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *TomanCorrectiveDeposit) GetRevenue() string {
	if x != nil {
		return x.Revenue
	}
	return ""
}

func (x *TomanCorrectiveDeposit) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type TomanCorrectiveDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrectiveDepositList []*TomanCorrectiveDeposit `protobuf:"bytes,1,rep,name=corrective_deposit_list,json=correctiveDepositList,proto3" json:"corrective_deposit_list,omitempty"`
	Action                CorrectiveDepositActions  `protobuf:"varint,2,opt,name=action,proto3,enum=toman.CorrectiveDepositActions" json:"action,omitempty"`
}

func (x *TomanCorrectiveDepositRequest) Reset() {
	*x = TomanCorrectiveDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_toman_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TomanCorrectiveDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TomanCorrectiveDepositRequest) ProtoMessage() {}

func (x *TomanCorrectiveDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_toman_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TomanCorrectiveDepositRequest.ProtoReflect.Descriptor instead.
func (*TomanCorrectiveDepositRequest) Descriptor() ([]byte, []int) {
	return file_accounting_toman_messages_proto_rawDescGZIP(), []int{7}
}

func (x *TomanCorrectiveDepositRequest) GetCorrectiveDepositList() []*TomanCorrectiveDeposit {
	if x != nil {
		return x.CorrectiveDepositList
	}
	return nil
}

func (x *TomanCorrectiveDepositRequest) GetAction() CorrectiveDepositActions {
	if x != nil {
		return x.Action
	}
	return CorrectiveDepositActions_CORRECTIVE_DEPOSIT_ACTION_UNSPECIFIED
}

type TomanCorrectiveDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Error   []string `protobuf:"bytes,3,rep,name=error,proto3" json:"error,omitempty"`
	Data    string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TomanCorrectiveDepositResponse) Reset() {
	*x = TomanCorrectiveDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_toman_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TomanCorrectiveDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TomanCorrectiveDepositResponse) ProtoMessage() {}

func (x *TomanCorrectiveDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_toman_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TomanCorrectiveDepositResponse.ProtoReflect.Descriptor instead.
func (*TomanCorrectiveDepositResponse) Descriptor() ([]byte, []int) {
	return file_accounting_toman_messages_proto_rawDescGZIP(), []int{8}
}

func (x *TomanCorrectiveDepositResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TomanCorrectiveDepositResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TomanCorrectiveDepositResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TomanCorrectiveDepositResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_accounting_toman_messages_proto protoreflect.FileDescriptor

var file_accounting_toman_messages_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x6f, 0x6d,
	0x61, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x1a, 0x1c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x02, 0x0a, 0x0c, 0x54, 0x6f, 0x6d, 0x61, 0x6e,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x7c, 0x0a, 0x13, 0x54, 0x6f, 0x6d, 0x61, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x2e, 0x54, 0x6f, 0x6d, 0x61, 0x6e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x72, 0x0a, 0x14, 0x54, 0x6f, 0x6d, 0x61, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xb4, 0x02, 0x0a, 0x0d, 0x54, 0x6f, 0x6d, 0x61, 0x6e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x81, 0x01, 0x0a, 0x14,
	0x54, 0x6f, 0x6d, 0x61, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f,
	0x6d, 0x61, 0x6e, 0x2e, 0x54, 0x6f, 0x6d, 0x61, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x73, 0x0a, 0x15, 0x54, 0x6f, 0x6d, 0x61, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xbd, 0x02, 0x0a, 0x16, 0x54, 0x6f, 0x6d, 0x61, 0x6e, 0x43, 0x6f,
	0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x12, 0x13, 0x0a, 0x05, 0x74,
	0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x0e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0xaf, 0x01, 0x0a, 0x1d, 0x54, 0x6f, 0x6d, 0x61, 0x6e, 0x43, 0x6f,
	0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x17, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x2e,
	0x54, 0x6f, 0x6d, 0x61, 0x6e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x15, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x2e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7c, 0x0a, 0x1e, 0x54, 0x6f, 0x6d, 0x61, 0x6e, 0x43,
	0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x25, 0x5a, 0x23, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f,
	0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x3b, 0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_accounting_toman_messages_proto_rawDescOnce sync.Once
	file_accounting_toman_messages_proto_rawDescData = file_accounting_toman_messages_proto_rawDesc
)

func file_accounting_toman_messages_proto_rawDescGZIP() []byte {
	file_accounting_toman_messages_proto_rawDescOnce.Do(func() {
		file_accounting_toman_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_accounting_toman_messages_proto_rawDescData)
	})
	return file_accounting_toman_messages_proto_rawDescData
}

var file_accounting_toman_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_accounting_toman_messages_proto_goTypes = []interface{}{
	(*TomanDeposit)(nil),                   // 0: toman.TomanDeposit
	(*TomanDepositRequest)(nil),            // 1: toman.TomanDepositRequest
	(*TomanDepositResponse)(nil),           // 2: toman.TomanDepositResponse
	(*TomanWithdraw)(nil),                  // 3: toman.TomanWithdraw
	(*TomanWithdrawRequest)(nil),           // 4: toman.TomanWithdrawRequest
	(*TomanWithdrawResponse)(nil),          // 5: toman.TomanWithdrawResponse
	(*TomanCorrectiveDeposit)(nil),         // 6: toman.TomanCorrectiveDeposit
	(*TomanCorrectiveDepositRequest)(nil),  // 7: toman.TomanCorrectiveDepositRequest
	(*TomanCorrectiveDepositResponse)(nil), // 8: toman.TomanCorrectiveDepositResponse
	(DepositActions)(0),                    // 9: toman.DepositActions
	(WithdrawActions)(0),                   // 10: toman.WithdrawActions
	(CorrectiveDepositActions)(0),          // 11: toman.CorrectiveDepositActions
}
var file_accounting_toman_messages_proto_depIdxs = []int32{
	0,  // 0: toman.TomanDepositRequest.deposit_list:type_name -> toman.TomanDeposit
	9,  // 1: toman.TomanDepositRequest.action:type_name -> toman.DepositActions
	3,  // 2: toman.TomanWithdrawRequest.withdraw_list:type_name -> toman.TomanWithdraw
	10, // 3: toman.TomanWithdrawRequest.action:type_name -> toman.WithdrawActions
	6,  // 4: toman.TomanCorrectiveDepositRequest.corrective_deposit_list:type_name -> toman.TomanCorrectiveDeposit
	11, // 5: toman.TomanCorrectiveDepositRequest.action:type_name -> toman.CorrectiveDepositActions
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_accounting_toman_messages_proto_init() }
func file_accounting_toman_messages_proto_init() {
	if File_accounting_toman_messages_proto != nil {
		return
	}
	file_accounting_toman_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_accounting_toman_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TomanDeposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_toman_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TomanDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_toman_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TomanDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_toman_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TomanWithdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_toman_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TomanWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_toman_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TomanWithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_toman_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TomanCorrectiveDeposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_toman_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TomanCorrectiveDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_toman_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TomanCorrectiveDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accounting_toman_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_accounting_toman_messages_proto_goTypes,
		DependencyIndexes: file_accounting_toman_messages_proto_depIdxs,
		MessageInfos:      file_accounting_toman_messages_proto_msgTypes,
	}.Build()
	File_accounting_toman_messages_proto = out.File
	file_accounting_toman_messages_proto_rawDesc = nil
	file_accounting_toman_messages_proto_goTypes = nil
	file_accounting_toman_messages_proto_depIdxs = nil
}
