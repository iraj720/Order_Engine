// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: accounting/crypto/messages.proto

package crypto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CryptoDeposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId            string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Asset           string `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	Network         string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	Qty             string `protobuf:"bytes,4,opt,name=qty,proto3" json:"qty,omitempty"`
	Broker          string `protobuf:"bytes,5,opt,name=broker,proto3" json:"broker,omitempty"`
	UserWarehouse   string `protobuf:"bytes,6,opt,name=user_warehouse,json=userWarehouse,proto3" json:"user_warehouse,omitempty"`
	BrokerWarehouse string `protobuf:"bytes,7,opt,name=broker_warehouse,json=brokerWarehouse,proto3" json:"broker_warehouse,omitempty"`
	BrokerTreasury  string `protobuf:"bytes,8,opt,name=broker_treasury,json=brokerTreasury,proto3" json:"broker_treasury,omitempty"`
	User            string `protobuf:"bytes,9,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CryptoDeposit) Reset() {
	*x = CryptoDeposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_crypto_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoDeposit) ProtoMessage() {}

func (x *CryptoDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_crypto_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoDeposit.ProtoReflect.Descriptor instead.
func (*CryptoDeposit) Descriptor() ([]byte, []int) {
	return file_accounting_crypto_messages_proto_rawDescGZIP(), []int{0}
}

func (x *CryptoDeposit) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *CryptoDeposit) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *CryptoDeposit) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *CryptoDeposit) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *CryptoDeposit) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *CryptoDeposit) GetUserWarehouse() string {
	if x != nil {
		return x.UserWarehouse
	}
	return ""
}

func (x *CryptoDeposit) GetBrokerWarehouse() string {
	if x != nil {
		return x.BrokerWarehouse
	}
	return ""
}

func (x *CryptoDeposit) GetBrokerTreasury() string {
	if x != nil {
		return x.BrokerTreasury
	}
	return ""
}

func (x *CryptoDeposit) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type CryptoDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositList []*CryptoDeposit `protobuf:"bytes,1,rep,name=deposit_list,json=depositList,proto3" json:"deposit_list,omitempty"`
	Action      DepositActions   `protobuf:"varint,2,opt,name=action,proto3,enum=crypto.DepositActions" json:"action,omitempty"`
}

func (x *CryptoDepositRequest) Reset() {
	*x = CryptoDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_crypto_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoDepositRequest) ProtoMessage() {}

func (x *CryptoDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_crypto_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoDepositRequest.ProtoReflect.Descriptor instead.
func (*CryptoDepositRequest) Descriptor() ([]byte, []int) {
	return file_accounting_crypto_messages_proto_rawDescGZIP(), []int{1}
}

func (x *CryptoDepositRequest) GetDepositList() []*CryptoDeposit {
	if x != nil {
		return x.DepositList
	}
	return nil
}

func (x *CryptoDepositRequest) GetAction() DepositActions {
	if x != nil {
		return x.Action
	}
	return DepositActions_DEPOSIT_ACTIONS_UNSPECIFIED
}

type CryptoDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Error   []string `protobuf:"bytes,3,rep,name=error,proto3" json:"error,omitempty"`
	Data    string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CryptoDepositResponse) Reset() {
	*x = CryptoDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_crypto_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoDepositResponse) ProtoMessage() {}

func (x *CryptoDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_crypto_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoDepositResponse.ProtoReflect.Descriptor instead.
func (*CryptoDepositResponse) Descriptor() ([]byte, []int) {
	return file_accounting_crypto_messages_proto_rawDescGZIP(), []int{2}
}

func (x *CryptoDepositResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CryptoDepositResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CryptoDepositResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CryptoDepositResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type CryptoWithdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId            string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Asset           string `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	Network         string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	Qty             string `protobuf:"bytes,4,opt,name=qty,proto3" json:"qty,omitempty"`
	Broker          string `protobuf:"bytes,5,opt,name=broker,proto3" json:"broker,omitempty"`
	UserWarehouse   string `protobuf:"bytes,6,opt,name=user_warehouse,json=userWarehouse,proto3" json:"user_warehouse,omitempty"`
	BrokerWarehouse string `protobuf:"bytes,7,opt,name=broker_warehouse,json=brokerWarehouse,proto3" json:"broker_warehouse,omitempty"`
	BrokerTreasury  string `protobuf:"bytes,8,opt,name=broker_treasury,json=brokerTreasury,proto3" json:"broker_treasury,omitempty"`
	Revenue         string `protobuf:"bytes,9,opt,name=revenue,proto3" json:"revenue,omitempty"`
	RevenueAsset    string `protobuf:"bytes,10,opt,name=revenue_asset,json=revenueAsset,proto3" json:"revenue_asset,omitempty"`
	Cost            string `protobuf:"bytes,11,opt,name=cost,proto3" json:"cost,omitempty"`
	CostAsset       string `protobuf:"bytes,12,opt,name=cost_asset,json=costAsset,proto3" json:"cost_asset,omitempty"`
	User            string `protobuf:"bytes,13,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CryptoWithdraw) Reset() {
	*x = CryptoWithdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_crypto_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoWithdraw) ProtoMessage() {}

func (x *CryptoWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_crypto_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoWithdraw.ProtoReflect.Descriptor instead.
func (*CryptoWithdraw) Descriptor() ([]byte, []int) {
	return file_accounting_crypto_messages_proto_rawDescGZIP(), []int{3}
}

func (x *CryptoWithdraw) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *CryptoWithdraw) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *CryptoWithdraw) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *CryptoWithdraw) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *CryptoWithdraw) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *CryptoWithdraw) GetUserWarehouse() string {
	if x != nil {
		return x.UserWarehouse
	}
	return ""
}

func (x *CryptoWithdraw) GetBrokerWarehouse() string {
	if x != nil {
		return x.BrokerWarehouse
	}
	return ""
}

func (x *CryptoWithdraw) GetBrokerTreasury() string {
	if x != nil {
		return x.BrokerTreasury
	}
	return ""
}

func (x *CryptoWithdraw) GetRevenue() string {
	if x != nil {
		return x.Revenue
	}
	return ""
}

func (x *CryptoWithdraw) GetRevenueAsset() string {
	if x != nil {
		return x.RevenueAsset
	}
	return ""
}

func (x *CryptoWithdraw) GetCost() string {
	if x != nil {
		return x.Cost
	}
	return ""
}

func (x *CryptoWithdraw) GetCostAsset() string {
	if x != nil {
		return x.CostAsset
	}
	return ""
}

func (x *CryptoWithdraw) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type CryptoWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WithdrawList []*CryptoWithdraw `protobuf:"bytes,1,rep,name=withdraw_list,json=withdrawList,proto3" json:"withdraw_list,omitempty"`
	Action       WithdrawActions   `protobuf:"varint,2,opt,name=action,proto3,enum=crypto.WithdrawActions" json:"action,omitempty"`
}

func (x *CryptoWithdrawRequest) Reset() {
	*x = CryptoWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_crypto_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoWithdrawRequest) ProtoMessage() {}

func (x *CryptoWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_crypto_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoWithdrawRequest.ProtoReflect.Descriptor instead.
func (*CryptoWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_accounting_crypto_messages_proto_rawDescGZIP(), []int{4}
}

func (x *CryptoWithdrawRequest) GetWithdrawList() []*CryptoWithdraw {
	if x != nil {
		return x.WithdrawList
	}
	return nil
}

func (x *CryptoWithdrawRequest) GetAction() WithdrawActions {
	if x != nil {
		return x.Action
	}
	return WithdrawActions_WITHDRAW_ACTIONS_UNSPECIFIED
}

type CryptoWithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Error   []string `protobuf:"bytes,3,rep,name=error,proto3" json:"error,omitempty"`
	Data    string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CryptoWithdrawResponse) Reset() {
	*x = CryptoWithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_crypto_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoWithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoWithdrawResponse) ProtoMessage() {}

func (x *CryptoWithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_crypto_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoWithdrawResponse.ProtoReflect.Descriptor instead.
func (*CryptoWithdrawResponse) Descriptor() ([]byte, []int) {
	return file_accounting_crypto_messages_proto_rawDescGZIP(), []int{5}
}

func (x *CryptoWithdrawResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CryptoWithdrawResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CryptoWithdrawResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CryptoWithdrawResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type CryptoCorrectiveDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrectiveList []*CryptoWithdraw `protobuf:"bytes,1,rep,name=Corrective_list,json=CorrectiveList,proto3" json:"Corrective_list,omitempty"`
	Action         CorrectiveActions `protobuf:"varint,2,opt,name=action,proto3,enum=crypto.CorrectiveActions" json:"action,omitempty"`
}

func (x *CryptoCorrectiveDepositRequest) Reset() {
	*x = CryptoCorrectiveDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_crypto_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoCorrectiveDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoCorrectiveDepositRequest) ProtoMessage() {}

func (x *CryptoCorrectiveDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_crypto_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoCorrectiveDepositRequest.ProtoReflect.Descriptor instead.
func (*CryptoCorrectiveDepositRequest) Descriptor() ([]byte, []int) {
	return file_accounting_crypto_messages_proto_rawDescGZIP(), []int{6}
}

func (x *CryptoCorrectiveDepositRequest) GetCorrectiveList() []*CryptoWithdraw {
	if x != nil {
		return x.CorrectiveList
	}
	return nil
}

func (x *CryptoCorrectiveDepositRequest) GetAction() CorrectiveActions {
	if x != nil {
		return x.Action
	}
	return CorrectiveActions_CORRECTIVE_ACTIONS_UNSPECIFIED
}

type CryptoCorrectiveDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Error   []string `protobuf:"bytes,3,rep,name=error,proto3" json:"error,omitempty"`
	Data    string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CryptoCorrectiveDepositResponse) Reset() {
	*x = CryptoCorrectiveDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accounting_crypto_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoCorrectiveDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoCorrectiveDepositResponse) ProtoMessage() {}

func (x *CryptoCorrectiveDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accounting_crypto_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoCorrectiveDepositResponse.ProtoReflect.Descriptor instead.
func (*CryptoCorrectiveDepositResponse) Descriptor() ([]byte, []int) {
	return file_accounting_crypto_messages_proto_rawDescGZIP(), []int{7}
}

func (x *CryptoCorrectiveDepositResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CryptoCorrectiveDepositResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CryptoCorrectiveDepositResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CryptoCorrectiveDepositResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_accounting_crypto_messages_proto protoreflect.FileDescriptor

var file_accounting_crypto_messages_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x1a, 0x1d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x02, 0x0a, 0x0d, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74,
	0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x54, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52,
	0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x15,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x80, 0x03, 0x0a, 0x0e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f,
	0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0x85, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x0c, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x16,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x94, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x43, 0x6f, 0x72,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0f, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x0e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x1f, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x27, 0x5a, 0x25, 0x72, 0x61, 0x62, 0x65,
	0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x3b, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_accounting_crypto_messages_proto_rawDescOnce sync.Once
	file_accounting_crypto_messages_proto_rawDescData = file_accounting_crypto_messages_proto_rawDesc
)

func file_accounting_crypto_messages_proto_rawDescGZIP() []byte {
	file_accounting_crypto_messages_proto_rawDescOnce.Do(func() {
		file_accounting_crypto_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_accounting_crypto_messages_proto_rawDescData)
	})
	return file_accounting_crypto_messages_proto_rawDescData
}

var file_accounting_crypto_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_accounting_crypto_messages_proto_goTypes = []interface{}{
	(*CryptoDeposit)(nil),                   // 0: crypto.CryptoDeposit
	(*CryptoDepositRequest)(nil),            // 1: crypto.CryptoDepositRequest
	(*CryptoDepositResponse)(nil),           // 2: crypto.CryptoDepositResponse
	(*CryptoWithdraw)(nil),                  // 3: crypto.CryptoWithdraw
	(*CryptoWithdrawRequest)(nil),           // 4: crypto.CryptoWithdrawRequest
	(*CryptoWithdrawResponse)(nil),          // 5: crypto.CryptoWithdrawResponse
	(*CryptoCorrectiveDepositRequest)(nil),  // 6: crypto.CryptoCorrectiveDepositRequest
	(*CryptoCorrectiveDepositResponse)(nil), // 7: crypto.CryptoCorrectiveDepositResponse
	(DepositActions)(0),                     // 8: crypto.DepositActions
	(WithdrawActions)(0),                    // 9: crypto.WithdrawActions
	(CorrectiveActions)(0),                  // 10: crypto.CorrectiveActions
}
var file_accounting_crypto_messages_proto_depIdxs = []int32{
	0,  // 0: crypto.CryptoDepositRequest.deposit_list:type_name -> crypto.CryptoDeposit
	8,  // 1: crypto.CryptoDepositRequest.action:type_name -> crypto.DepositActions
	3,  // 2: crypto.CryptoWithdrawRequest.withdraw_list:type_name -> crypto.CryptoWithdraw
	9,  // 3: crypto.CryptoWithdrawRequest.action:type_name -> crypto.WithdrawActions
	3,  // 4: crypto.CryptoCorrectiveDepositRequest.Corrective_list:type_name -> crypto.CryptoWithdraw
	10, // 5: crypto.CryptoCorrectiveDepositRequest.action:type_name -> crypto.CorrectiveActions
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_accounting_crypto_messages_proto_init() }
func file_accounting_crypto_messages_proto_init() {
	if File_accounting_crypto_messages_proto != nil {
		return
	}
	file_accounting_crypto_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_accounting_crypto_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoDeposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_crypto_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_crypto_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_crypto_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoWithdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_crypto_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_crypto_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoWithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_crypto_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoCorrectiveDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accounting_crypto_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoCorrectiveDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accounting_crypto_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_accounting_crypto_messages_proto_goTypes,
		DependencyIndexes: file_accounting_crypto_messages_proto_depIdxs,
		MessageInfos:      file_accounting_crypto_messages_proto_msgTypes,
	}.Build()
	File_accounting_crypto_messages_proto = out.File
	file_accounting_crypto_messages_proto_rawDesc = nil
	file_accounting_crypto_messages_proto_goTypes = nil
	file_accounting_crypto_messages_proto_depIdxs = nil
}
