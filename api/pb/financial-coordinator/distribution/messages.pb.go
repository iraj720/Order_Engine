// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: financial-coordinator/distribution/messages.proto

package distribution

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Fill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Type          string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Quantity      string `protobuf:"bytes,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *Fill) Reset() {
	*x = Fill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fill) ProtoMessage() {}

func (x *Fill) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fill.ProtoReflect.Descriptor instead.
func (*Fill) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_distribution_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Fill) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Fill) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *Fill) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Fill) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

type Distribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	User            string                 `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	UserNid         string                 `protobuf:"bytes,3,opt,name=user_nid,json=userNid,proto3" json:"user_nid,omitempty"`
	UserName        string                 `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserWarehouse   string                 `protobuf:"bytes,5,opt,name=user_warehouse,json=userWarehouse,proto3" json:"user_warehouse,omitempty"`
	Broker          string                 `protobuf:"bytes,6,opt,name=broker,proto3" json:"broker,omitempty"`
	BrokerWarehouse string                 `protobuf:"bytes,7,opt,name=broker_warehouse,json=brokerWarehouse,proto3" json:"broker_warehouse,omitempty"`
	Asset           string                 `protobuf:"bytes,8,opt,name=asset,proto3" json:"asset,omitempty"`
	Quantity        string                 `protobuf:"bytes,9,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ReferralNumber  string                 `protobuf:"bytes,10,opt,name=referral_number,json=referralNumber,proto3" json:"referral_number,omitempty"`
	Status          Status                 `protobuf:"varint,11,opt,name=status,proto3,enum=rabex.api.financialCoordinator.distribution.Status" json:"status,omitempty"`
	Description     string                 `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	Meta            string                 `protobuf:"bytes,13,opt,name=meta,proto3" json:"meta,omitempty"`
	Type            Type                   `protobuf:"varint,14,opt,name=type,proto3,enum=rabex.api.financialCoordinator.distribution.Type" json:"type,omitempty"`
	Created         *timestamppb.Timestamp `protobuf:"bytes,31,opt,name=created,proto3" json:"created,omitempty"`
	Updated         *timestamppb.Timestamp `protobuf:"bytes,32,opt,name=updated,proto3" json:"updated,omitempty"`
	Fills           []*Fill                `protobuf:"bytes,33,rep,name=fills,proto3" json:"fills,omitempty"`
}

func (x *Distribution) Reset() {
	*x = Distribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Distribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distribution) ProtoMessage() {}

func (x *Distribution) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distribution.ProtoReflect.Descriptor instead.
func (*Distribution) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_distribution_messages_proto_rawDescGZIP(), []int{1}
}

func (x *Distribution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Distribution) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Distribution) GetUserNid() string {
	if x != nil {
		return x.UserNid
	}
	return ""
}

func (x *Distribution) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Distribution) GetUserWarehouse() string {
	if x != nil {
		return x.UserWarehouse
	}
	return ""
}

func (x *Distribution) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *Distribution) GetBrokerWarehouse() string {
	if x != nil {
		return x.BrokerWarehouse
	}
	return ""
}

func (x *Distribution) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *Distribution) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *Distribution) GetReferralNumber() string {
	if x != nil {
		return x.ReferralNumber
	}
	return ""
}

func (x *Distribution) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *Distribution) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Distribution) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *Distribution) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *Distribution) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Distribution) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Distribution) GetFills() []*Fill {
	if x != nil {
		return x.Fills
	}
	return nil
}

type DistributionHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	User           string                 `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	UserWarehouse  string                 `protobuf:"bytes,3,opt,name=user_warehouse,json=userWarehouse,proto3" json:"user_warehouse,omitempty"`
	Asset          string                 `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	Quantity       string                 `protobuf:"bytes,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ReferralNumber string                 `protobuf:"bytes,6,opt,name=referral_number,json=referralNumber,proto3" json:"referral_number,omitempty"`
	Status         Status                 `protobuf:"varint,7,opt,name=status,proto3,enum=rabex.api.financialCoordinator.distribution.Status" json:"status,omitempty"`
	Type           Type                   `protobuf:"varint,8,opt,name=type,proto3,enum=rabex.api.financialCoordinator.distribution.Type" json:"type,omitempty"`
	Created        *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=created,proto3" json:"created,omitempty"`
	Updated        *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *DistributionHistory) Reset() {
	*x = DistributionHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributionHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionHistory) ProtoMessage() {}

func (x *DistributionHistory) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionHistory.ProtoReflect.Descriptor instead.
func (*DistributionHistory) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_distribution_messages_proto_rawDescGZIP(), []int{2}
}

func (x *DistributionHistory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DistributionHistory) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DistributionHistory) GetUserWarehouse() string {
	if x != nil {
		return x.UserWarehouse
	}
	return ""
}

func (x *DistributionHistory) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DistributionHistory) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *DistributionHistory) GetReferralNumber() string {
	if x != nil {
		return x.ReferralNumber
	}
	return ""
}

func (x *DistributionHistory) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *DistributionHistory) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *DistributionHistory) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *DistributionHistory) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

type DistributionFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserWarehouseId      string                 `protobuf:"bytes,3,opt,name=user_warehouse_id,json=userWarehouseId,proto3" json:"user_warehouse_id,omitempty"`
	BrokerId             string                 `protobuf:"bytes,4,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`
	BrokerWarehouseId    string                 `protobuf:"bytes,5,opt,name=broker_warehouse_id,json=brokerWarehouseId,proto3" json:"broker_warehouse_id,omitempty"`
	ReferralNumber       string                 `protobuf:"bytes,6,opt,name=referral_number,json=referralNumber,proto3" json:"referral_number,omitempty"`
	Asset                string                 `protobuf:"bytes,7,opt,name=asset,proto3" json:"asset,omitempty"`
	Status               Status                 `protobuf:"varint,8,opt,name=status,proto3,enum=rabex.api.financialCoordinator.distribution.Status" json:"status,omitempty"`
	QuantityFloor        string                 `protobuf:"bytes,9,opt,name=quantity_floor,json=quantityFloor,proto3" json:"quantity_floor,omitempty"`
	QuantityCeil         string                 `protobuf:"bytes,10,opt,name=quantity_ceil,json=quantityCeil,proto3" json:"quantity_ceil,omitempty"`
	Type                 Type                   `protobuf:"varint,11,opt,name=type,proto3,enum=rabex.api.financialCoordinator.distribution.Type" json:"type,omitempty"`
	UserNid              string                 `protobuf:"bytes,12,opt,name=user_nid,json=userNid,proto3" json:"user_nid,omitempty"`
	CreatedTimeStart     *timestamppb.Timestamp `protobuf:"bytes,31,opt,name=created_time_start,json=createdTimeStart,proto3" json:"created_time_start,omitempty"`
	CreatedTimeEnd       *timestamppb.Timestamp `protobuf:"bytes,32,opt,name=created_time_end,json=createdTimeEnd,proto3" json:"created_time_end,omitempty"`
	LastUpdatedTimeStart *timestamppb.Timestamp `protobuf:"bytes,33,opt,name=last_updated_time_start,json=lastUpdatedTimeStart,proto3" json:"last_updated_time_start,omitempty"`
	LastUpdatedTimeEnd   *timestamppb.Timestamp `protobuf:"bytes,34,opt,name=last_updated_time_end,json=lastUpdatedTimeEnd,proto3" json:"last_updated_time_end,omitempty"`
	Page                 uint32                 `protobuf:"varint,41,opt,name=page,proto3" json:"page,omitempty"`                            // for pagination - determines what `page
	PageLimit            uint32                 `protobuf:"varint,42,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"` // for pagination - determines number of records in each page
	IsCsvRequired        bool                   `protobuf:"varint,43,opt,name=is_csv_required,json=isCsvRequired,proto3" json:"is_csv_required,omitempty"`
}

func (x *DistributionFilterRequest) Reset() {
	*x = DistributionFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributionFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionFilterRequest) ProtoMessage() {}

func (x *DistributionFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionFilterRequest.ProtoReflect.Descriptor instead.
func (*DistributionFilterRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_distribution_messages_proto_rawDescGZIP(), []int{3}
}

func (x *DistributionFilterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DistributionFilterRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DistributionFilterRequest) GetUserWarehouseId() string {
	if x != nil {
		return x.UserWarehouseId
	}
	return ""
}

func (x *DistributionFilterRequest) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *DistributionFilterRequest) GetBrokerWarehouseId() string {
	if x != nil {
		return x.BrokerWarehouseId
	}
	return ""
}

func (x *DistributionFilterRequest) GetReferralNumber() string {
	if x != nil {
		return x.ReferralNumber
	}
	return ""
}

func (x *DistributionFilterRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DistributionFilterRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *DistributionFilterRequest) GetQuantityFloor() string {
	if x != nil {
		return x.QuantityFloor
	}
	return ""
}

func (x *DistributionFilterRequest) GetQuantityCeil() string {
	if x != nil {
		return x.QuantityCeil
	}
	return ""
}

func (x *DistributionFilterRequest) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *DistributionFilterRequest) GetUserNid() string {
	if x != nil {
		return x.UserNid
	}
	return ""
}

func (x *DistributionFilterRequest) GetCreatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeStart
	}
	return nil
}

func (x *DistributionFilterRequest) GetCreatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeEnd
	}
	return nil
}

func (x *DistributionFilterRequest) GetLastUpdatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedTimeStart
	}
	return nil
}

func (x *DistributionFilterRequest) GetLastUpdatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedTimeEnd
	}
	return nil
}

func (x *DistributionFilterRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DistributionFilterRequest) GetPageLimit() uint32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

func (x *DistributionFilterRequest) GetIsCsvRequired() bool {
	if x != nil {
		return x.IsCsvRequired
	}
	return false
}

type DistributionFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   []string                         `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`
	Status  string                           `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string                           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DistributionFilterResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Csv     string                           `protobuf:"bytes,5,opt,name=csv,proto3" json:"csv,omitempty"`
}

func (x *DistributionFilterResponse) Reset() {
	*x = DistributionFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributionFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionFilterResponse) ProtoMessage() {}

func (x *DistributionFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionFilterResponse.ProtoReflect.Descriptor instead.
func (*DistributionFilterResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_distribution_messages_proto_rawDescGZIP(), []int{4}
}

func (x *DistributionFilterResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *DistributionFilterResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DistributionFilterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DistributionFilterResponse) GetData() *DistributionFilterResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DistributionFilterResponse) GetCsv() string {
	if x != nil {
		return x.Csv
	}
	return ""
}

type DistributionHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             Type                   `protobuf:"varint,1,opt,name=type,proto3,enum=rabex.api.financialCoordinator.distribution.Type" json:"type,omitempty"`
	CreatedTimeStart *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_time_start,json=createdTimeStart,proto3" json:"created_time_start,omitempty"`
	CreatedTimeEnd   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_time_end,json=createdTimeEnd,proto3" json:"created_time_end,omitempty"`
	Page             uint32                 `protobuf:"varint,13,opt,name=page,proto3" json:"page,omitempty"`                            // for pagination - determines what `page
	PageLimit        uint32                 `protobuf:"varint,14,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"` // for pagination - determines number of records in each page
}

func (x *DistributionHistoryRequest) Reset() {
	*x = DistributionHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributionHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionHistoryRequest) ProtoMessage() {}

func (x *DistributionHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionHistoryRequest.ProtoReflect.Descriptor instead.
func (*DistributionHistoryRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_distribution_messages_proto_rawDescGZIP(), []int{5}
}

func (x *DistributionHistoryRequest) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *DistributionHistoryRequest) GetCreatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeStart
	}
	return nil
}

func (x *DistributionHistoryRequest) GetCreatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeEnd
	}
	return nil
}

func (x *DistributionHistoryRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DistributionHistoryRequest) GetPageLimit() uint32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

type DistributionHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   []string                          `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`
	Status  string                            `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string                            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DistributionHistoryResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DistributionHistoryResponse) Reset() {
	*x = DistributionHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributionHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionHistoryResponse) ProtoMessage() {}

func (x *DistributionHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionHistoryResponse.ProtoReflect.Descriptor instead.
func (*DistributionHistoryResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_distribution_messages_proto_rawDescGZIP(), []int{6}
}

func (x *DistributionHistoryResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *DistributionHistoryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DistributionHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DistributionHistoryResponse) GetData() *DistributionHistoryResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetReferralSumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetReferralSumRequest) Reset() {
	*x = GetReferralSumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReferralSumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferralSumRequest) ProtoMessage() {}

func (x *GetReferralSumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferralSumRequest.ProtoReflect.Descriptor instead.
func (*GetReferralSumRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_distribution_messages_proto_rawDescGZIP(), []int{7}
}

type GetReferralSumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// repeated string error = 1;
	// string status = 2;
	Message string                       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GetReferralSumResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetReferralSumResponse) Reset() {
	*x = GetReferralSumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReferralSumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferralSumResponse) ProtoMessage() {}

func (x *GetReferralSumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferralSumResponse.ProtoReflect.Descriptor instead.
func (*GetReferralSumResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_distribution_messages_proto_rawDescGZIP(), []int{8}
}

func (x *GetReferralSumResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetReferralSumResponse) GetData() *GetReferralSumResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DistributionFilterResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*Distribution `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *DistributionFilterResponse_Data) Reset() {
	*x = DistributionFilterResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributionFilterResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionFilterResponse_Data) ProtoMessage() {}

func (x *DistributionFilterResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionFilterResponse_Data.ProtoReflect.Descriptor instead.
func (*DistributionFilterResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_distribution_messages_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DistributionFilterResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DistributionFilterResponse_Data) GetRows() []*Distribution {
	if x != nil {
		return x.Rows
	}
	return nil
}

type DistributionHistoryResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*DistributionHistory `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *DistributionHistoryResponse_Data) Reset() {
	*x = DistributionHistoryResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributionHistoryResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionHistoryResponse_Data) ProtoMessage() {}

func (x *DistributionHistoryResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionHistoryResponse_Data.ProtoReflect.Descriptor instead.
func (*DistributionHistoryResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_distribution_messages_proto_rawDescGZIP(), []int{6, 0}
}

func (x *DistributionHistoryResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DistributionHistoryResponse_Data) GetRows() []*DistributionHistory {
	if x != nil {
		return x.Rows
	}
	return nil
}

type GetReferralSumResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SettledSum   string `protobuf:"bytes,1,opt,name=settled_sum,json=settledSum,proto3" json:"settled_sum,omitempty"`
	UnsettledSum string `protobuf:"bytes,2,opt,name=unsettled_sum,json=unsettledSum,proto3" json:"unsettled_sum,omitempty"`
	Asset        string `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *GetReferralSumResponse_Data) Reset() {
	*x = GetReferralSumResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReferralSumResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferralSumResponse_Data) ProtoMessage() {}

func (x *GetReferralSumResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_distribution_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferralSumResponse_Data.ProtoReflect.Descriptor instead.
func (*GetReferralSumResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_distribution_messages_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GetReferralSumResponse_Data) GetSettledSum() string {
	if x != nil {
		return x.SettledSum
	}
	return ""
}

func (x *GetReferralSumResponse_Data) GetUnsettledSum() string {
	if x != nil {
		return x.UnsettledSum
	}
	return ""
}

func (x *GetReferralSumResponse_Data) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

var File_financial_coordinator_distribution_messages_proto protoreflect.FileDescriptor

var file_financial_coordinator_distribution_messages_proto_rawDesc = []byte{
	0x0a, 0x31, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x2b, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x6d, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0xae, 0x05, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x57, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x6c,
	0x73, 0x18, 0x21, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x6c, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x6c,
	0x73, 0x22, 0xbb, 0x03, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x4b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x33, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x72, 0x61, 0x62,
	0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x84, 0x07, 0x0a, 0x19, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x4b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33,
	0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x65, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x43, 0x65, 0x69, 0x6c, 0x12, 0x45, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x64, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x51, 0x0a, 0x17, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x4d, 0x0a, 0x15,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x63, 0x73, 0x76, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x43, 0x73, 0x76, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0xc5, 0x02, 0x0a, 0x1a, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x60, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x72, 0x61,
	0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73,
	0x76, 0x1a, 0x6b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x4d, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xa6,
	0x02, 0x0a, 0x1a, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x72, 0x61,
	0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x44,
	0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65,
	0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xbc, 0x02, 0x0a, 0x1b, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x61, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e,
	0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x72, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x54, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xf4, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x53,
	0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x5c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x48, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x62, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x53, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x75,
	0x6e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x53, 0x75, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x3e, 0x5a, 0x3c, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c,
	0x2d, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_financial_coordinator_distribution_messages_proto_rawDescOnce sync.Once
	file_financial_coordinator_distribution_messages_proto_rawDescData = file_financial_coordinator_distribution_messages_proto_rawDesc
)

func file_financial_coordinator_distribution_messages_proto_rawDescGZIP() []byte {
	file_financial_coordinator_distribution_messages_proto_rawDescOnce.Do(func() {
		file_financial_coordinator_distribution_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_financial_coordinator_distribution_messages_proto_rawDescData)
	})
	return file_financial_coordinator_distribution_messages_proto_rawDescData
}

var file_financial_coordinator_distribution_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_financial_coordinator_distribution_messages_proto_goTypes = []interface{}{
	(*Fill)(nil),                             // 0: rabex.api.financialCoordinator.distribution.Fill
	(*Distribution)(nil),                     // 1: rabex.api.financialCoordinator.distribution.Distribution
	(*DistributionHistory)(nil),              // 2: rabex.api.financialCoordinator.distribution.DistributionHistory
	(*DistributionFilterRequest)(nil),        // 3: rabex.api.financialCoordinator.distribution.DistributionFilterRequest
	(*DistributionFilterResponse)(nil),       // 4: rabex.api.financialCoordinator.distribution.DistributionFilterResponse
	(*DistributionHistoryRequest)(nil),       // 5: rabex.api.financialCoordinator.distribution.DistributionHistoryRequest
	(*DistributionHistoryResponse)(nil),      // 6: rabex.api.financialCoordinator.distribution.DistributionHistoryResponse
	(*GetReferralSumRequest)(nil),            // 7: rabex.api.financialCoordinator.distribution.GetReferralSumRequest
	(*GetReferralSumResponse)(nil),           // 8: rabex.api.financialCoordinator.distribution.GetReferralSumResponse
	(*DistributionFilterResponse_Data)(nil),  // 9: rabex.api.financialCoordinator.distribution.DistributionFilterResponse.Data
	(*DistributionHistoryResponse_Data)(nil), // 10: rabex.api.financialCoordinator.distribution.DistributionHistoryResponse.Data
	(*GetReferralSumResponse_Data)(nil),      // 11: rabex.api.financialCoordinator.distribution.GetReferralSumResponse.Data
	(Status)(0),                              // 12: rabex.api.financialCoordinator.distribution.Status
	(Type)(0),                                // 13: rabex.api.financialCoordinator.distribution.Type
	(*timestamppb.Timestamp)(nil),            // 14: google.protobuf.Timestamp
}
var file_financial_coordinator_distribution_messages_proto_depIdxs = []int32{
	12, // 0: rabex.api.financialCoordinator.distribution.Distribution.status:type_name -> rabex.api.financialCoordinator.distribution.Status
	13, // 1: rabex.api.financialCoordinator.distribution.Distribution.type:type_name -> rabex.api.financialCoordinator.distribution.Type
	14, // 2: rabex.api.financialCoordinator.distribution.Distribution.created:type_name -> google.protobuf.Timestamp
	14, // 3: rabex.api.financialCoordinator.distribution.Distribution.updated:type_name -> google.protobuf.Timestamp
	0,  // 4: rabex.api.financialCoordinator.distribution.Distribution.fills:type_name -> rabex.api.financialCoordinator.distribution.Fill
	12, // 5: rabex.api.financialCoordinator.distribution.DistributionHistory.status:type_name -> rabex.api.financialCoordinator.distribution.Status
	13, // 6: rabex.api.financialCoordinator.distribution.DistributionHistory.type:type_name -> rabex.api.financialCoordinator.distribution.Type
	14, // 7: rabex.api.financialCoordinator.distribution.DistributionHistory.created:type_name -> google.protobuf.Timestamp
	14, // 8: rabex.api.financialCoordinator.distribution.DistributionHistory.updated:type_name -> google.protobuf.Timestamp
	12, // 9: rabex.api.financialCoordinator.distribution.DistributionFilterRequest.status:type_name -> rabex.api.financialCoordinator.distribution.Status
	13, // 10: rabex.api.financialCoordinator.distribution.DistributionFilterRequest.type:type_name -> rabex.api.financialCoordinator.distribution.Type
	14, // 11: rabex.api.financialCoordinator.distribution.DistributionFilterRequest.created_time_start:type_name -> google.protobuf.Timestamp
	14, // 12: rabex.api.financialCoordinator.distribution.DistributionFilterRequest.created_time_end:type_name -> google.protobuf.Timestamp
	14, // 13: rabex.api.financialCoordinator.distribution.DistributionFilterRequest.last_updated_time_start:type_name -> google.protobuf.Timestamp
	14, // 14: rabex.api.financialCoordinator.distribution.DistributionFilterRequest.last_updated_time_end:type_name -> google.protobuf.Timestamp
	9,  // 15: rabex.api.financialCoordinator.distribution.DistributionFilterResponse.data:type_name -> rabex.api.financialCoordinator.distribution.DistributionFilterResponse.Data
	13, // 16: rabex.api.financialCoordinator.distribution.DistributionHistoryRequest.type:type_name -> rabex.api.financialCoordinator.distribution.Type
	14, // 17: rabex.api.financialCoordinator.distribution.DistributionHistoryRequest.created_time_start:type_name -> google.protobuf.Timestamp
	14, // 18: rabex.api.financialCoordinator.distribution.DistributionHistoryRequest.created_time_end:type_name -> google.protobuf.Timestamp
	10, // 19: rabex.api.financialCoordinator.distribution.DistributionHistoryResponse.data:type_name -> rabex.api.financialCoordinator.distribution.DistributionHistoryResponse.Data
	11, // 20: rabex.api.financialCoordinator.distribution.GetReferralSumResponse.data:type_name -> rabex.api.financialCoordinator.distribution.GetReferralSumResponse.Data
	1,  // 21: rabex.api.financialCoordinator.distribution.DistributionFilterResponse.Data.rows:type_name -> rabex.api.financialCoordinator.distribution.Distribution
	2,  // 22: rabex.api.financialCoordinator.distribution.DistributionHistoryResponse.Data.rows:type_name -> rabex.api.financialCoordinator.distribution.DistributionHistory
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_financial_coordinator_distribution_messages_proto_init() }
func file_financial_coordinator_distribution_messages_proto_init() {
	if File_financial_coordinator_distribution_messages_proto != nil {
		return
	}
	file_financial_coordinator_distribution_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_financial_coordinator_distribution_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_distribution_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Distribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_distribution_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributionHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_distribution_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributionFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_distribution_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributionFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_distribution_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributionHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_distribution_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributionHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_distribution_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReferralSumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_distribution_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReferralSumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_distribution_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributionFilterResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_distribution_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributionHistoryResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_distribution_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReferralSumResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_financial_coordinator_distribution_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_financial_coordinator_distribution_messages_proto_goTypes,
		DependencyIndexes: file_financial_coordinator_distribution_messages_proto_depIdxs,
		MessageInfos:      file_financial_coordinator_distribution_messages_proto_msgTypes,
	}.Build()
	File_financial_coordinator_distribution_messages_proto = out.File
	file_financial_coordinator_distribution_messages_proto_rawDesc = nil
	file_financial_coordinator_distribution_messages_proto_goTypes = nil
	file_financial_coordinator_distribution_messages_proto_depIdxs = nil
}
