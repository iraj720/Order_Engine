// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: financial-coordinator/crypto/messages.proto

package crypto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DepositClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceNumber string        `protobuf:"bytes,2,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	Asset         string        `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	Network       string        `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	Qty           string        `protobuf:"bytes,5,opt,name=qty,proto3" json:"qty,omitempty"`
	Treasury      string        `protobuf:"bytes,6,opt,name=treasury,proto3" json:"treasury,omitempty"`
	ToAddress     string        `protobuf:"bytes,7,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"` // rabex (broker) address that user deposits crypto to it
	ToMemo        string        `protobuf:"bytes,8,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`          // rabex (broker) memo that user deposits crypto to it
	TrxInfo       string        `protobuf:"bytes,9,opt,name=trx_info,json=trxInfo,proto3" json:"trx_info,omitempty"`
	Status        DepositStatus `protobuf:"varint,10,opt,name=status,proto3,enum=financialCoordinator.crypto.DepositStatus" json:"status,omitempty"`
	Type          DepositType   `protobuf:"varint,11,opt,name=type,proto3,enum=financialCoordinator.crypto.DepositType" json:"type,omitempty"`
}

func (x *DepositClaim) Reset() {
	*x = DepositClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaim) ProtoMessage() {}

func (x *DepositClaim) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaim.ProtoReflect.Descriptor instead.
func (*DepositClaim) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{0}
}

func (x *DepositClaim) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DepositClaim) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *DepositClaim) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DepositClaim) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DepositClaim) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *DepositClaim) GetTreasury() string {
	if x != nil {
		return x.Treasury
	}
	return ""
}

func (x *DepositClaim) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *DepositClaim) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *DepositClaim) GetTrxInfo() string {
	if x != nil {
		return x.TrxInfo
	}
	return ""
}

func (x *DepositClaim) GetStatus() DepositStatus {
	if x != nil {
		return x.Status
	}
	return DepositStatus_CRYPTO_DEPOSIT_STATUS_UNSPECIFIED
}

func (x *DepositClaim) GetType() DepositType {
	if x != nil {
		return x.Type
	}
	return DepositType_DEPOSIT_TYPE_UNSPECIFIED
}

type CryptoDepositTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkflowId        string      `protobuf:"bytes,2,opt,name=Workflow_id,json=WorkflowId,proto3" json:"Workflow_id,omitempty"`
	WorkflowRunId     string      `protobuf:"bytes,3,opt,name=WorkflowRun_id,json=WorkflowRunId,proto3" json:"WorkflowRun_id,omitempty"`
	TrxInfo           string      `protobuf:"bytes,4,opt,name=trx_info,json=trxInfo,proto3" json:"trx_info,omitempty"`
	Initiator         string      `protobuf:"bytes,5,opt,name=initiator,proto3" json:"initiator,omitempty"`
	InitiatorName     string      `protobuf:"bytes,6,opt,name=initiator_name,json=initiatorName,proto3" json:"initiator_name,omitempty"`
	InvoiceNumber     string      `protobuf:"bytes,7,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	Asset             string      `protobuf:"bytes,8,opt,name=asset,proto3" json:"asset,omitempty"`
	Quantity          string      `protobuf:"bytes,9,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Network           string      `protobuf:"bytes,10,opt,name=network,proto3" json:"network,omitempty"`
	Type              DepositType `protobuf:"varint,11,opt,name=type,proto3,enum=financialCoordinator.crypto.DepositType" json:"type,omitempty"`
	FromAddress       string      `protobuf:"bytes,12,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	FromMemo          string      `protobuf:"bytes,13,opt,name=from_memo,json=fromMemo,proto3" json:"from_memo,omitempty"`
	ToAddress         string      `protobuf:"bytes,14,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	ToMemo            string      `protobuf:"bytes,15,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`
	User              string      `protobuf:"bytes,16,opt,name=user,proto3" json:"user,omitempty"`
	UserName          string      `protobuf:"bytes,17,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserNid           string      `protobuf:"bytes,18,opt,name=user_nid,json=userNid,proto3" json:"user_nid,omitempty"`
	UserWarehouseId   string      `protobuf:"bytes,19,opt,name=user_warehouse_id,json=userWarehouseId,proto3" json:"user_warehouse_id,omitempty"`
	BrokerWarehouseId string      `protobuf:"bytes,20,opt,name=broker_warehouse_id,json=brokerWarehouseId,proto3" json:"broker_warehouse_id,omitempty"`
	// string broker_treasury_id = 21;
	BrokerId string `protobuf:"bytes,22,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`
	// string channel_id= 23;
	TreasuryId    string                 `protobuf:"bytes,24,opt,name=treasury_id,json=treasuryId,proto3" json:"treasury_id,omitempty"`
	StatusCode    DepositStatus          `protobuf:"varint,25,opt,name=status_code,json=statusCode,proto3,enum=financialCoordinator.crypto.DepositStatus" json:"status_code,omitempty"`
	StatusMsg     string                 `protobuf:"bytes,26,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
	Description   string                 `protobuf:"bytes,27,opt,name=description,proto3" json:"description,omitempty"`
	DeviceIp      string                 `protobuf:"bytes,28,opt,name=device_ip,json=deviceIp,proto3" json:"device_ip,omitempty"`
	DeviceMeta    string                 `protobuf:"bytes,29,opt,name=device_meta,json=deviceMeta,proto3" json:"device_meta,omitempty"`
	Meta          string                 `protobuf:"bytes,30,opt,name=meta,proto3" json:"meta,omitempty"`
	Txid          string                 `protobuf:"bytes,31,opt,name=txid,proto3" json:"txid,omitempty"`
	ConfirmNumber uint64                 `protobuf:"varint,32,opt,name=confirm_number,json=confirmNumber,proto3" json:"confirm_number,omitempty"`
	BlockHeight   uint64                 `protobuf:"varint,33,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TreasuryType  TreasuryType           `protobuf:"varint,34,opt,name=treasury_type,json=treasuryType,proto3,enum=financialCoordinator.crypto.TreasuryType" json:"treasury_type,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,55,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *CryptoDepositTransaction) Reset() {
	*x = CryptoDepositTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoDepositTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoDepositTransaction) ProtoMessage() {}

func (x *CryptoDepositTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoDepositTransaction.ProtoReflect.Descriptor instead.
func (*CryptoDepositTransaction) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{1}
}

func (x *CryptoDepositTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CryptoDepositTransaction) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *CryptoDepositTransaction) GetWorkflowRunId() string {
	if x != nil {
		return x.WorkflowRunId
	}
	return ""
}

func (x *CryptoDepositTransaction) GetTrxInfo() string {
	if x != nil {
		return x.TrxInfo
	}
	return ""
}

func (x *CryptoDepositTransaction) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

func (x *CryptoDepositTransaction) GetInitiatorName() string {
	if x != nil {
		return x.InitiatorName
	}
	return ""
}

func (x *CryptoDepositTransaction) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *CryptoDepositTransaction) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *CryptoDepositTransaction) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *CryptoDepositTransaction) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *CryptoDepositTransaction) GetType() DepositType {
	if x != nil {
		return x.Type
	}
	return DepositType_DEPOSIT_TYPE_UNSPECIFIED
}

func (x *CryptoDepositTransaction) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *CryptoDepositTransaction) GetFromMemo() string {
	if x != nil {
		return x.FromMemo
	}
	return ""
}

func (x *CryptoDepositTransaction) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *CryptoDepositTransaction) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *CryptoDepositTransaction) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CryptoDepositTransaction) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CryptoDepositTransaction) GetUserNid() string {
	if x != nil {
		return x.UserNid
	}
	return ""
}

func (x *CryptoDepositTransaction) GetUserWarehouseId() string {
	if x != nil {
		return x.UserWarehouseId
	}
	return ""
}

func (x *CryptoDepositTransaction) GetBrokerWarehouseId() string {
	if x != nil {
		return x.BrokerWarehouseId
	}
	return ""
}

func (x *CryptoDepositTransaction) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *CryptoDepositTransaction) GetTreasuryId() string {
	if x != nil {
		return x.TreasuryId
	}
	return ""
}

func (x *CryptoDepositTransaction) GetStatusCode() DepositStatus {
	if x != nil {
		return x.StatusCode
	}
	return DepositStatus_CRYPTO_DEPOSIT_STATUS_UNSPECIFIED
}

func (x *CryptoDepositTransaction) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *CryptoDepositTransaction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CryptoDepositTransaction) GetDeviceIp() string {
	if x != nil {
		return x.DeviceIp
	}
	return ""
}

func (x *CryptoDepositTransaction) GetDeviceMeta() string {
	if x != nil {
		return x.DeviceMeta
	}
	return ""
}

func (x *CryptoDepositTransaction) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *CryptoDepositTransaction) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *CryptoDepositTransaction) GetConfirmNumber() uint64 {
	if x != nil {
		return x.ConfirmNumber
	}
	return 0
}

func (x *CryptoDepositTransaction) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *CryptoDepositTransaction) GetTreasuryType() TreasuryType {
	if x != nil {
		return x.TreasuryType
	}
	return TreasuryType_TREASURY_TYPE_UNSPECIFIED
}

func (x *CryptoDepositTransaction) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *CryptoDepositTransaction) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

type CryptoDepositHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceNumber   string                 `protobuf:"bytes,2,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	Asset           string                 `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	Quantity        string                 `protobuf:"bytes,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Network         string                 `protobuf:"bytes,5,opt,name=network,proto3" json:"network,omitempty"`
	FromAddress     string                 `protobuf:"bytes,6,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	FromMemo        string                 `protobuf:"bytes,7,opt,name=from_memo,json=fromMemo,proto3" json:"from_memo,omitempty"`
	UserWarehouseId string                 `protobuf:"bytes,8,opt,name=user_warehouse_id,json=userWarehouseId,proto3" json:"user_warehouse_id,omitempty"`
	Status          DepositStatus          `protobuf:"varint,9,opt,name=status,proto3,enum=financialCoordinator.crypto.DepositStatus" json:"status,omitempty"`
	TrxInfo         string                 `protobuf:"bytes,10,opt,name=trx_info,json=trxInfo,proto3" json:"trx_info,omitempty"`
	Txid            string                 `protobuf:"bytes,11,opt,name=txid,proto3" json:"txid,omitempty"`
	Created         *timestamppb.Timestamp `protobuf:"bytes,31,opt,name=created,proto3" json:"created,omitempty"`
	Updated         *timestamppb.Timestamp `protobuf:"bytes,32,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *CryptoDepositHistory) Reset() {
	*x = CryptoDepositHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoDepositHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoDepositHistory) ProtoMessage() {}

func (x *CryptoDepositHistory) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoDepositHistory.ProtoReflect.Descriptor instead.
func (*CryptoDepositHistory) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{2}
}

func (x *CryptoDepositHistory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CryptoDepositHistory) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *CryptoDepositHistory) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *CryptoDepositHistory) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *CryptoDepositHistory) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *CryptoDepositHistory) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *CryptoDepositHistory) GetFromMemo() string {
	if x != nil {
		return x.FromMemo
	}
	return ""
}

func (x *CryptoDepositHistory) GetUserWarehouseId() string {
	if x != nil {
		return x.UserWarehouseId
	}
	return ""
}

func (x *CryptoDepositHistory) GetStatus() DepositStatus {
	if x != nil {
		return x.Status
	}
	return DepositStatus_CRYPTO_DEPOSIT_STATUS_UNSPECIFIED
}

func (x *CryptoDepositHistory) GetTrxInfo() string {
	if x != nil {
		return x.TrxInfo
	}
	return ""
}

func (x *CryptoDepositHistory) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *CryptoDepositHistory) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *CryptoDepositHistory) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

type DepositClaimInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset     string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Network   string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Qty       string `protobuf:"bytes,3,opt,name=qty,proto3" json:"qty,omitempty"`
	Treasury  string `protobuf:"bytes,4,opt,name=treasury,proto3" json:"treasury,omitempty"`                    // rabex (broker) treasury
	ToAddress string `protobuf:"bytes,5,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"` // rabex (broker) address that user deposits crypto to it
	ToMemo    string `protobuf:"bytes,6,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`          // rabex (broker) memo that user deposits crypto to it
}

func (x *DepositClaimInitRequest) Reset() {
	*x = DepositClaimInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimInitRequest) ProtoMessage() {}

func (x *DepositClaimInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimInitRequest.ProtoReflect.Descriptor instead.
func (*DepositClaimInitRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{3}
}

func (x *DepositClaimInitRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DepositClaimInitRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DepositClaimInitRequest) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *DepositClaimInitRequest) GetTreasury() string {
	if x != nil {
		return x.Treasury
	}
	return ""
}

func (x *DepositClaimInitRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *DepositClaimInitRequest) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

type DepositClaimInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string                         `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositClaimInitResponse_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositClaimInitResponse) Reset() {
	*x = DepositClaimInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimInitResponse) ProtoMessage() {}

func (x *DepositClaimInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimInitResponse.ProtoReflect.Descriptor instead.
func (*DepositClaimInitResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{4}
}

func (x *DepositClaimInitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositClaimInitResponse) GetData() *DepositClaimInitResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositClaimInitPodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset         string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Network       string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Qty           string `protobuf:"bytes,3,opt,name=qty,proto3" json:"qty,omitempty"`
	Treasury      string `protobuf:"bytes,4,opt,name=treasury,proto3" json:"treasury,omitempty"`                    // rabex (broker) treasury
	ToAddress     string `protobuf:"bytes,5,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"` // rabex (broker) address that user deposits crypto to it
	ToMemo        string `protobuf:"bytes,6,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`          // rabex (broker) memo that user deposits crypto to it
	TrxInfo       string `protobuf:"bytes,7,opt,name=trxInfo,proto3" json:"trxInfo,omitempty"`
	User          string `protobuf:"bytes,8,opt,name=user,proto3" json:"user,omitempty"`                                        // uuid user in string form
	UserWarehouse string `protobuf:"bytes,9,opt,name=user_warehouse,json=userWarehouse,proto3" json:"user_warehouse,omitempty"` // uuid user warehouse in string form
	UserFullName  string `protobuf:"bytes,10,opt,name=user_full_name,json=userFullName,proto3" json:"user_full_name,omitempty"`
	UserNid       string `protobuf:"bytes,11,opt,name=user_nid,json=userNid,proto3" json:"user_nid,omitempty"`
}

func (x *DepositClaimInitPodRequest) Reset() {
	*x = DepositClaimInitPodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimInitPodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimInitPodRequest) ProtoMessage() {}

func (x *DepositClaimInitPodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimInitPodRequest.ProtoReflect.Descriptor instead.
func (*DepositClaimInitPodRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{5}
}

func (x *DepositClaimInitPodRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DepositClaimInitPodRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DepositClaimInitPodRequest) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *DepositClaimInitPodRequest) GetTreasury() string {
	if x != nil {
		return x.Treasury
	}
	return ""
}

func (x *DepositClaimInitPodRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *DepositClaimInitPodRequest) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *DepositClaimInitPodRequest) GetTrxInfo() string {
	if x != nil {
		return x.TrxInfo
	}
	return ""
}

func (x *DepositClaimInitPodRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DepositClaimInitPodRequest) GetUserWarehouse() string {
	if x != nil {
		return x.UserWarehouse
	}
	return ""
}

func (x *DepositClaimInitPodRequest) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *DepositClaimInitPodRequest) GetUserNid() string {
	if x != nil {
		return x.UserNid
	}
	return ""
}

type DepositClaimInitPodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string        `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositClaim `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositClaimInitPodResponse) Reset() {
	*x = DepositClaimInitPodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimInitPodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimInitPodResponse) ProtoMessage() {}

func (x *DepositClaimInitPodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimInitPodResponse.ProtoReflect.Descriptor instead.
func (*DepositClaimInitPodResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{6}
}

func (x *DepositClaimInitPodResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositClaimInitPodResponse) GetData() *DepositClaim {
	if x != nil {
		return x.Data
	}
	return nil
}

// claim pod of deposit
type DepositClaimPodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset         string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Network       string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Qty           string `protobuf:"bytes,3,opt,name=qty,proto3" json:"qty,omitempty"`
	InvoiceNumber string `protobuf:"bytes,4,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	TrxInfo       string `protobuf:"bytes,5,opt,name=trxInfo,proto3" json:"trxInfo,omitempty"`
}

func (x *DepositClaimPodRequest) Reset() {
	*x = DepositClaimPodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimPodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimPodRequest) ProtoMessage() {}

func (x *DepositClaimPodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimPodRequest.ProtoReflect.Descriptor instead.
func (*DepositClaimPodRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{7}
}

func (x *DepositClaimPodRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DepositClaimPodRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DepositClaimPodRequest) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *DepositClaimPodRequest) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *DepositClaimPodRequest) GetTrxInfo() string {
	if x != nil {
		return x.TrxInfo
	}
	return ""
}

type DepositClaimPodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string        `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositClaim `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositClaimPodResponse) Reset() {
	*x = DepositClaimPodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimPodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimPodResponse) ProtoMessage() {}

func (x *DepositClaimPodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimPodResponse.ProtoReflect.Descriptor instead.
func (*DepositClaimPodResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{8}
}

func (x *DepositClaimPodResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositClaimPodResponse) GetData() *DepositClaim {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateDepositClaimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Asset     string `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	Network   string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	Qty       string `protobuf:"bytes,4,opt,name=qty,proto3" json:"qty,omitempty"`
	Treasury  string `protobuf:"bytes,5,opt,name=treasury,proto3" json:"treasury,omitempty"`
	ToAddress string `protobuf:"bytes,6,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"` // rabex (broker) address that user deposits crypto to it
	ToMemo    string `protobuf:"bytes,7,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`          // rabex (broker) memo that user deposits crypto to it
	TrxInfo   string `protobuf:"bytes,8,opt,name=trx_info,json=trxInfo,proto3" json:"trx_info,omitempty"`
}

func (x *UpdateDepositClaimRequest) Reset() {
	*x = UpdateDepositClaimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDepositClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDepositClaimRequest) ProtoMessage() {}

func (x *UpdateDepositClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDepositClaimRequest.ProtoReflect.Descriptor instead.
func (*UpdateDepositClaimRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateDepositClaimRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDepositClaimRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *UpdateDepositClaimRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *UpdateDepositClaimRequest) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *UpdateDepositClaimRequest) GetTreasury() string {
	if x != nil {
		return x.Treasury
	}
	return ""
}

func (x *UpdateDepositClaimRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *UpdateDepositClaimRequest) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *UpdateDepositClaimRequest) GetTrxInfo() string {
	if x != nil {
		return x.TrxInfo
	}
	return ""
}

type UpdateDepositClaimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string        `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositClaim `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateDepositClaimResponse) Reset() {
	*x = UpdateDepositClaimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDepositClaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDepositClaimResponse) ProtoMessage() {}

func (x *UpdateDepositClaimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDepositClaimResponse.ProtoReflect.Descriptor instead.
func (*UpdateDepositClaimResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateDepositClaimResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateDepositClaimResponse) GetData() *DepositClaim {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositCurrentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList []string      `protobuf:"bytes,1,rep,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	Status DepositStatus `protobuf:"varint,2,opt,name=status,proto3,enum=financialCoordinator.crypto.DepositStatus" json:"status,omitempty"`
}

func (x *DepositCurrentStatus) Reset() {
	*x = DepositCurrentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositCurrentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositCurrentStatus) ProtoMessage() {}

func (x *DepositCurrentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositCurrentStatus.ProtoReflect.Descriptor instead.
func (*DepositCurrentStatus) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{11}
}

func (x *DepositCurrentStatus) GetIdList() []string {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *DepositCurrentStatus) GetStatus() DepositStatus {
	if x != nil {
		return x.Status
	}
	return DepositStatus_CRYPTO_DEPOSIT_STATUS_UNSPECIFIED
}

type DepositClaimReactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList   []string      `protobuf:"bytes,1,rep,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	ToStatus DepositStatus `protobuf:"varint,2,opt,name=to_status,json=toStatus,proto3,enum=financialCoordinator.crypto.DepositStatus" json:"to_status,omitempty"` // change status from pod to "to_status"
}

func (x *DepositClaimReactRequest) Reset() {
	*x = DepositClaimReactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimReactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimReactRequest) ProtoMessage() {}

func (x *DepositClaimReactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimReactRequest.ProtoReflect.Descriptor instead.
func (*DepositClaimReactRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{12}
}

func (x *DepositClaimReactRequest) GetIdList() []string {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *DepositClaimReactRequest) GetToStatus() DepositStatus {
	if x != nil {
		return x.ToStatus
	}
	return DepositStatus_CRYPTO_DEPOSIT_STATUS_UNSPECIFIED
}

type DepositClaimReactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string                `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositCurrentStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositClaimReactResponse) Reset() {
	*x = DepositClaimReactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimReactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimReactResponse) ProtoMessage() {}

func (x *DepositClaimReactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimReactResponse.ProtoReflect.Descriptor instead.
func (*DepositClaimReactResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{13}
}

func (x *DepositClaimReactResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositClaimReactResponse) GetData() *DepositCurrentStatus {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositTransactionInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList []string                 `protobuf:"bytes,1,rep,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	Action DepositTransactionAction `protobuf:"varint,2,opt,name=action,proto3,enum=financialCoordinator.crypto.DepositTransactionAction" json:"action,omitempty"`
}

func (x *DepositTransactionInitRequest) Reset() {
	*x = DepositTransactionInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionInitRequest) ProtoMessage() {}

func (x *DepositTransactionInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionInitRequest.ProtoReflect.Descriptor instead.
func (*DepositTransactionInitRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{14}
}

func (x *DepositTransactionInitRequest) GetIdList() []string {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *DepositTransactionInitRequest) GetAction() DepositTransactionAction {
	if x != nil {
		return x.Action
	}
	return DepositTransactionAction_DEPOSIT_TRANSACTION_ACTION_UNSPECIFIED
}

type DepositTransactionInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string                `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositCurrentStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositTransactionInitResponse) Reset() {
	*x = DepositTransactionInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionInitResponse) ProtoMessage() {}

func (x *DepositTransactionInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionInitResponse.ProtoReflect.Descriptor instead.
func (*DepositTransactionInitResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{15}
}

func (x *DepositTransactionInitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositTransactionInitResponse) GetData() *DepositCurrentStatus {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositTransactionFinalizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList []string `protobuf:"bytes,1,rep,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
}

func (x *DepositTransactionFinalizeRequest) Reset() {
	*x = DepositTransactionFinalizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionFinalizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionFinalizeRequest) ProtoMessage() {}

func (x *DepositTransactionFinalizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionFinalizeRequest.ProtoReflect.Descriptor instead.
func (*DepositTransactionFinalizeRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{16}
}

func (x *DepositTransactionFinalizeRequest) GetIdList() []string {
	if x != nil {
		return x.IdList
	}
	return nil
}

type DepositTransactionFinalizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string                `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositCurrentStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositTransactionFinalizeResponse) Reset() {
	*x = DepositTransactionFinalizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionFinalizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionFinalizeResponse) ProtoMessage() {}

func (x *DepositTransactionFinalizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionFinalizeResponse.ProtoReflect.Descriptor instead.
func (*DepositTransactionFinalizeResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{17}
}

func (x *DepositTransactionFinalizeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositTransactionFinalizeResponse) GetData() *DepositCurrentStatus {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositTransactionConfiscateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList []string `protobuf:"bytes,1,rep,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
}

func (x *DepositTransactionConfiscateRequest) Reset() {
	*x = DepositTransactionConfiscateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionConfiscateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionConfiscateRequest) ProtoMessage() {}

func (x *DepositTransactionConfiscateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionConfiscateRequest.ProtoReflect.Descriptor instead.
func (*DepositTransactionConfiscateRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{18}
}

func (x *DepositTransactionConfiscateRequest) GetIdList() []string {
	if x != nil {
		return x.IdList
	}
	return nil
}

type DepositTransactionConfiscateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string                `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositCurrentStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositTransactionConfiscateResponse) Reset() {
	*x = DepositTransactionConfiscateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionConfiscateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionConfiscateResponse) ProtoMessage() {}

func (x *DepositTransactionConfiscateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionConfiscateResponse.ProtoReflect.Descriptor instead.
func (*DepositTransactionConfiscateResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{19}
}

func (x *DepositTransactionConfiscateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositTransactionConfiscateResponse) GetData() *DepositCurrentStatus {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositTransactionSuspendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*DepositTransactionSuspendRequest_Item `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DepositTransactionSuspendRequest) Reset() {
	*x = DepositTransactionSuspendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionSuspendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionSuspendRequest) ProtoMessage() {}

func (x *DepositTransactionSuspendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionSuspendRequest.ProtoReflect.Descriptor instead.
func (*DepositTransactionSuspendRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{20}
}

func (x *DepositTransactionSuspendRequest) GetList() []*DepositTransactionSuspendRequest_Item {
	if x != nil {
		return x.List
	}
	return nil
}

type DepositTransactionSuspendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string                `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositCurrentStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositTransactionSuspendResponse) Reset() {
	*x = DepositTransactionSuspendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionSuspendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionSuspendResponse) ProtoMessage() {}

func (x *DepositTransactionSuspendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionSuspendResponse.ProtoReflect.Descriptor instead.
func (*DepositTransactionSuspendResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{21}
}

func (x *DepositTransactionSuspendResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositTransactionSuspendResponse) GetData() *DepositCurrentStatus {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositClaimReconcileInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset         string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Network       string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Qty           string `protobuf:"bytes,3,opt,name=qty,proto3" json:"qty,omitempty"`
	Treasury      string `protobuf:"bytes,4,opt,name=treasury,proto3" json:"treasury,omitempty"`                    // rabex (broker) treasury
	ToAddress     string `protobuf:"bytes,5,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"` // rabex (broker) address that user deposits crypto to it
	ToMemo        string `protobuf:"bytes,6,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`          // rabex (broker) memo that user deposits crypto to it
	TrxInfo       string `protobuf:"bytes,7,opt,name=trxInfo,proto3" json:"trxInfo,omitempty"`
	User          string `protobuf:"bytes,8,opt,name=user,proto3" json:"user,omitempty"`                                        // uuid user in string form
	UserWarehouse string `protobuf:"bytes,9,opt,name=user_warehouse,json=userWarehouse,proto3" json:"user_warehouse,omitempty"` // uuid user warehouse in string form
	UserFullName  string `protobuf:"bytes,10,opt,name=user_full_name,json=userFullName,proto3" json:"user_full_name,omitempty"`
	UserNid       string `protobuf:"bytes,11,opt,name=user_nid,json=userNid,proto3" json:"user_nid,omitempty"`
}

func (x *DepositClaimReconcileInitRequest) Reset() {
	*x = DepositClaimReconcileInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimReconcileInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimReconcileInitRequest) ProtoMessage() {}

func (x *DepositClaimReconcileInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimReconcileInitRequest.ProtoReflect.Descriptor instead.
func (*DepositClaimReconcileInitRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{22}
}

func (x *DepositClaimReconcileInitRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DepositClaimReconcileInitRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DepositClaimReconcileInitRequest) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *DepositClaimReconcileInitRequest) GetTreasury() string {
	if x != nil {
		return x.Treasury
	}
	return ""
}

func (x *DepositClaimReconcileInitRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *DepositClaimReconcileInitRequest) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *DepositClaimReconcileInitRequest) GetTrxInfo() string {
	if x != nil {
		return x.TrxInfo
	}
	return ""
}

func (x *DepositClaimReconcileInitRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DepositClaimReconcileInitRequest) GetUserWarehouse() string {
	if x != nil {
		return x.UserWarehouse
	}
	return ""
}

func (x *DepositClaimReconcileInitRequest) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *DepositClaimReconcileInitRequest) GetUserNid() string {
	if x != nil {
		return x.UserNid
	}
	return ""
}

type DepositClaimReconcileInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string        `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositClaim `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositClaimReconcileInitResponse) Reset() {
	*x = DepositClaimReconcileInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimReconcileInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimReconcileInitResponse) ProtoMessage() {}

func (x *DepositClaimReconcileInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimReconcileInitResponse.ProtoReflect.Descriptor instead.
func (*DepositClaimReconcileInitResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{23}
}

func (x *DepositClaimReconcileInitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositClaimReconcileInitResponse) GetData() *DepositClaim {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositClaimReconcileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuspendTrxId          string                 `protobuf:"bytes,1,opt,name=suspend_trx_id,json=suspendTrxId,proto3" json:"suspend_trx_id,omitempty"`
	ReconciliationClaimId string                 `protobuf:"bytes,2,opt,name=reconciliation_claim_id,json=reconciliationClaimId,proto3" json:"reconciliation_claim_id,omitempty"`
	Action                DepositReconcileAction `protobuf:"varint,3,opt,name=action,proto3,enum=financialCoordinator.crypto.DepositReconcileAction" json:"action,omitempty"`
}

func (x *DepositClaimReconcileRequest) Reset() {
	*x = DepositClaimReconcileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimReconcileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimReconcileRequest) ProtoMessage() {}

func (x *DepositClaimReconcileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimReconcileRequest.ProtoReflect.Descriptor instead.
func (*DepositClaimReconcileRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{24}
}

func (x *DepositClaimReconcileRequest) GetSuspendTrxId() string {
	if x != nil {
		return x.SuspendTrxId
	}
	return ""
}

func (x *DepositClaimReconcileRequest) GetReconciliationClaimId() string {
	if x != nil {
		return x.ReconciliationClaimId
	}
	return ""
}

func (x *DepositClaimReconcileRequest) GetAction() DepositReconcileAction {
	if x != nil {
		return x.Action
	}
	return DepositReconcileAction_DEPOSIT_RECONCILE_ACTION_UNSPECIFIED
}

type DepositClaimReconcileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string        `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositClaim `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositClaimReconcileResponse) Reset() {
	*x = DepositClaimReconcileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimReconcileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimReconcileResponse) ProtoMessage() {}

func (x *DepositClaimReconcileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimReconcileResponse.ProtoReflect.Descriptor instead.
func (*DepositClaimReconcileResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{25}
}

func (x *DepositClaimReconcileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositClaimReconcileResponse) GetData() *DepositClaim {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceNumber    string                 `protobuf:"bytes,2,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	Asset            string                 `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	Network          string                 `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	QuantityFloor    string                 `protobuf:"bytes,5,opt,name=quantity_floor,json=quantityFloor,proto3" json:"quantity_floor,omitempty"`
	QuantityCeil     string                 `protobuf:"bytes,6,opt,name=quantity_ceil,json=quantityCeil,proto3" json:"quantity_ceil,omitempty"`
	ToAddress        string                 `protobuf:"bytes,7,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	ToMemo           string                 `protobuf:"bytes,8,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`
	UserWarehouseId  string                 `protobuf:"bytes,9,opt,name=user_warehouse_id,json=userWarehouseId,proto3" json:"user_warehouse_id,omitempty"`
	TreasuryId       string                 `protobuf:"bytes,10,opt,name=treasury_id,json=treasuryId,proto3" json:"treasury_id,omitempty"`
	BrokerId         string                 `protobuf:"bytes,11,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`
	Status           DepositStatus          `protobuf:"varint,12,opt,name=status,proto3,enum=financialCoordinator.crypto.DepositStatus" json:"status,omitempty"`
	Type             DepositType            `protobuf:"varint,13,opt,name=type,proto3,enum=financialCoordinator.crypto.DepositType" json:"type,omitempty"`
	UserNid          string                 `protobuf:"bytes,14,opt,name=user_nid,json=userNid,proto3" json:"user_nid,omitempty"`
	UserId           string                 `protobuf:"bytes,15,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InitiatorId      string                 `protobuf:"bytes,16,opt,name=initiator_id,json=initiatorId,proto3" json:"initiator_id,omitempty"`
	TrxInfo          string                 `protobuf:"bytes,17,opt,name=trx_info,json=trxInfo,proto3" json:"trx_info,omitempty"`
	CreatedTimeStart *timestamppb.Timestamp `protobuf:"bytes,30,opt,name=created_time_start,json=createdTimeStart,proto3" json:"created_time_start,omitempty"`
	CreatedTimeEnd   *timestamppb.Timestamp `protobuf:"bytes,31,opt,name=created_time_end,json=createdTimeEnd,proto3" json:"created_time_end,omitempty"`
	Page             uint32                 `protobuf:"varint,32,opt,name=page,proto3" json:"page,omitempty"`
	PageLimit        uint32                 `protobuf:"varint,33,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"`
	IsCsvRequired    bool                   `protobuf:"varint,34,opt,name=is_csv_required,json=isCsvRequired,proto3" json:"is_csv_required,omitempty"`
	FromAddress      string                 `protobuf:"bytes,35,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	FromMemo         string                 `protobuf:"bytes,36,opt,name=from_memo,json=fromMemo,proto3" json:"from_memo,omitempty"`
}

func (x *DepositFilterRequest) Reset() {
	*x = DepositFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFilterRequest) ProtoMessage() {}

func (x *DepositFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFilterRequest.ProtoReflect.Descriptor instead.
func (*DepositFilterRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{26}
}

func (x *DepositFilterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DepositFilterRequest) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *DepositFilterRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DepositFilterRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DepositFilterRequest) GetQuantityFloor() string {
	if x != nil {
		return x.QuantityFloor
	}
	return ""
}

func (x *DepositFilterRequest) GetQuantityCeil() string {
	if x != nil {
		return x.QuantityCeil
	}
	return ""
}

func (x *DepositFilterRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *DepositFilterRequest) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *DepositFilterRequest) GetUserWarehouseId() string {
	if x != nil {
		return x.UserWarehouseId
	}
	return ""
}

func (x *DepositFilterRequest) GetTreasuryId() string {
	if x != nil {
		return x.TreasuryId
	}
	return ""
}

func (x *DepositFilterRequest) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *DepositFilterRequest) GetStatus() DepositStatus {
	if x != nil {
		return x.Status
	}
	return DepositStatus_CRYPTO_DEPOSIT_STATUS_UNSPECIFIED
}

func (x *DepositFilterRequest) GetType() DepositType {
	if x != nil {
		return x.Type
	}
	return DepositType_DEPOSIT_TYPE_UNSPECIFIED
}

func (x *DepositFilterRequest) GetUserNid() string {
	if x != nil {
		return x.UserNid
	}
	return ""
}

func (x *DepositFilterRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DepositFilterRequest) GetInitiatorId() string {
	if x != nil {
		return x.InitiatorId
	}
	return ""
}

func (x *DepositFilterRequest) GetTrxInfo() string {
	if x != nil {
		return x.TrxInfo
	}
	return ""
}

func (x *DepositFilterRequest) GetCreatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeStart
	}
	return nil
}

func (x *DepositFilterRequest) GetCreatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeEnd
	}
	return nil
}

func (x *DepositFilterRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DepositFilterRequest) GetPageLimit() uint32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

func (x *DepositFilterRequest) GetIsCsvRequired() bool {
	if x != nil {
		return x.IsCsvRequired
	}
	return false
}

func (x *DepositFilterRequest) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *DepositFilterRequest) GetFromMemo() string {
	if x != nil {
		return x.FromMemo
	}
	return ""
}

type DepositFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string                      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositFilterResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Csv     string                      `protobuf:"bytes,5,opt,name=csv,proto3" json:"csv,omitempty"`
}

func (x *DepositFilterResponse) Reset() {
	*x = DepositFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFilterResponse) ProtoMessage() {}

func (x *DepositFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFilterResponse.ProtoReflect.Descriptor instead.
func (*DepositFilterResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{27}
}

func (x *DepositFilterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositFilterResponse) GetData() *DepositFilterResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DepositFilterResponse) GetCsv() string {
	if x != nil {
		return x.Csv
	}
	return ""
}

type DepositTransactionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      uint32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageLimit uint32 `protobuf:"varint,5,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"`
}

func (x *DepositTransactionListRequest) Reset() {
	*x = DepositTransactionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionListRequest) ProtoMessage() {}

func (x *DepositTransactionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionListRequest.ProtoReflect.Descriptor instead.
func (*DepositTransactionListRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{28}
}

func (x *DepositTransactionListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DepositTransactionListRequest) GetPageLimit() uint32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

type DepositTransactionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string                               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositTransactionListResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Csv     string                               `protobuf:"bytes,5,opt,name=csv,proto3" json:"csv,omitempty"`
}

func (x *DepositTransactionListResponse) Reset() {
	*x = DepositTransactionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionListResponse) ProtoMessage() {}

func (x *DepositTransactionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionListResponse.ProtoReflect.Descriptor instead.
func (*DepositTransactionListResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{29}
}

func (x *DepositTransactionListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositTransactionListResponse) GetData() *DepositTransactionListResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DepositTransactionListResponse) GetCsv() string {
	if x != nil {
		return x.Csv
	}
	return ""
}

type DepositClaimListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      uint32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageLimit uint32 `protobuf:"varint,5,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"`
}

func (x *DepositClaimListRequest) Reset() {
	*x = DepositClaimListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimListRequest) ProtoMessage() {}

func (x *DepositClaimListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimListRequest.ProtoReflect.Descriptor instead.
func (*DepositClaimListRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{30}
}

func (x *DepositClaimListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DepositClaimListRequest) GetPageLimit() uint32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

type DepositClaimListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string                         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositClaimListResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Csv     string                         `protobuf:"bytes,5,opt,name=csv,proto3" json:"csv,omitempty"`
}

func (x *DepositClaimListResponse) Reset() {
	*x = DepositClaimListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimListResponse) ProtoMessage() {}

func (x *DepositClaimListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimListResponse.ProtoReflect.Descriptor instead.
func (*DepositClaimListResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{31}
}

func (x *DepositClaimListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositClaimListResponse) GetData() *DepositClaimListResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DepositClaimListResponse) GetCsv() string {
	if x != nil {
		return x.Csv
	}
	return ""
}

type DepositHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset            string                 `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	CreatedTimeStart *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_time_start,json=createdTimeStart,proto3" json:"created_time_start,omitempty"`
	CreatedTimeEnd   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_time_end,json=createdTimeEnd,proto3" json:"created_time_end,omitempty"`
	Page             uint32                 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageLimit        uint32                 `protobuf:"varint,5,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"`
}

func (x *DepositHistoryRequest) Reset() {
	*x = DepositHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositHistoryRequest) ProtoMessage() {}

func (x *DepositHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositHistoryRequest.ProtoReflect.Descriptor instead.
func (*DepositHistoryRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{32}
}

func (x *DepositHistoryRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DepositHistoryRequest) GetCreatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeStart
	}
	return nil
}

func (x *DepositHistoryRequest) GetCreatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeEnd
	}
	return nil
}

func (x *DepositHistoryRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DepositHistoryRequest) GetPageLimit() uint32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

type DepositHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// repeated string error = 1;
	// string status = 2;
	Message string                       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositHistoryResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositHistoryResponse) Reset() {
	*x = DepositHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositHistoryResponse) ProtoMessage() {}

func (x *DepositHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositHistoryResponse.ProtoReflect.Descriptor instead.
func (*DepositHistoryResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{33}
}

func (x *DepositHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositHistoryResponse) GetData() *DepositHistoryResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Commenter     string                 `protobuf:"bytes,2,opt,name=commenter,proto3" json:"commenter,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	TransactionId string                 `protobuf:"bytes,6,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	CommenterName string                 `protobuf:"bytes,7,opt,name=commenter_name,json=commenterName,proto3" json:"commenter_name,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{34}
}

func (x *Comment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comment) GetCommenter() string {
	if x != nil {
		return x.Commenter
	}
	return ""
}

func (x *Comment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Comment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Comment) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Comment) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *Comment) GetCommenterName() string {
	if x != nil {
		return x.CommenterName
	}
	return ""
}

type DepositCommentCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Description   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Title         string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *DepositCommentCreateRequest) Reset() {
	*x = DepositCommentCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositCommentCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositCommentCreateRequest) ProtoMessage() {}

func (x *DepositCommentCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositCommentCreateRequest.ProtoReflect.Descriptor instead.
func (*DepositCommentCreateRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{35}
}

func (x *DepositCommentCreateRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *DepositCommentCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DepositCommentCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type DepositCommentCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string status = 1;
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// repeated string error = 3;
	Data *Comment `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositCommentCreateResponse) Reset() {
	*x = DepositCommentCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositCommentCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositCommentCreateResponse) ProtoMessage() {}

func (x *DepositCommentCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositCommentCreateResponse.ProtoReflect.Descriptor instead.
func (*DepositCommentCreateResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{36}
}

func (x *DepositCommentCreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositCommentCreateResponse) GetData() *Comment {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositCommentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *DepositCommentListRequest) Reset() {
	*x = DepositCommentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositCommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositCommentListRequest) ProtoMessage() {}

func (x *DepositCommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositCommentListRequest.ProtoReflect.Descriptor instead.
func (*DepositCommentListRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{37}
}

func (x *DepositCommentListRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type DepositCommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string status=1;
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// repeated string error=3;
	Data *DepositCommentListResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositCommentListResponse) Reset() {
	*x = DepositCommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositCommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositCommentListResponse) ProtoMessage() {}

func (x *DepositCommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositCommentListResponse.ProtoReflect.Descriptor instead.
func (*DepositCommentListResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{38}
}

func (x *DepositCommentListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositCommentListResponse) GetData() *DepositCommentListResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type TransactionSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceNumber     string      `protobuf:"bytes,7,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	Asset             string      `protobuf:"bytes,8,opt,name=asset,proto3" json:"asset,omitempty"`
	Quantity          string      `protobuf:"bytes,9,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Network           string      `protobuf:"bytes,10,opt,name=network,proto3" json:"network,omitempty"`
	Type              DepositType `protobuf:"varint,11,opt,name=type,proto3,enum=financialCoordinator.crypto.DepositType" json:"type,omitempty"`
	FromAddress       string      `protobuf:"bytes,12,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	FromMemo          string      `protobuf:"bytes,13,opt,name=from_memo,json=fromMemo,proto3" json:"from_memo,omitempty"`
	ToAddress         string      `protobuf:"bytes,14,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	ToMemo            string      `protobuf:"bytes,15,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`
	User              string      `protobuf:"bytes,16,opt,name=user,proto3" json:"user,omitempty"`
	UserName          string      `protobuf:"bytes,17,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserNid           string      `protobuf:"bytes,18,opt,name=user_nid,json=userNid,proto3" json:"user_nid,omitempty"`
	UserWarehouseId   string      `protobuf:"bytes,19,opt,name=user_warehouse_id,json=userWarehouseId,proto3" json:"user_warehouse_id,omitempty"`
	BrokerWarehouseId string      `protobuf:"bytes,20,opt,name=broker_warehouse_id,json=brokerWarehouseId,proto3" json:"broker_warehouse_id,omitempty"`
	// string broker_treasury_id = 21;
	BrokerId string `protobuf:"bytes,22,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`
	// string channel_id= 23;
	TreasuryId   string                 `protobuf:"bytes,24,opt,name=treasury_id,json=treasuryId,proto3" json:"treasury_id,omitempty"`
	StatusCode   DepositStatus          `protobuf:"varint,25,opt,name=status_code,json=statusCode,proto3,enum=financialCoordinator.crypto.DepositStatus" json:"status_code,omitempty"`
	StatusMsg    string                 `protobuf:"bytes,26,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
	Description  string                 `protobuf:"bytes,27,opt,name=description,proto3" json:"description,omitempty"`
	Txid         string                 `protobuf:"bytes,31,opt,name=txid,proto3" json:"txid,omitempty"`
	BlockHeight  uint64                 `protobuf:"varint,33,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TreasuryType TreasuryType           `protobuf:"varint,34,opt,name=treasury_type,json=treasuryType,proto3,enum=financialCoordinator.crypto.TreasuryType" json:"treasury_type,omitempty"`
	Created      *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=created,proto3" json:"created,omitempty"`
	Updated      *timestamppb.Timestamp `protobuf:"bytes,55,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *TransactionSummary) Reset() {
	*x = TransactionSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionSummary) ProtoMessage() {}

func (x *TransactionSummary) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionSummary.ProtoReflect.Descriptor instead.
func (*TransactionSummary) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{39}
}

func (x *TransactionSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransactionSummary) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *TransactionSummary) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *TransactionSummary) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *TransactionSummary) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *TransactionSummary) GetType() DepositType {
	if x != nil {
		return x.Type
	}
	return DepositType_DEPOSIT_TYPE_UNSPECIFIED
}

func (x *TransactionSummary) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *TransactionSummary) GetFromMemo() string {
	if x != nil {
		return x.FromMemo
	}
	return ""
}

func (x *TransactionSummary) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TransactionSummary) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *TransactionSummary) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *TransactionSummary) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *TransactionSummary) GetUserNid() string {
	if x != nil {
		return x.UserNid
	}
	return ""
}

func (x *TransactionSummary) GetUserWarehouseId() string {
	if x != nil {
		return x.UserWarehouseId
	}
	return ""
}

func (x *TransactionSummary) GetBrokerWarehouseId() string {
	if x != nil {
		return x.BrokerWarehouseId
	}
	return ""
}

func (x *TransactionSummary) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *TransactionSummary) GetTreasuryId() string {
	if x != nil {
		return x.TreasuryId
	}
	return ""
}

func (x *TransactionSummary) GetStatusCode() DepositStatus {
	if x != nil {
		return x.StatusCode
	}
	return DepositStatus_CRYPTO_DEPOSIT_STATUS_UNSPECIFIED
}

func (x *TransactionSummary) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *TransactionSummary) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TransactionSummary) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *TransactionSummary) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *TransactionSummary) GetTreasuryType() TreasuryType {
	if x != nil {
		return x.TreasuryType
	}
	return TreasuryType_TREASURY_TYPE_UNSPECIFIED
}

func (x *TransactionSummary) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *TransactionSummary) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

type DepositFullNodeInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset   string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Network string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Qty     string `protobuf:"bytes,3,opt,name=qty,proto3" json:"qty,omitempty"`
	// string treasury = 4; // user treasury
	ToAddress string `protobuf:"bytes,5,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"` // address that user deposits crypto to it
	ToMemo    string `protobuf:"bytes,6,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`          // memo that user deposits crypto to it
	TxId      string `protobuf:"bytes,7,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`                // blockchain recognizes transaction with this txid
	// string user = 8; // uuid user in string form
	FromAddress    string `protobuf:"bytes,12,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	FromMemo       string `protobuf:"bytes,13,opt,name=from_memo,json=fromMemo,proto3" json:"from_memo,omitempty"`
	BlockHeight    uint64 `protobuf:"varint,14,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	ToAddressIndex string `protobuf:"bytes,15,opt,name=to_address_index,json=toAddressIndex,proto3" json:"to_address_index,omitempty"`
}

func (x *DepositFullNodeInitRequest) Reset() {
	*x = DepositFullNodeInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFullNodeInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFullNodeInitRequest) ProtoMessage() {}

func (x *DepositFullNodeInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFullNodeInitRequest.ProtoReflect.Descriptor instead.
func (*DepositFullNodeInitRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{40}
}

func (x *DepositFullNodeInitRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DepositFullNodeInitRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DepositFullNodeInitRequest) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *DepositFullNodeInitRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *DepositFullNodeInitRequest) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *DepositFullNodeInitRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *DepositFullNodeInitRequest) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *DepositFullNodeInitRequest) GetFromMemo() string {
	if x != nil {
		return x.FromMemo
	}
	return ""
}

func (x *DepositFullNodeInitRequest) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *DepositFullNodeInitRequest) GetToAddressIndex() string {
	if x != nil {
		return x.ToAddressIndex
	}
	return ""
}

type DepositFullNodeInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TransactionSummary `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositFullNodeInitResponse) Reset() {
	*x = DepositFullNodeInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFullNodeInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFullNodeInitResponse) ProtoMessage() {}

func (x *DepositFullNodeInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFullNodeInitResponse.ProtoReflect.Descriptor instead.
func (*DepositFullNodeInitResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{41}
}

func (x *DepositFullNodeInitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositFullNodeInitResponse) GetData() *TransactionSummary {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositFullNodeConfirmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string asset = 1;
	Network string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"` // mandatory
	// string qty = 3;
	// string treasury = 4; // user treasury
	ToAddress string `protobuf:"bytes,5,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"` // mandatory. address that user deposits crypto to it
	ToMemo    string `protobuf:"bytes,6,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`          // mandatory. memo that user deposits crypto to it
	TxId      string `protobuf:"bytes,7,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`                // blockchain recognizes transaction with this txid
	// string user = 8; // uuid user in string form
	// string from_address = 12;
	// string from_memo = 13;
	BlockHeight     uint64 `protobuf:"varint,14,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	BlockHeaderHash string `protobuf:"bytes,15,opt,name=block_header_hash,json=blockHeaderHash,proto3" json:"block_header_hash,omitempty"`
	ToAddressIndex  string `protobuf:"bytes,16,opt,name=to_address_index,json=toAddressIndex,proto3" json:"to_address_index,omitempty"`
}

func (x *DepositFullNodeConfirmRequest) Reset() {
	*x = DepositFullNodeConfirmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFullNodeConfirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFullNodeConfirmRequest) ProtoMessage() {}

func (x *DepositFullNodeConfirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFullNodeConfirmRequest.ProtoReflect.Descriptor instead.
func (*DepositFullNodeConfirmRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{42}
}

func (x *DepositFullNodeConfirmRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DepositFullNodeConfirmRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *DepositFullNodeConfirmRequest) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *DepositFullNodeConfirmRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *DepositFullNodeConfirmRequest) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *DepositFullNodeConfirmRequest) GetBlockHeaderHash() string {
	if x != nil {
		return x.BlockHeaderHash
	}
	return ""
}

func (x *DepositFullNodeConfirmRequest) GetToAddressIndex() string {
	if x != nil {
		return x.ToAddressIndex
	}
	return ""
}

type DepositFullNodeConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TransactionSummary `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositFullNodeConfirmResponse) Reset() {
	*x = DepositFullNodeConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFullNodeConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFullNodeConfirmResponse) ProtoMessage() {}

func (x *DepositFullNodeConfirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFullNodeConfirmResponse.ProtoReflect.Descriptor instead.
func (*DepositFullNodeConfirmResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{43}
}

func (x *DepositFullNodeConfirmResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositFullNodeConfirmResponse) GetData() *TransactionSummary {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositFullNodeCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string asset = 1;
	Network string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"` // mandatory
	// string qty = 3;
	// string treasury = 4; // user treasury
	ToAddress string `protobuf:"bytes,5,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"` // mandatory. address that user deposits crypto to it
	ToMemo    string `protobuf:"bytes,6,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`          // memo that user deposits crypto to it
	TxId      string `protobuf:"bytes,7,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`                // mandatory. blockchain recognizes transaction with this txid
	// string user = 8; // uuid user in string form
	// string from_address = 12;
	// string from_memo = 13;
	// uint64 block_height = 14;
	ToAddressIndex string `protobuf:"bytes,15,opt,name=to_address_index,json=toAddressIndex,proto3" json:"to_address_index,omitempty"`
}

func (x *DepositFullNodeCancelRequest) Reset() {
	*x = DepositFullNodeCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFullNodeCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFullNodeCancelRequest) ProtoMessage() {}

func (x *DepositFullNodeCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFullNodeCancelRequest.ProtoReflect.Descriptor instead.
func (*DepositFullNodeCancelRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{44}
}

func (x *DepositFullNodeCancelRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DepositFullNodeCancelRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *DepositFullNodeCancelRequest) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *DepositFullNodeCancelRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *DepositFullNodeCancelRequest) GetToAddressIndex() string {
	if x != nil {
		return x.ToAddressIndex
	}
	return ""
}

type DepositFullNodeCancelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"` //    TransactionSummary data = 4;
}

func (x *DepositFullNodeCancelResponse) Reset() {
	*x = DepositFullNodeCancelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFullNodeCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFullNodeCancelResponse) ProtoMessage() {}

func (x *DepositFullNodeCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFullNodeCancelResponse.ProtoReflect.Descriptor instead.
func (*DepositFullNodeCancelResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{45}
}

func (x *DepositFullNodeCancelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CryptoWithdrawTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkflowId    string `protobuf:"bytes,2,opt,name=Workflow_id,json=WorkflowId,proto3" json:"Workflow_id,omitempty"`
	WorkflowRunId string `protobuf:"bytes,3,opt,name=WorkflowRun_id,json=WorkflowRunId,proto3" json:"WorkflowRun_id,omitempty"`
	// string token_standard = 4;
	Initiator              string                 `protobuf:"bytes,5,opt,name=initiator,proto3" json:"initiator,omitempty"`
	InitiatorName          string                 `protobuf:"bytes,6,opt,name=initiator_name,json=initiatorName,proto3" json:"initiator_name,omitempty"`
	InvoiceNumber          string                 `protobuf:"bytes,7,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	Asset                  string                 `protobuf:"bytes,8,opt,name=asset,proto3" json:"asset,omitempty"`
	Quantity               string                 `protobuf:"bytes,9,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Network                string                 `protobuf:"bytes,10,opt,name=network,proto3" json:"network,omitempty"`
	Type                   WithdrawType           `protobuf:"varint,11,opt,name=type,proto3,enum=financialCoordinator.crypto.WithdrawType" json:"type,omitempty"`
	FromAddress            string                 `protobuf:"bytes,12,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	FromMemo               string                 `protobuf:"bytes,13,opt,name=from_memo,json=fromMemo,proto3" json:"from_memo,omitempty"`
	ToAddress              string                 `protobuf:"bytes,14,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	ToMemo                 string                 `protobuf:"bytes,15,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`
	User                   string                 `protobuf:"bytes,16,opt,name=user,proto3" json:"user,omitempty"`
	UserName               string                 `protobuf:"bytes,17,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserNid                string                 `protobuf:"bytes,18,opt,name=user_nid,json=userNid,proto3" json:"user_nid,omitempty"`
	UserWarehouseId        string                 `protobuf:"bytes,19,opt,name=user_warehouse_id,json=userWarehouseId,proto3" json:"user_warehouse_id,omitempty"`
	BrokerWarehouseId      string                 `protobuf:"bytes,20,opt,name=broker_warehouse_id,json=brokerWarehouseId,proto3" json:"broker_warehouse_id,omitempty"`
	BrokerTreasuryId       string                 `protobuf:"bytes,21,opt,name=broker_treasury_id,json=brokerTreasuryId,proto3" json:"broker_treasury_id,omitempty"`
	BrokerId               string                 `protobuf:"bytes,22,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`
	ChannelId              string                 `protobuf:"bytes,23,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	TreasuryType           TreasuryType           `protobuf:"varint,24,opt,name=treasury_type,json=treasuryType,proto3,enum=financialCoordinator.crypto.TreasuryType" json:"treasury_type,omitempty"`
	StatusCode             WithdrawStatus         `protobuf:"varint,25,opt,name=status_code,json=statusCode,proto3,enum=financialCoordinator.crypto.WithdrawStatus" json:"status_code,omitempty"`
	StatusMsg              string                 `protobuf:"bytes,26,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
	Description            string                 `protobuf:"bytes,27,opt,name=description,proto3" json:"description,omitempty"`
	DeviceIp               string                 `protobuf:"bytes,28,opt,name=device_ip,json=deviceIp,proto3" json:"device_ip,omitempty"`
	DeviceMeta             string                 `protobuf:"bytes,29,opt,name=device_meta,json=deviceMeta,proto3" json:"device_meta,omitempty"`
	Meta                   string                 `protobuf:"bytes,30,opt,name=meta,proto3" json:"meta,omitempty"`
	Txid                   string                 `protobuf:"bytes,31,opt,name=txid,proto3" json:"txid,omitempty"`
	ConfirmNumber          uint64                 `protobuf:"varint,32,opt,name=confirm_number,json=confirmNumber,proto3" json:"confirm_number,omitempty"`
	BlockHeight            uint64                 `protobuf:"varint,33,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Price                  string                 `protobuf:"bytes,34,opt,name=Price,proto3" json:"Price,omitempty"`
	TmnPrice               string                 `protobuf:"bytes,35,opt,name=tmn_price,json=tmnPrice,proto3" json:"tmn_price,omitempty"`
	UserFeeQuantity        string                 `protobuf:"bytes,36,opt,name=user_fee_quantity,json=userFeeQuantity,proto3" json:"user_fee_quantity,omitempty"`
	UserFeeAsset           string                 `protobuf:"bytes,37,opt,name=user_fee_asset,json=userFeeAsset,proto3" json:"user_fee_asset,omitempty"`
	UserFeePrice           string                 `protobuf:"bytes,38,opt,name=user_fee_price,json=userFeePrice,proto3" json:"user_fee_price,omitempty"`
	TransactionFeeQuantity string                 `protobuf:"bytes,39,opt,name=transaction_fee_quantity,json=transactionFeeQuantity,proto3" json:"transaction_fee_quantity,omitempty"`
	TransactionFeeAsset    string                 `protobuf:"bytes,40,opt,name=transaction_fee_asset,json=transactionFeeAsset,proto3" json:"transaction_fee_asset,omitempty"`
	TransactionFeePrice    string                 `protobuf:"bytes,41,opt,name=transaction_fee_price,json=transactionFeePrice,proto3" json:"transaction_fee_price,omitempty"`
	ServiceProviderXid     string                 `protobuf:"bytes,42,opt,name=service_provider_xid,json=serviceProviderXid,proto3" json:"service_provider_xid,omitempty"`
	Created                *timestamppb.Timestamp `protobuf:"bytes,61,opt,name=created,proto3" json:"created,omitempty"`
	Updated                *timestamppb.Timestamp `protobuf:"bytes,62,opt,name=updated,proto3" json:"updated,omitempty"`
	Setteled               *timestamppb.Timestamp `protobuf:"bytes,63,opt,name=Setteled,proto3" json:"Setteled,omitempty"`
}

func (x *CryptoWithdrawTransaction) Reset() {
	*x = CryptoWithdrawTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoWithdrawTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoWithdrawTransaction) ProtoMessage() {}

func (x *CryptoWithdrawTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoWithdrawTransaction.ProtoReflect.Descriptor instead.
func (*CryptoWithdrawTransaction) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{46}
}

func (x *CryptoWithdrawTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetWorkflowRunId() string {
	if x != nil {
		return x.WorkflowRunId
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetInitiatorName() string {
	if x != nil {
		return x.InitiatorName
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetType() WithdrawType {
	if x != nil {
		return x.Type
	}
	return WithdrawType_WITHDRAW_TYPE_UNSPECIFIED
}

func (x *CryptoWithdrawTransaction) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetFromMemo() string {
	if x != nil {
		return x.FromMemo
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetUserNid() string {
	if x != nil {
		return x.UserNid
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetUserWarehouseId() string {
	if x != nil {
		return x.UserWarehouseId
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetBrokerWarehouseId() string {
	if x != nil {
		return x.BrokerWarehouseId
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetBrokerTreasuryId() string {
	if x != nil {
		return x.BrokerTreasuryId
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetTreasuryType() TreasuryType {
	if x != nil {
		return x.TreasuryType
	}
	return TreasuryType_TREASURY_TYPE_UNSPECIFIED
}

func (x *CryptoWithdrawTransaction) GetStatusCode() WithdrawStatus {
	if x != nil {
		return x.StatusCode
	}
	return WithdrawStatus_WITHDRAW_STATUS_UNSPECIFIED
}

func (x *CryptoWithdrawTransaction) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetDeviceIp() string {
	if x != nil {
		return x.DeviceIp
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetDeviceMeta() string {
	if x != nil {
		return x.DeviceMeta
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetConfirmNumber() uint64 {
	if x != nil {
		return x.ConfirmNumber
	}
	return 0
}

func (x *CryptoWithdrawTransaction) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *CryptoWithdrawTransaction) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetTmnPrice() string {
	if x != nil {
		return x.TmnPrice
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetUserFeeQuantity() string {
	if x != nil {
		return x.UserFeeQuantity
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetUserFeeAsset() string {
	if x != nil {
		return x.UserFeeAsset
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetUserFeePrice() string {
	if x != nil {
		return x.UserFeePrice
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetTransactionFeeQuantity() string {
	if x != nil {
		return x.TransactionFeeQuantity
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetTransactionFeeAsset() string {
	if x != nil {
		return x.TransactionFeeAsset
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetTransactionFeePrice() string {
	if x != nil {
		return x.TransactionFeePrice
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetServiceProviderXid() string {
	if x != nil {
		return x.ServiceProviderXid
	}
	return ""
}

func (x *CryptoWithdrawTransaction) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *CryptoWithdrawTransaction) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *CryptoWithdrawTransaction) GetSetteled() *timestamppb.Timestamp {
	if x != nil {
		return x.Setteled
	}
	return nil
}

type CryptoWithdrawHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceNumber   string                 `protobuf:"bytes,2,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	Asset           string                 `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	Quantity        string                 `protobuf:"bytes,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Network         string                 `protobuf:"bytes,5,opt,name=network,proto3" json:"network,omitempty"`
	ToAddress       string                 `protobuf:"bytes,6,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	ToMemo          string                 `protobuf:"bytes,7,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`
	UserWarehouseId string                 `protobuf:"bytes,8,opt,name=user_warehouse_id,json=userWarehouseId,proto3" json:"user_warehouse_id,omitempty"`
	Status          WithdrawStatus         `protobuf:"varint,9,opt,name=status,proto3,enum=financialCoordinator.crypto.WithdrawStatus" json:"status,omitempty"`
	Txid            string                 `protobuf:"bytes,10,opt,name=txid,proto3" json:"txid,omitempty"`
	UserFeeQuantity string                 `protobuf:"bytes,11,opt,name=user_fee_quantity,json=userFeeQuantity,proto3" json:"user_fee_quantity,omitempty"`
	UserFeeAsset    string                 `protobuf:"bytes,12,opt,name=user_fee_asset,json=userFeeAsset,proto3" json:"user_fee_asset,omitempty"`
	Created         *timestamppb.Timestamp `protobuf:"bytes,31,opt,name=created,proto3" json:"created,omitempty"`
	Updated         *timestamppb.Timestamp `protobuf:"bytes,32,opt,name=updated,proto3" json:"updated,omitempty"`
	Setteled        *timestamppb.Timestamp `protobuf:"bytes,33,opt,name=Setteled,proto3" json:"Setteled,omitempty"`
}

func (x *CryptoWithdrawHistory) Reset() {
	*x = CryptoWithdrawHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoWithdrawHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoWithdrawHistory) ProtoMessage() {}

func (x *CryptoWithdrawHistory) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoWithdrawHistory.ProtoReflect.Descriptor instead.
func (*CryptoWithdrawHistory) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{47}
}

func (x *CryptoWithdrawHistory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CryptoWithdrawHistory) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *CryptoWithdrawHistory) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *CryptoWithdrawHistory) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *CryptoWithdrawHistory) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *CryptoWithdrawHistory) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *CryptoWithdrawHistory) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *CryptoWithdrawHistory) GetUserWarehouseId() string {
	if x != nil {
		return x.UserWarehouseId
	}
	return ""
}

func (x *CryptoWithdrawHistory) GetStatus() WithdrawStatus {
	if x != nil {
		return x.Status
	}
	return WithdrawStatus_WITHDRAW_STATUS_UNSPECIFIED
}

func (x *CryptoWithdrawHistory) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *CryptoWithdrawHistory) GetUserFeeQuantity() string {
	if x != nil {
		return x.UserFeeQuantity
	}
	return ""
}

func (x *CryptoWithdrawHistory) GetUserFeeAsset() string {
	if x != nil {
		return x.UserFeeAsset
	}
	return ""
}

func (x *CryptoWithdrawHistory) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *CryptoWithdrawHistory) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *CryptoWithdrawHistory) GetSetteled() *timestamppb.Timestamp {
	if x != nil {
		return x.Setteled
	}
	return nil
}

type WithdrawTrxData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Asset         string         `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	Network       string         `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	ToAddress     string         `protobuf:"bytes,4,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	ToMemo        string         `protobuf:"bytes,5,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`
	Quantity      string         `protobuf:"bytes,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	InvoiceNumber string         `protobuf:"bytes,7,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	Status        WithdrawStatus `protobuf:"varint,8,opt,name=status,proto3,enum=financialCoordinator.crypto.WithdrawStatus" json:"status,omitempty"` // string token_standard = 9;
}

func (x *WithdrawTrxData) Reset() {
	*x = WithdrawTrxData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawTrxData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawTrxData) ProtoMessage() {}

func (x *WithdrawTrxData) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawTrxData.ProtoReflect.Descriptor instead.
func (*WithdrawTrxData) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{48}
}

func (x *WithdrawTrxData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WithdrawTrxData) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *WithdrawTrxData) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *WithdrawTrxData) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *WithdrawTrxData) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *WithdrawTrxData) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *WithdrawTrxData) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *WithdrawTrxData) GetStatus() WithdrawStatus {
	if x != nil {
		return x.Status
	}
	return WithdrawStatus_WITHDRAW_STATUS_UNSPECIFIED
}

type WithdrawInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset     string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Network   string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"` // e.g., ETH, TRX, BTC, ... (Do not confuse it with token standard)
	ToAddress string `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	ToMemo    string `protobuf:"bytes,4,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`
	Quantity  string `protobuf:"bytes,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *WithdrawInitRequest) Reset() {
	*x = WithdrawInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawInitRequest) ProtoMessage() {}

func (x *WithdrawInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawInitRequest.ProtoReflect.Descriptor instead.
func (*WithdrawInitRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{49}
}

func (x *WithdrawInitRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *WithdrawInitRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *WithdrawInitRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *WithdrawInitRequest) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *WithdrawInitRequest) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

type WithdrawInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string status = 1;
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// repeated string error = 3;
	Data *WithdrawTrxData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WithdrawInitResponse) Reset() {
	*x = WithdrawInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawInitResponse) ProtoMessage() {}

func (x *WithdrawInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawInitResponse.ProtoReflect.Descriptor instead.
func (*WithdrawInitResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{50}
}

func (x *WithdrawInitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WithdrawInitResponse) GetData() *WithdrawTrxData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WithdrawFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceNumber    string                 `protobuf:"bytes,2,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	Asset            string                 `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	Network          string                 `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	QuantityFloor    string                 `protobuf:"bytes,5,opt,name=quantity_floor,json=quantityFloor,proto3" json:"quantity_floor,omitempty"`
	QuantityCeil     string                 `protobuf:"bytes,6,opt,name=quantity_ceil,json=quantityCeil,proto3" json:"quantity_ceil,omitempty"`
	ToAddress        string                 `protobuf:"bytes,7,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	ToMemo           string                 `protobuf:"bytes,8,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`
	UserWarehouseId  string                 `protobuf:"bytes,9,opt,name=user_warehouse_id,json=userWarehouseId,proto3" json:"user_warehouse_id,omitempty"`
	BrokerTreasuryId string                 `protobuf:"bytes,10,opt,name=broker_treasury_id,json=brokerTreasuryId,proto3" json:"broker_treasury_id,omitempty"`
	BrokerId         string                 `protobuf:"bytes,11,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`
	Status           WithdrawStatus         `protobuf:"varint,12,opt,name=status,proto3,enum=financialCoordinator.crypto.WithdrawStatus" json:"status,omitempty"`
	Type             WithdrawType           `protobuf:"varint,13,opt,name=type,proto3,enum=financialCoordinator.crypto.WithdrawType" json:"type,omitempty"`
	UserNid          string                 `protobuf:"bytes,14,opt,name=user_nid,json=userNid,proto3" json:"user_nid,omitempty"`
	UserId           string                 `protobuf:"bytes,15,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InitiatorId      string                 `protobuf:"bytes,16,opt,name=initiator_id,json=initiatorId,proto3" json:"initiator_id,omitempty"`
	ChannelId        string                 `protobuf:"bytes,17,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	TxId             string                 `protobuf:"bytes,18,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	CreatedTimeStart *timestamppb.Timestamp `protobuf:"bytes,30,opt,name=created_time_start,json=createdTimeStart,proto3" json:"created_time_start,omitempty"`
	CreatedTimeEnd   *timestamppb.Timestamp `protobuf:"bytes,31,opt,name=created_time_end,json=createdTimeEnd,proto3" json:"created_time_end,omitempty"`
	Page             uint32                 `protobuf:"varint,32,opt,name=page,proto3" json:"page,omitempty"`
	PageLimit        uint32                 `protobuf:"varint,33,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"`
	IsCsvRequired    bool                   `protobuf:"varint,34,opt,name=is_csv_required,json=isCsvRequired,proto3" json:"is_csv_required,omitempty"`
}

func (x *WithdrawFilterRequest) Reset() {
	*x = WithdrawFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFilterRequest) ProtoMessage() {}

func (x *WithdrawFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFilterRequest.ProtoReflect.Descriptor instead.
func (*WithdrawFilterRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{51}
}

func (x *WithdrawFilterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WithdrawFilterRequest) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *WithdrawFilterRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *WithdrawFilterRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *WithdrawFilterRequest) GetQuantityFloor() string {
	if x != nil {
		return x.QuantityFloor
	}
	return ""
}

func (x *WithdrawFilterRequest) GetQuantityCeil() string {
	if x != nil {
		return x.QuantityCeil
	}
	return ""
}

func (x *WithdrawFilterRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *WithdrawFilterRequest) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *WithdrawFilterRequest) GetUserWarehouseId() string {
	if x != nil {
		return x.UserWarehouseId
	}
	return ""
}

func (x *WithdrawFilterRequest) GetBrokerTreasuryId() string {
	if x != nil {
		return x.BrokerTreasuryId
	}
	return ""
}

func (x *WithdrawFilterRequest) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *WithdrawFilterRequest) GetStatus() WithdrawStatus {
	if x != nil {
		return x.Status
	}
	return WithdrawStatus_WITHDRAW_STATUS_UNSPECIFIED
}

func (x *WithdrawFilterRequest) GetType() WithdrawType {
	if x != nil {
		return x.Type
	}
	return WithdrawType_WITHDRAW_TYPE_UNSPECIFIED
}

func (x *WithdrawFilterRequest) GetUserNid() string {
	if x != nil {
		return x.UserNid
	}
	return ""
}

func (x *WithdrawFilterRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WithdrawFilterRequest) GetInitiatorId() string {
	if x != nil {
		return x.InitiatorId
	}
	return ""
}

func (x *WithdrawFilterRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *WithdrawFilterRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *WithdrawFilterRequest) GetCreatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeStart
	}
	return nil
}

func (x *WithdrawFilterRequest) GetCreatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeEnd
	}
	return nil
}

func (x *WithdrawFilterRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *WithdrawFilterRequest) GetPageLimit() uint32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

func (x *WithdrawFilterRequest) GetIsCsvRequired() bool {
	if x != nil {
		return x.IsCsvRequired
	}
	return false
}

type WithdrawFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string                       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *WithdrawFilterResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Csv     string                       `protobuf:"bytes,5,opt,name=csv,proto3" json:"csv,omitempty"`
}

func (x *WithdrawFilterResponse) Reset() {
	*x = WithdrawFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFilterResponse) ProtoMessage() {}

func (x *WithdrawFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFilterResponse.ProtoReflect.Descriptor instead.
func (*WithdrawFilterResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{52}
}

func (x *WithdrawFilterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WithdrawFilterResponse) GetData() *WithdrawFilterResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WithdrawFilterResponse) GetCsv() string {
	if x != nil {
		return x.Csv
	}
	return ""
}

type WithdrawHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset            string                 `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	CreatedTimeStart *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_time_start,json=createdTimeStart,proto3" json:"created_time_start,omitempty"`
	CreatedTimeEnd   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_time_end,json=createdTimeEnd,proto3" json:"created_time_end,omitempty"`
	Page             uint32                 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageLimit        uint32                 `protobuf:"varint,5,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"`
}

func (x *WithdrawHistoryRequest) Reset() {
	*x = WithdrawHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawHistoryRequest) ProtoMessage() {}

func (x *WithdrawHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawHistoryRequest.ProtoReflect.Descriptor instead.
func (*WithdrawHistoryRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{53}
}

func (x *WithdrawHistoryRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *WithdrawHistoryRequest) GetCreatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeStart
	}
	return nil
}

func (x *WithdrawHistoryRequest) GetCreatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeEnd
	}
	return nil
}

func (x *WithdrawHistoryRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *WithdrawHistoryRequest) GetPageLimit() uint32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

type WithdrawHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// repeated string error = 1;
	// string status = 2;
	Message string                        `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *WithdrawHistoryResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WithdrawHistoryResponse) Reset() {
	*x = WithdrawHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawHistoryResponse) ProtoMessage() {}

func (x *WithdrawHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawHistoryResponse.ProtoReflect.Descriptor instead.
func (*WithdrawHistoryResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{54}
}

func (x *WithdrawHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WithdrawHistoryResponse) GetData() *WithdrawHistoryResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type WithdrawManualInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset             string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Network           string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	ToAddress         string `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	ToMemo            string `protobuf:"bytes,4,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`
	Quantity          string `protobuf:"bytes,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UserId            string `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserNid           string `protobuf:"bytes,7,opt,name=user_nid,json=userNid,proto3" json:"user_nid,omitempty"`
	UserName          string `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserWarehouseId   string `protobuf:"bytes,9,opt,name=user_warehouse_id,json=userWarehouseId,proto3" json:"user_warehouse_id,omitempty"`
	BrokerId          string `protobuf:"bytes,10,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`
	BrokerWarehouseId string `protobuf:"bytes,11,opt,name=broker_warehouse_id,json=brokerWarehouseId,proto3" json:"broker_warehouse_id,omitempty"`
	BrokerTreasuryId  string `protobuf:"bytes,12,opt,name=broker_treasury_id,json=brokerTreasuryId,proto3" json:"broker_treasury_id,omitempty"`
	BrokerChannelId   string `protobuf:"bytes,13,opt,name=broker_channel_id,json=brokerChannelId,proto3" json:"broker_channel_id,omitempty"`
	UserFeeQuantity   string `protobuf:"bytes,14,opt,name=user_fee_quantity,json=userFeeQuantity,proto3" json:"user_fee_quantity,omitempty"`
	UserFeeAsset      string `protobuf:"bytes,15,opt,name=user_fee_asset,json=userFeeAsset,proto3" json:"user_fee_asset,omitempty"`
	// string token_standard = 16;
	TreasuryType TreasuryType `protobuf:"varint,17,opt,name=treasury_type,json=treasuryType,proto3,enum=financialCoordinator.crypto.TreasuryType" json:"treasury_type,omitempty"`
}

func (x *WithdrawManualInitRequest) Reset() {
	*x = WithdrawManualInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawManualInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawManualInitRequest) ProtoMessage() {}

func (x *WithdrawManualInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawManualInitRequest.ProtoReflect.Descriptor instead.
func (*WithdrawManualInitRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{55}
}

func (x *WithdrawManualInitRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetUserNid() string {
	if x != nil {
		return x.UserNid
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetUserWarehouseId() string {
	if x != nil {
		return x.UserWarehouseId
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetBrokerWarehouseId() string {
	if x != nil {
		return x.BrokerWarehouseId
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetBrokerTreasuryId() string {
	if x != nil {
		return x.BrokerTreasuryId
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetBrokerChannelId() string {
	if x != nil {
		return x.BrokerChannelId
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetUserFeeQuantity() string {
	if x != nil {
		return x.UserFeeQuantity
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetUserFeeAsset() string {
	if x != nil {
		return x.UserFeeAsset
	}
	return ""
}

func (x *WithdrawManualInitRequest) GetTreasuryType() TreasuryType {
	if x != nil {
		return x.TreasuryType
	}
	return TreasuryType_TREASURY_TYPE_UNSPECIFIED
}

type WithdrawManualInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string status = 1;
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// repeated string error = 3;
	Data *WithdrawTrxData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WithdrawManualInitResponse) Reset() {
	*x = WithdrawManualInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawManualInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawManualInitResponse) ProtoMessage() {}

func (x *WithdrawManualInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawManualInitResponse.ProtoReflect.Descriptor instead.
func (*WithdrawManualInitResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{56}
}

func (x *WithdrawManualInitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WithdrawManualInitResponse) GetData() *WithdrawTrxData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WithdrawCurrentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList []string       `protobuf:"bytes,1,rep,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	Status WithdrawStatus `protobuf:"varint,2,opt,name=status,proto3,enum=financialCoordinator.crypto.WithdrawStatus" json:"status,omitempty"`
}

func (x *WithdrawCurrentStatus) Reset() {
	*x = WithdrawCurrentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawCurrentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawCurrentStatus) ProtoMessage() {}

func (x *WithdrawCurrentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawCurrentStatus.ProtoReflect.Descriptor instead.
func (*WithdrawCurrentStatus) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{57}
}

func (x *WithdrawCurrentStatus) GetIdList() []string {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *WithdrawCurrentStatus) GetStatus() WithdrawStatus {
	if x != nil {
		return x.Status
	}
	return WithdrawStatus_WITHDRAW_STATUS_UNSPECIFIED
}

type WithdrawProceedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList []string                  `protobuf:"bytes,1,rep,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	Action WithdrawTransactionAction `protobuf:"varint,2,opt,name=action,proto3,enum=financialCoordinator.crypto.WithdrawTransactionAction" json:"action,omitempty"` // change status from pod to "to_status"
}

func (x *WithdrawProceedRequest) Reset() {
	*x = WithdrawProceedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawProceedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawProceedRequest) ProtoMessage() {}

func (x *WithdrawProceedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawProceedRequest.ProtoReflect.Descriptor instead.
func (*WithdrawProceedRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{58}
}

func (x *WithdrawProceedRequest) GetIdList() []string {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *WithdrawProceedRequest) GetAction() WithdrawTransactionAction {
	if x != nil {
		return x.Action
	}
	return WithdrawTransactionAction_WITHDRAW_TRANSACTION_ACTION_UNSPECIFIED
}

type WithdrawProceedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *WithdrawCurrentStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WithdrawProceedResponse) Reset() {
	*x = WithdrawProceedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawProceedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawProceedResponse) ProtoMessage() {}

func (x *WithdrawProceedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawProceedResponse.ProtoReflect.Descriptor instead.
func (*WithdrawProceedResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{59}
}

func (x *WithdrawProceedResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WithdrawProceedResponse) GetData() *WithdrawCurrentStatus {
	if x != nil {
		return x.Data
	}
	return nil
}

type WithdrawSettlementDeclareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BrokerTreasuryId       string                 `protobuf:"bytes,2,opt,name=broker_treasury_id,json=brokerTreasuryId,proto3" json:"broker_treasury_id,omitempty"` // optional. When provided, withdraw will be finalized with this treasury.
	ServiceProviderXid     string                 `protobuf:"bytes,3,opt,name=service_provider_xid,json=serviceProviderXid,proto3" json:"service_provider_xid,omitempty"`
	TransactionFeeQuantity string                 `protobuf:"bytes,4,opt,name=transaction_fee_quantity,json=transactionFeeQuantity,proto3" json:"transaction_fee_quantity,omitempty"`
	TransactionFeeAsset    string                 `protobuf:"bytes,5,opt,name=transaction_fee_asset,json=transactionFeeAsset,proto3" json:"transaction_fee_asset,omitempty"`
	SettledTime            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=settled_time,json=settledTime,proto3" json:"settled_time,omitempty"` // optional. When provided, settlement time will be this, otherwise the moment this request is made will be used.
}

func (x *WithdrawSettlementDeclareRequest) Reset() {
	*x = WithdrawSettlementDeclareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawSettlementDeclareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawSettlementDeclareRequest) ProtoMessage() {}

func (x *WithdrawSettlementDeclareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawSettlementDeclareRequest.ProtoReflect.Descriptor instead.
func (*WithdrawSettlementDeclareRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{60}
}

func (x *WithdrawSettlementDeclareRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WithdrawSettlementDeclareRequest) GetBrokerTreasuryId() string {
	if x != nil {
		return x.BrokerTreasuryId
	}
	return ""
}

func (x *WithdrawSettlementDeclareRequest) GetServiceProviderXid() string {
	if x != nil {
		return x.ServiceProviderXid
	}
	return ""
}

func (x *WithdrawSettlementDeclareRequest) GetTransactionFeeQuantity() string {
	if x != nil {
		return x.TransactionFeeQuantity
	}
	return ""
}

func (x *WithdrawSettlementDeclareRequest) GetTransactionFeeAsset() string {
	if x != nil {
		return x.TransactionFeeAsset
	}
	return ""
}

func (x *WithdrawSettlementDeclareRequest) GetSettledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SettledTime
	}
	return nil
}

type WithdrawSettlementDeclareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *WithdrawTrxData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WithdrawSettlementDeclareResponse) Reset() {
	*x = WithdrawSettlementDeclareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawSettlementDeclareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawSettlementDeclareResponse) ProtoMessage() {}

func (x *WithdrawSettlementDeclareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawSettlementDeclareResponse.ProtoReflect.Descriptor instead.
func (*WithdrawSettlementDeclareResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{61}
}

func (x *WithdrawSettlementDeclareResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WithdrawSettlementDeclareResponse) GetData() *WithdrawTrxData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WithdrawCompletenessDeclareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Txid string `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *WithdrawCompletenessDeclareRequest) Reset() {
	*x = WithdrawCompletenessDeclareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawCompletenessDeclareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawCompletenessDeclareRequest) ProtoMessage() {}

func (x *WithdrawCompletenessDeclareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawCompletenessDeclareRequest.ProtoReflect.Descriptor instead.
func (*WithdrawCompletenessDeclareRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{62}
}

func (x *WithdrawCompletenessDeclareRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WithdrawCompletenessDeclareRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type WithdrawCompletenessDeclareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *WithdrawTrxData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WithdrawCompletenessDeclareResponse) Reset() {
	*x = WithdrawCompletenessDeclareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawCompletenessDeclareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawCompletenessDeclareResponse) ProtoMessage() {}

func (x *WithdrawCompletenessDeclareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawCompletenessDeclareResponse.ProtoReflect.Descriptor instead.
func (*WithdrawCompletenessDeclareResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{63}
}

func (x *WithdrawCompletenessDeclareResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WithdrawCompletenessDeclareResponse) GetData() *WithdrawTrxData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WithdrawMakeCorrectiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *WithdrawMakeCorrectiveRequest) Reset() {
	*x = WithdrawMakeCorrectiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMakeCorrectiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMakeCorrectiveRequest) ProtoMessage() {}

func (x *WithdrawMakeCorrectiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMakeCorrectiveRequest.ProtoReflect.Descriptor instead.
func (*WithdrawMakeCorrectiveRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{64}
}

func (x *WithdrawMakeCorrectiveRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WithdrawMakeCorrectiveRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type WithdrawMakeCorrectiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   repeated string error = 1;
	//   string status = 2;
	Message string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *WithdrawTrxData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WithdrawMakeCorrectiveResponse) Reset() {
	*x = WithdrawMakeCorrectiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMakeCorrectiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMakeCorrectiveResponse) ProtoMessage() {}

func (x *WithdrawMakeCorrectiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMakeCorrectiveResponse.ProtoReflect.Descriptor instead.
func (*WithdrawMakeCorrectiveResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{65}
}

func (x *WithdrawMakeCorrectiveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WithdrawMakeCorrectiveResponse) GetData() *WithdrawTrxData {
	if x != nil {
		return x.Data
	}
	return nil
}

////////////////////////////////////////////////
//////////        WithdrawComment      /////////
////////////////////////////////////////////////
type WithdrawCommentCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Description   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Title         string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *WithdrawCommentCreateRequest) Reset() {
	*x = WithdrawCommentCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawCommentCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawCommentCreateRequest) ProtoMessage() {}

func (x *WithdrawCommentCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawCommentCreateRequest.ProtoReflect.Descriptor instead.
func (*WithdrawCommentCreateRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{66}
}

func (x *WithdrawCommentCreateRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *WithdrawCommentCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WithdrawCommentCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type WithdrawCommentCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string status = 1;
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// repeated string error = 3;
	Data *Comment `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WithdrawCommentCreateResponse) Reset() {
	*x = WithdrawCommentCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawCommentCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawCommentCreateResponse) ProtoMessage() {}

func (x *WithdrawCommentCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawCommentCreateResponse.ProtoReflect.Descriptor instead.
func (*WithdrawCommentCreateResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{67}
}

func (x *WithdrawCommentCreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WithdrawCommentCreateResponse) GetData() *Comment {
	if x != nil {
		return x.Data
	}
	return nil
}

type WithdrawCommentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *WithdrawCommentListRequest) Reset() {
	*x = WithdrawCommentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawCommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawCommentListRequest) ProtoMessage() {}

func (x *WithdrawCommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawCommentListRequest.ProtoReflect.Descriptor instead.
func (*WithdrawCommentListRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{68}
}

func (x *WithdrawCommentListRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type WithdrawCommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string status=1;
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// repeated string error=3;
	Data *WithdrawCommentListResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WithdrawCommentListResponse) Reset() {
	*x = WithdrawCommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawCommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawCommentListResponse) ProtoMessage() {}

func (x *WithdrawCommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawCommentListResponse.ProtoReflect.Descriptor instead.
func (*WithdrawCommentListResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{69}
}

func (x *WithdrawCommentListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WithdrawCommentListResponse) GetData() *WithdrawCommentListResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositClaimInitResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceNumber    string        `protobuf:"bytes,2,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	Asset            string        `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	Network          string        `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	Qty              string        `protobuf:"bytes,5,opt,name=qty,proto3" json:"qty,omitempty"`
	Treasury         string        `protobuf:"bytes,6,opt,name=treasury,proto3" json:"treasury,omitempty"`
	ToAddress        string        `protobuf:"bytes,7,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"` // rabex (broker) address that user deposits crypto to it
	ToMemo           string        `protobuf:"bytes,8,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`          // rabex (broker) memo that user deposits crypto to it
	TrxInfo          string        `protobuf:"bytes,9,opt,name=trx_info,json=trxInfo,proto3" json:"trx_info,omitempty"`
	Status           DepositStatus `protobuf:"varint,10,opt,name=status,proto3,enum=financialCoordinator.crypto.DepositStatus" json:"status,omitempty"`
	CountDownMinutes uint64        `protobuf:"varint,11,opt,name=count_down_minutes,json=countDownMinutes,proto3" json:"count_down_minutes,omitempty"`
}

func (x *DepositClaimInitResponse_Data) Reset() {
	*x = DepositClaimInitResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimInitResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimInitResponse_Data) ProtoMessage() {}

func (x *DepositClaimInitResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimInitResponse_Data.ProtoReflect.Descriptor instead.
func (*DepositClaimInitResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DepositClaimInitResponse_Data) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DepositClaimInitResponse_Data) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *DepositClaimInitResponse_Data) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DepositClaimInitResponse_Data) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DepositClaimInitResponse_Data) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *DepositClaimInitResponse_Data) GetTreasury() string {
	if x != nil {
		return x.Treasury
	}
	return ""
}

func (x *DepositClaimInitResponse_Data) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *DepositClaimInitResponse_Data) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *DepositClaimInitResponse_Data) GetTrxInfo() string {
	if x != nil {
		return x.TrxInfo
	}
	return ""
}

func (x *DepositClaimInitResponse_Data) GetStatus() DepositStatus {
	if x != nil {
		return x.Status
	}
	return DepositStatus_CRYPTO_DEPOSIT_STATUS_UNSPECIFIED
}

func (x *DepositClaimInitResponse_Data) GetCountDownMinutes() uint64 {
	if x != nil {
		return x.CountDownMinutes
	}
	return 0
}

type DepositTransactionSuspendRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset     string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Network   string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Qty       string `protobuf:"bytes,3,opt,name=qty,proto3" json:"qty,omitempty"`
	Treasury  string `protobuf:"bytes,4,opt,name=treasury,proto3" json:"treasury,omitempty"`                    // rabex (broker) treasury
	ToAddress string `protobuf:"bytes,5,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"` // rabex (broker) address that user deposits crypto to it
	ToMemo    string `protobuf:"bytes,6,opt,name=to_memo,json=toMemo,proto3" json:"to_memo,omitempty"`          // rabex (broker) memo that user deposits crypto to it
	TrxInfo   string `protobuf:"bytes,7,opt,name=trxInfo,proto3" json:"trxInfo,omitempty"`
}

func (x *DepositTransactionSuspendRequest_Item) Reset() {
	*x = DepositTransactionSuspendRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionSuspendRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionSuspendRequest_Item) ProtoMessage() {}

func (x *DepositTransactionSuspendRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionSuspendRequest_Item.ProtoReflect.Descriptor instead.
func (*DepositTransactionSuspendRequest_Item) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{20, 0}
}

func (x *DepositTransactionSuspendRequest_Item) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DepositTransactionSuspendRequest_Item) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DepositTransactionSuspendRequest_Item) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *DepositTransactionSuspendRequest_Item) GetTreasury() string {
	if x != nil {
		return x.Treasury
	}
	return ""
}

func (x *DepositTransactionSuspendRequest_Item) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *DepositTransactionSuspendRequest_Item) GetToMemo() string {
	if x != nil {
		return x.ToMemo
	}
	return ""
}

func (x *DepositTransactionSuspendRequest_Item) GetTrxInfo() string {
	if x != nil {
		return x.TrxInfo
	}
	return ""
}

type DepositFilterResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64                      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*CryptoDepositTransaction `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *DepositFilterResponse_Data) Reset() {
	*x = DepositFilterResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFilterResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFilterResponse_Data) ProtoMessage() {}

func (x *DepositFilterResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFilterResponse_Data.ProtoReflect.Descriptor instead.
func (*DepositFilterResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{27, 0}
}

func (x *DepositFilterResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DepositFilterResponse_Data) GetRows() []*CryptoDepositTransaction {
	if x != nil {
		return x.Rows
	}
	return nil
}

type DepositTransactionListResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64                      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*CryptoDepositTransaction `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *DepositTransactionListResponse_Data) Reset() {
	*x = DepositTransactionListResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionListResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionListResponse_Data) ProtoMessage() {}

func (x *DepositTransactionListResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionListResponse_Data.ProtoReflect.Descriptor instead.
func (*DepositTransactionListResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{29, 0}
}

func (x *DepositTransactionListResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DepositTransactionListResponse_Data) GetRows() []*CryptoDepositTransaction {
	if x != nil {
		return x.Rows
	}
	return nil
}

type DepositClaimListResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64                      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*CryptoDepositTransaction `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *DepositClaimListResponse_Data) Reset() {
	*x = DepositClaimListResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositClaimListResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositClaimListResponse_Data) ProtoMessage() {}

func (x *DepositClaimListResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositClaimListResponse_Data.ProtoReflect.Descriptor instead.
func (*DepositClaimListResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{31, 0}
}

func (x *DepositClaimListResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DepositClaimListResponse_Data) GetRows() []*CryptoDepositTransaction {
	if x != nil {
		return x.Rows
	}
	return nil
}

type DepositHistoryResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*CryptoDepositHistory `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *DepositHistoryResponse_Data) Reset() {
	*x = DepositHistoryResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositHistoryResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositHistoryResponse_Data) ProtoMessage() {}

func (x *DepositHistoryResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositHistoryResponse_Data.ProtoReflect.Descriptor instead.
func (*DepositHistoryResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{33, 0}
}

func (x *DepositHistoryResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DepositHistoryResponse_Data) GetRows() []*CryptoDepositHistory {
	if x != nil {
		return x.Rows
	}
	return nil
}

type DepositCommentListResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*Comment `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *DepositCommentListResponse_Data) Reset() {
	*x = DepositCommentListResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositCommentListResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositCommentListResponse_Data) ProtoMessage() {}

func (x *DepositCommentListResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositCommentListResponse_Data.ProtoReflect.Descriptor instead.
func (*DepositCommentListResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{38, 0}
}

func (x *DepositCommentListResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DepositCommentListResponse_Data) GetRows() []*Comment {
	if x != nil {
		return x.Rows
	}
	return nil
}

type WithdrawFilterResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64                       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*CryptoWithdrawTransaction `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *WithdrawFilterResponse_Data) Reset() {
	*x = WithdrawFilterResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFilterResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFilterResponse_Data) ProtoMessage() {}

func (x *WithdrawFilterResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFilterResponse_Data.ProtoReflect.Descriptor instead.
func (*WithdrawFilterResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{52, 0}
}

func (x *WithdrawFilterResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *WithdrawFilterResponse_Data) GetRows() []*CryptoWithdrawTransaction {
	if x != nil {
		return x.Rows
	}
	return nil
}

type WithdrawHistoryResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64                   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*CryptoWithdrawHistory `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *WithdrawHistoryResponse_Data) Reset() {
	*x = WithdrawHistoryResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawHistoryResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawHistoryResponse_Data) ProtoMessage() {}

func (x *WithdrawHistoryResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawHistoryResponse_Data.ProtoReflect.Descriptor instead.
func (*WithdrawHistoryResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{54, 0}
}

func (x *WithdrawHistoryResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *WithdrawHistoryResponse_Data) GetRows() []*CryptoWithdrawHistory {
	if x != nil {
		return x.Rows
	}
	return nil
}

type WithdrawCommentListResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*Comment `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *WithdrawCommentListResponse_Data) Reset() {
	*x = WithdrawCommentListResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawCommentListResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawCommentListResponse_Data) ProtoMessage() {}

func (x *WithdrawCommentListResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_crypto_messages_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawCommentListResponse_Data.ProtoReflect.Descriptor instead.
func (*WithdrawCommentListResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_crypto_messages_proto_rawDescGZIP(), []int{69, 0}
}

func (x *WithdrawCommentListResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *WithdrawCommentListResponse_Data) GetRows() []*Comment {
	if x != nil {
		return x.Rows
	}
	return nil
}

var File_financial_coordinator_crypto_messages_proto protoreflect.FileDescriptor

var file_financial_coordinator_crypto_messages_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x66, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf8, 0x02, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x10, 0x0a,
	0x03, 0x71, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4d,
	0x65, 0x6d, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x78, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a,
	0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xdb, 0x09, 0x0a, 0x18, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x78, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x78, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72,
	0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x20, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x4e, 0x0a, 0x0d, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x33, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xe4,
	0x03, 0x0a, 0x14, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x78, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x71, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x22, 0xe7, 0x03, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xe0,
	0x02, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x74, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f,
	0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x78, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2a, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x73, 0x22, 0xc8, 0x02, 0x0a, 0x1a, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x78, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x78, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x64, 0x22, 0x76, 0x0a, 0x1b,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x49, 0x6e, 0x69, 0x74,
	0x50, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x74,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x78, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x78, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x72, 0x0a, 0x17, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdc, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x78, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x78, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x75, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x73, 0x0a, 0x14,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e,
	0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x7c, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x52, 0x65, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x7c, 0x0a, 0x19, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x87, 0x01,
	0x0a, 0x1d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a, 0x1e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3c, 0x0a, 0x21, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x22, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x3e, 0x0a, 0x23, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x73, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x87, 0x01, 0x0a, 0x24, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x73, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb3, 0x02, 0x0a, 0x20,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x56, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xb6, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x71, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x78, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x78, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x84, 0x01, 0x0a, 0x21, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xce, 0x02, 0x0a, 0x20, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x10, 0x0a,
	0x03, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4d,
	0x65, 0x6d, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x57,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x21, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc9, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x75, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x72, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x78, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x17, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6e, 0x63, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x1d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8a, 0x07,
	0x0a, 0x14, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x25, 0x0a,
	0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46,
	0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x65, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x65, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6d,
	0x65, 0x6d, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4d, 0x65, 0x6d,
	0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x73,
	0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e,
	0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x78, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x48, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x63, 0x73, 0x76, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x43,
	0x73, 0x76, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x22, 0xf9, 0x01, 0x0a, 0x15, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x73, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x76, 0x1a, 0x67, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x49, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x52, 0x0a, 0x1d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x8b, 0x02, 0x0a, 0x1e, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x73, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x76, 0x1a,
	0x67, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x49, 0x0a,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x4c, 0x0a, 0x17, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x73, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x76, 0x1a,
	0x67, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x49, 0x0a,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xf0, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x16,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x4c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x63,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x45, 0x0a, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x66, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x1b, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x72, 0x0a, 0x1c, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x19, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xe0, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x56, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x22, 0xb4, 0x07, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x3c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x66, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4d, 0x65,
	0x6d, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x64, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x57,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x57,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e,
	0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x6d, 0x73, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x4e, 0x0a,
	0x0d, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x22,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0c, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x37,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xb8, 0x02, 0x0a, 0x1a, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4d, 0x65,
	0x6d, 0x6f, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66,
	0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x7c, 0x0a, 0x1b, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46,
	0x75, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xff, 0x01, 0x0a, 0x1d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x75,
	0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x7f, 0x0a, 0x1e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46,
	0x75, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaf, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x39, 0x0a, 0x1d, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xa6, 0x0d, 0x0a, 0x19, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x75, 0x73, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0d, 0x74, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x54,
	0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78,
	0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x6d, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x6d, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x66, 0x65, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a,
	0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x65, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a,
	0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x78, 0x69, 0x64, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x58, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x65, 0x6c, 0x65, 0x64, 0x18,
	0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x53, 0x65, 0x74, 0x74, 0x65, 0x6c, 0x65, 0x64, 0x22, 0xcd, 0x04, 0x0a, 0x15,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x65,
	0x6d, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x6f,
	0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x73, 0x65,
	0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65,
	0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x46,
	0x65, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x65, 0x6c, 0x65, 0x64, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x53, 0x65, 0x74, 0x74, 0x65, 0x6c, 0x65, 0x64, 0x22, 0x91, 0x02, 0x0a, 0x0f,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x72, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x66, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x99, 0x01, 0x0a, 0x13, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x72, 0x0a, 0x14, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x54, 0x72, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xf3, 0x06, 0x0a, 0x15, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x6c, 0x6f,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x65, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x65, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f,
	0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x75, 0x73, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x63, 0x73, 0x76, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x43, 0x73, 0x76, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x16, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x76, 0x1a, 0x68, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x4a, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x22, 0xf1, 0x01, 0x0a, 0x16, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x44, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xe8, 0x01, 0x0a, 0x17, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x64, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x46, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x22, 0xe5, 0x04, 0x0a, 0x19, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65,
	0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x0d, 0x74,
	0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x29, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74,
	0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x78, 0x0a, 0x1a, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x72, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x15, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x81, 0x01, 0x0a,
	0x16, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x4e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x36, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x7b, 0x0a, 0x17, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbf, 0x02,
	0x0a, 0x20, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x78, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x58,
	0x69, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x65, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x15,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x7f, 0x0a, 0x21, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x54, 0x72, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x48, 0x0a, 0x22, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x23, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x6e,
	0x65, 0x73, 0x73, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x54, 0x72, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x51,
	0x0a, 0x1d, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x6b, 0x65, 0x43, 0x6f,
	0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x7c, 0x0a, 0x1e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x6b,
	0x65, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x54, 0x72, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x7d, 0x0a, 0x1c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x73,
	0x0a, 0x1d, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x43, 0x0a, 0x1a, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x1b, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x56, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x42, 0x32, 0x5a,
	0x30, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x3b, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_financial_coordinator_crypto_messages_proto_rawDescOnce sync.Once
	file_financial_coordinator_crypto_messages_proto_rawDescData = file_financial_coordinator_crypto_messages_proto_rawDesc
)

func file_financial_coordinator_crypto_messages_proto_rawDescGZIP() []byte {
	file_financial_coordinator_crypto_messages_proto_rawDescOnce.Do(func() {
		file_financial_coordinator_crypto_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_financial_coordinator_crypto_messages_proto_rawDescData)
	})
	return file_financial_coordinator_crypto_messages_proto_rawDescData
}

var file_financial_coordinator_crypto_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 80)
var file_financial_coordinator_crypto_messages_proto_goTypes = []interface{}{
	(*DepositClaim)(nil),                          // 0: financialCoordinator.crypto.DepositClaim
	(*CryptoDepositTransaction)(nil),              // 1: financialCoordinator.crypto.CryptoDepositTransaction
	(*CryptoDepositHistory)(nil),                  // 2: financialCoordinator.crypto.CryptoDepositHistory
	(*DepositClaimInitRequest)(nil),               // 3: financialCoordinator.crypto.DepositClaimInitRequest
	(*DepositClaimInitResponse)(nil),              // 4: financialCoordinator.crypto.DepositClaimInitResponse
	(*DepositClaimInitPodRequest)(nil),            // 5: financialCoordinator.crypto.DepositClaimInitPodRequest
	(*DepositClaimInitPodResponse)(nil),           // 6: financialCoordinator.crypto.DepositClaimInitPodResponse
	(*DepositClaimPodRequest)(nil),                // 7: financialCoordinator.crypto.DepositClaimPodRequest
	(*DepositClaimPodResponse)(nil),               // 8: financialCoordinator.crypto.DepositClaimPodResponse
	(*UpdateDepositClaimRequest)(nil),             // 9: financialCoordinator.crypto.UpdateDepositClaimRequest
	(*UpdateDepositClaimResponse)(nil),            // 10: financialCoordinator.crypto.UpdateDepositClaimResponse
	(*DepositCurrentStatus)(nil),                  // 11: financialCoordinator.crypto.DepositCurrentStatus
	(*DepositClaimReactRequest)(nil),              // 12: financialCoordinator.crypto.DepositClaimReactRequest
	(*DepositClaimReactResponse)(nil),             // 13: financialCoordinator.crypto.DepositClaimReactResponse
	(*DepositTransactionInitRequest)(nil),         // 14: financialCoordinator.crypto.DepositTransactionInitRequest
	(*DepositTransactionInitResponse)(nil),        // 15: financialCoordinator.crypto.DepositTransactionInitResponse
	(*DepositTransactionFinalizeRequest)(nil),     // 16: financialCoordinator.crypto.DepositTransactionFinalizeRequest
	(*DepositTransactionFinalizeResponse)(nil),    // 17: financialCoordinator.crypto.DepositTransactionFinalizeResponse
	(*DepositTransactionConfiscateRequest)(nil),   // 18: financialCoordinator.crypto.DepositTransactionConfiscateRequest
	(*DepositTransactionConfiscateResponse)(nil),  // 19: financialCoordinator.crypto.DepositTransactionConfiscateResponse
	(*DepositTransactionSuspendRequest)(nil),      // 20: financialCoordinator.crypto.DepositTransactionSuspendRequest
	(*DepositTransactionSuspendResponse)(nil),     // 21: financialCoordinator.crypto.DepositTransactionSuspendResponse
	(*DepositClaimReconcileInitRequest)(nil),      // 22: financialCoordinator.crypto.DepositClaimReconcileInitRequest
	(*DepositClaimReconcileInitResponse)(nil),     // 23: financialCoordinator.crypto.DepositClaimReconcileInitResponse
	(*DepositClaimReconcileRequest)(nil),          // 24: financialCoordinator.crypto.DepositClaimReconcileRequest
	(*DepositClaimReconcileResponse)(nil),         // 25: financialCoordinator.crypto.DepositClaimReconcileResponse
	(*DepositFilterRequest)(nil),                  // 26: financialCoordinator.crypto.DepositFilterRequest
	(*DepositFilterResponse)(nil),                 // 27: financialCoordinator.crypto.DepositFilterResponse
	(*DepositTransactionListRequest)(nil),         // 28: financialCoordinator.crypto.DepositTransactionListRequest
	(*DepositTransactionListResponse)(nil),        // 29: financialCoordinator.crypto.DepositTransactionListResponse
	(*DepositClaimListRequest)(nil),               // 30: financialCoordinator.crypto.DepositClaimListRequest
	(*DepositClaimListResponse)(nil),              // 31: financialCoordinator.crypto.DepositClaimListResponse
	(*DepositHistoryRequest)(nil),                 // 32: financialCoordinator.crypto.DepositHistoryRequest
	(*DepositHistoryResponse)(nil),                // 33: financialCoordinator.crypto.DepositHistoryResponse
	(*Comment)(nil),                               // 34: financialCoordinator.crypto.Comment
	(*DepositCommentCreateRequest)(nil),           // 35: financialCoordinator.crypto.DepositCommentCreateRequest
	(*DepositCommentCreateResponse)(nil),          // 36: financialCoordinator.crypto.DepositCommentCreateResponse
	(*DepositCommentListRequest)(nil),             // 37: financialCoordinator.crypto.DepositCommentListRequest
	(*DepositCommentListResponse)(nil),            // 38: financialCoordinator.crypto.DepositCommentListResponse
	(*TransactionSummary)(nil),                    // 39: financialCoordinator.crypto.TransactionSummary
	(*DepositFullNodeInitRequest)(nil),            // 40: financialCoordinator.crypto.DepositFullNodeInitRequest
	(*DepositFullNodeInitResponse)(nil),           // 41: financialCoordinator.crypto.DepositFullNodeInitResponse
	(*DepositFullNodeConfirmRequest)(nil),         // 42: financialCoordinator.crypto.DepositFullNodeConfirmRequest
	(*DepositFullNodeConfirmResponse)(nil),        // 43: financialCoordinator.crypto.DepositFullNodeConfirmResponse
	(*DepositFullNodeCancelRequest)(nil),          // 44: financialCoordinator.crypto.DepositFullNodeCancelRequest
	(*DepositFullNodeCancelResponse)(nil),         // 45: financialCoordinator.crypto.DepositFullNodeCancelResponse
	(*CryptoWithdrawTransaction)(nil),             // 46: financialCoordinator.crypto.CryptoWithdrawTransaction
	(*CryptoWithdrawHistory)(nil),                 // 47: financialCoordinator.crypto.CryptoWithdrawHistory
	(*WithdrawTrxData)(nil),                       // 48: financialCoordinator.crypto.WithdrawTrxData
	(*WithdrawInitRequest)(nil),                   // 49: financialCoordinator.crypto.WithdrawInitRequest
	(*WithdrawInitResponse)(nil),                  // 50: financialCoordinator.crypto.WithdrawInitResponse
	(*WithdrawFilterRequest)(nil),                 // 51: financialCoordinator.crypto.WithdrawFilterRequest
	(*WithdrawFilterResponse)(nil),                // 52: financialCoordinator.crypto.WithdrawFilterResponse
	(*WithdrawHistoryRequest)(nil),                // 53: financialCoordinator.crypto.WithdrawHistoryRequest
	(*WithdrawHistoryResponse)(nil),               // 54: financialCoordinator.crypto.WithdrawHistoryResponse
	(*WithdrawManualInitRequest)(nil),             // 55: financialCoordinator.crypto.WithdrawManualInitRequest
	(*WithdrawManualInitResponse)(nil),            // 56: financialCoordinator.crypto.WithdrawManualInitResponse
	(*WithdrawCurrentStatus)(nil),                 // 57: financialCoordinator.crypto.WithdrawCurrentStatus
	(*WithdrawProceedRequest)(nil),                // 58: financialCoordinator.crypto.WithdrawProceedRequest
	(*WithdrawProceedResponse)(nil),               // 59: financialCoordinator.crypto.WithdrawProceedResponse
	(*WithdrawSettlementDeclareRequest)(nil),      // 60: financialCoordinator.crypto.WithdrawSettlementDeclareRequest
	(*WithdrawSettlementDeclareResponse)(nil),     // 61: financialCoordinator.crypto.WithdrawSettlementDeclareResponse
	(*WithdrawCompletenessDeclareRequest)(nil),    // 62: financialCoordinator.crypto.WithdrawCompletenessDeclareRequest
	(*WithdrawCompletenessDeclareResponse)(nil),   // 63: financialCoordinator.crypto.WithdrawCompletenessDeclareResponse
	(*WithdrawMakeCorrectiveRequest)(nil),         // 64: financialCoordinator.crypto.WithdrawMakeCorrectiveRequest
	(*WithdrawMakeCorrectiveResponse)(nil),        // 65: financialCoordinator.crypto.WithdrawMakeCorrectiveResponse
	(*WithdrawCommentCreateRequest)(nil),          // 66: financialCoordinator.crypto.WithdrawCommentCreateRequest
	(*WithdrawCommentCreateResponse)(nil),         // 67: financialCoordinator.crypto.WithdrawCommentCreateResponse
	(*WithdrawCommentListRequest)(nil),            // 68: financialCoordinator.crypto.WithdrawCommentListRequest
	(*WithdrawCommentListResponse)(nil),           // 69: financialCoordinator.crypto.WithdrawCommentListResponse
	(*DepositClaimInitResponse_Data)(nil),         // 70: financialCoordinator.crypto.DepositClaimInitResponse.Data
	(*DepositTransactionSuspendRequest_Item)(nil), // 71: financialCoordinator.crypto.DepositTransactionSuspendRequest.Item
	(*DepositFilterResponse_Data)(nil),            // 72: financialCoordinator.crypto.DepositFilterResponse.Data
	(*DepositTransactionListResponse_Data)(nil),   // 73: financialCoordinator.crypto.DepositTransactionListResponse.Data
	(*DepositClaimListResponse_Data)(nil),         // 74: financialCoordinator.crypto.DepositClaimListResponse.Data
	(*DepositHistoryResponse_Data)(nil),           // 75: financialCoordinator.crypto.DepositHistoryResponse.Data
	(*DepositCommentListResponse_Data)(nil),       // 76: financialCoordinator.crypto.DepositCommentListResponse.Data
	(*WithdrawFilterResponse_Data)(nil),           // 77: financialCoordinator.crypto.WithdrawFilterResponse.Data
	(*WithdrawHistoryResponse_Data)(nil),          // 78: financialCoordinator.crypto.WithdrawHistoryResponse.Data
	(*WithdrawCommentListResponse_Data)(nil),      // 79: financialCoordinator.crypto.WithdrawCommentListResponse.Data
	(DepositStatus)(0),                            // 80: financialCoordinator.crypto.DepositStatus
	(DepositType)(0),                              // 81: financialCoordinator.crypto.DepositType
	(TreasuryType)(0),                             // 82: financialCoordinator.crypto.TreasuryType
	(*timestamppb.Timestamp)(nil),                 // 83: google.protobuf.Timestamp
	(DepositTransactionAction)(0),                 // 84: financialCoordinator.crypto.DepositTransactionAction
	(DepositReconcileAction)(0),                   // 85: financialCoordinator.crypto.DepositReconcileAction
	(WithdrawType)(0),                             // 86: financialCoordinator.crypto.WithdrawType
	(WithdrawStatus)(0),                           // 87: financialCoordinator.crypto.WithdrawStatus
	(WithdrawTransactionAction)(0),                // 88: financialCoordinator.crypto.WithdrawTransactionAction
}
var file_financial_coordinator_crypto_messages_proto_depIdxs = []int32{
	80, // 0: financialCoordinator.crypto.DepositClaim.status:type_name -> financialCoordinator.crypto.DepositStatus
	81, // 1: financialCoordinator.crypto.DepositClaim.type:type_name -> financialCoordinator.crypto.DepositType
	81, // 2: financialCoordinator.crypto.CryptoDepositTransaction.type:type_name -> financialCoordinator.crypto.DepositType
	80, // 3: financialCoordinator.crypto.CryptoDepositTransaction.status_code:type_name -> financialCoordinator.crypto.DepositStatus
	82, // 4: financialCoordinator.crypto.CryptoDepositTransaction.treasury_type:type_name -> financialCoordinator.crypto.TreasuryType
	83, // 5: financialCoordinator.crypto.CryptoDepositTransaction.created:type_name -> google.protobuf.Timestamp
	83, // 6: financialCoordinator.crypto.CryptoDepositTransaction.updated:type_name -> google.protobuf.Timestamp
	80, // 7: financialCoordinator.crypto.CryptoDepositHistory.status:type_name -> financialCoordinator.crypto.DepositStatus
	83, // 8: financialCoordinator.crypto.CryptoDepositHistory.created:type_name -> google.protobuf.Timestamp
	83, // 9: financialCoordinator.crypto.CryptoDepositHistory.updated:type_name -> google.protobuf.Timestamp
	70, // 10: financialCoordinator.crypto.DepositClaimInitResponse.data:type_name -> financialCoordinator.crypto.DepositClaimInitResponse.Data
	0,  // 11: financialCoordinator.crypto.DepositClaimInitPodResponse.data:type_name -> financialCoordinator.crypto.DepositClaim
	0,  // 12: financialCoordinator.crypto.DepositClaimPodResponse.data:type_name -> financialCoordinator.crypto.DepositClaim
	0,  // 13: financialCoordinator.crypto.UpdateDepositClaimResponse.data:type_name -> financialCoordinator.crypto.DepositClaim
	80, // 14: financialCoordinator.crypto.DepositCurrentStatus.status:type_name -> financialCoordinator.crypto.DepositStatus
	80, // 15: financialCoordinator.crypto.DepositClaimReactRequest.to_status:type_name -> financialCoordinator.crypto.DepositStatus
	11, // 16: financialCoordinator.crypto.DepositClaimReactResponse.data:type_name -> financialCoordinator.crypto.DepositCurrentStatus
	84, // 17: financialCoordinator.crypto.DepositTransactionInitRequest.action:type_name -> financialCoordinator.crypto.DepositTransactionAction
	11, // 18: financialCoordinator.crypto.DepositTransactionInitResponse.data:type_name -> financialCoordinator.crypto.DepositCurrentStatus
	11, // 19: financialCoordinator.crypto.DepositTransactionFinalizeResponse.data:type_name -> financialCoordinator.crypto.DepositCurrentStatus
	11, // 20: financialCoordinator.crypto.DepositTransactionConfiscateResponse.data:type_name -> financialCoordinator.crypto.DepositCurrentStatus
	71, // 21: financialCoordinator.crypto.DepositTransactionSuspendRequest.list:type_name -> financialCoordinator.crypto.DepositTransactionSuspendRequest.Item
	11, // 22: financialCoordinator.crypto.DepositTransactionSuspendResponse.data:type_name -> financialCoordinator.crypto.DepositCurrentStatus
	0,  // 23: financialCoordinator.crypto.DepositClaimReconcileInitResponse.data:type_name -> financialCoordinator.crypto.DepositClaim
	85, // 24: financialCoordinator.crypto.DepositClaimReconcileRequest.action:type_name -> financialCoordinator.crypto.DepositReconcileAction
	0,  // 25: financialCoordinator.crypto.DepositClaimReconcileResponse.data:type_name -> financialCoordinator.crypto.DepositClaim
	80, // 26: financialCoordinator.crypto.DepositFilterRequest.status:type_name -> financialCoordinator.crypto.DepositStatus
	81, // 27: financialCoordinator.crypto.DepositFilterRequest.type:type_name -> financialCoordinator.crypto.DepositType
	83, // 28: financialCoordinator.crypto.DepositFilterRequest.created_time_start:type_name -> google.protobuf.Timestamp
	83, // 29: financialCoordinator.crypto.DepositFilterRequest.created_time_end:type_name -> google.protobuf.Timestamp
	72, // 30: financialCoordinator.crypto.DepositFilterResponse.data:type_name -> financialCoordinator.crypto.DepositFilterResponse.Data
	73, // 31: financialCoordinator.crypto.DepositTransactionListResponse.data:type_name -> financialCoordinator.crypto.DepositTransactionListResponse.Data
	74, // 32: financialCoordinator.crypto.DepositClaimListResponse.data:type_name -> financialCoordinator.crypto.DepositClaimListResponse.Data
	83, // 33: financialCoordinator.crypto.DepositHistoryRequest.created_time_start:type_name -> google.protobuf.Timestamp
	83, // 34: financialCoordinator.crypto.DepositHistoryRequest.created_time_end:type_name -> google.protobuf.Timestamp
	75, // 35: financialCoordinator.crypto.DepositHistoryResponse.data:type_name -> financialCoordinator.crypto.DepositHistoryResponse.Data
	83, // 36: financialCoordinator.crypto.Comment.created:type_name -> google.protobuf.Timestamp
	34, // 37: financialCoordinator.crypto.DepositCommentCreateResponse.data:type_name -> financialCoordinator.crypto.Comment
	76, // 38: financialCoordinator.crypto.DepositCommentListResponse.data:type_name -> financialCoordinator.crypto.DepositCommentListResponse.Data
	81, // 39: financialCoordinator.crypto.TransactionSummary.type:type_name -> financialCoordinator.crypto.DepositType
	80, // 40: financialCoordinator.crypto.TransactionSummary.status_code:type_name -> financialCoordinator.crypto.DepositStatus
	82, // 41: financialCoordinator.crypto.TransactionSummary.treasury_type:type_name -> financialCoordinator.crypto.TreasuryType
	83, // 42: financialCoordinator.crypto.TransactionSummary.created:type_name -> google.protobuf.Timestamp
	83, // 43: financialCoordinator.crypto.TransactionSummary.updated:type_name -> google.protobuf.Timestamp
	39, // 44: financialCoordinator.crypto.DepositFullNodeInitResponse.data:type_name -> financialCoordinator.crypto.TransactionSummary
	39, // 45: financialCoordinator.crypto.DepositFullNodeConfirmResponse.data:type_name -> financialCoordinator.crypto.TransactionSummary
	86, // 46: financialCoordinator.crypto.CryptoWithdrawTransaction.type:type_name -> financialCoordinator.crypto.WithdrawType
	82, // 47: financialCoordinator.crypto.CryptoWithdrawTransaction.treasury_type:type_name -> financialCoordinator.crypto.TreasuryType
	87, // 48: financialCoordinator.crypto.CryptoWithdrawTransaction.status_code:type_name -> financialCoordinator.crypto.WithdrawStatus
	83, // 49: financialCoordinator.crypto.CryptoWithdrawTransaction.created:type_name -> google.protobuf.Timestamp
	83, // 50: financialCoordinator.crypto.CryptoWithdrawTransaction.updated:type_name -> google.protobuf.Timestamp
	83, // 51: financialCoordinator.crypto.CryptoWithdrawTransaction.Setteled:type_name -> google.protobuf.Timestamp
	87, // 52: financialCoordinator.crypto.CryptoWithdrawHistory.status:type_name -> financialCoordinator.crypto.WithdrawStatus
	83, // 53: financialCoordinator.crypto.CryptoWithdrawHistory.created:type_name -> google.protobuf.Timestamp
	83, // 54: financialCoordinator.crypto.CryptoWithdrawHistory.updated:type_name -> google.protobuf.Timestamp
	83, // 55: financialCoordinator.crypto.CryptoWithdrawHistory.Setteled:type_name -> google.protobuf.Timestamp
	87, // 56: financialCoordinator.crypto.WithdrawTrxData.status:type_name -> financialCoordinator.crypto.WithdrawStatus
	48, // 57: financialCoordinator.crypto.WithdrawInitResponse.data:type_name -> financialCoordinator.crypto.WithdrawTrxData
	87, // 58: financialCoordinator.crypto.WithdrawFilterRequest.status:type_name -> financialCoordinator.crypto.WithdrawStatus
	86, // 59: financialCoordinator.crypto.WithdrawFilterRequest.type:type_name -> financialCoordinator.crypto.WithdrawType
	83, // 60: financialCoordinator.crypto.WithdrawFilterRequest.created_time_start:type_name -> google.protobuf.Timestamp
	83, // 61: financialCoordinator.crypto.WithdrawFilterRequest.created_time_end:type_name -> google.protobuf.Timestamp
	77, // 62: financialCoordinator.crypto.WithdrawFilterResponse.data:type_name -> financialCoordinator.crypto.WithdrawFilterResponse.Data
	83, // 63: financialCoordinator.crypto.WithdrawHistoryRequest.created_time_start:type_name -> google.protobuf.Timestamp
	83, // 64: financialCoordinator.crypto.WithdrawHistoryRequest.created_time_end:type_name -> google.protobuf.Timestamp
	78, // 65: financialCoordinator.crypto.WithdrawHistoryResponse.data:type_name -> financialCoordinator.crypto.WithdrawHistoryResponse.Data
	82, // 66: financialCoordinator.crypto.WithdrawManualInitRequest.treasury_type:type_name -> financialCoordinator.crypto.TreasuryType
	48, // 67: financialCoordinator.crypto.WithdrawManualInitResponse.data:type_name -> financialCoordinator.crypto.WithdrawTrxData
	87, // 68: financialCoordinator.crypto.WithdrawCurrentStatus.status:type_name -> financialCoordinator.crypto.WithdrawStatus
	88, // 69: financialCoordinator.crypto.WithdrawProceedRequest.action:type_name -> financialCoordinator.crypto.WithdrawTransactionAction
	57, // 70: financialCoordinator.crypto.WithdrawProceedResponse.data:type_name -> financialCoordinator.crypto.WithdrawCurrentStatus
	83, // 71: financialCoordinator.crypto.WithdrawSettlementDeclareRequest.settled_time:type_name -> google.protobuf.Timestamp
	48, // 72: financialCoordinator.crypto.WithdrawSettlementDeclareResponse.data:type_name -> financialCoordinator.crypto.WithdrawTrxData
	48, // 73: financialCoordinator.crypto.WithdrawCompletenessDeclareResponse.data:type_name -> financialCoordinator.crypto.WithdrawTrxData
	48, // 74: financialCoordinator.crypto.WithdrawMakeCorrectiveResponse.data:type_name -> financialCoordinator.crypto.WithdrawTrxData
	34, // 75: financialCoordinator.crypto.WithdrawCommentCreateResponse.data:type_name -> financialCoordinator.crypto.Comment
	79, // 76: financialCoordinator.crypto.WithdrawCommentListResponse.data:type_name -> financialCoordinator.crypto.WithdrawCommentListResponse.Data
	80, // 77: financialCoordinator.crypto.DepositClaimInitResponse.Data.status:type_name -> financialCoordinator.crypto.DepositStatus
	1,  // 78: financialCoordinator.crypto.DepositFilterResponse.Data.rows:type_name -> financialCoordinator.crypto.CryptoDepositTransaction
	1,  // 79: financialCoordinator.crypto.DepositTransactionListResponse.Data.rows:type_name -> financialCoordinator.crypto.CryptoDepositTransaction
	1,  // 80: financialCoordinator.crypto.DepositClaimListResponse.Data.rows:type_name -> financialCoordinator.crypto.CryptoDepositTransaction
	2,  // 81: financialCoordinator.crypto.DepositHistoryResponse.Data.rows:type_name -> financialCoordinator.crypto.CryptoDepositHistory
	34, // 82: financialCoordinator.crypto.DepositCommentListResponse.Data.rows:type_name -> financialCoordinator.crypto.Comment
	46, // 83: financialCoordinator.crypto.WithdrawFilterResponse.Data.rows:type_name -> financialCoordinator.crypto.CryptoWithdrawTransaction
	47, // 84: financialCoordinator.crypto.WithdrawHistoryResponse.Data.rows:type_name -> financialCoordinator.crypto.CryptoWithdrawHistory
	34, // 85: financialCoordinator.crypto.WithdrawCommentListResponse.Data.rows:type_name -> financialCoordinator.crypto.Comment
	86, // [86:86] is the sub-list for method output_type
	86, // [86:86] is the sub-list for method input_type
	86, // [86:86] is the sub-list for extension type_name
	86, // [86:86] is the sub-list for extension extendee
	0,  // [0:86] is the sub-list for field type_name
}

func init() { file_financial_coordinator_crypto_messages_proto_init() }
func file_financial_coordinator_crypto_messages_proto_init() {
	if File_financial_coordinator_crypto_messages_proto != nil {
		return
	}
	file_financial_coordinator_crypto_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_financial_coordinator_crypto_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoDepositTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoDepositHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimInitPodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimInitPodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimPodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimPodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDepositClaimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDepositClaimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositCurrentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimReactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimReactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionFinalizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionFinalizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionConfiscateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionConfiscateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionSuspendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionSuspendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimReconcileInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimReconcileInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimReconcileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimReconcileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositCommentCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositCommentCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositCommentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositCommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFullNodeInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFullNodeInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFullNodeConfirmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFullNodeConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFullNodeCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFullNodeCancelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoWithdrawTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoWithdrawHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawTrxData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawManualInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawManualInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawCurrentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawProceedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawProceedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawSettlementDeclareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawSettlementDeclareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawCompletenessDeclareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawCompletenessDeclareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMakeCorrectiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMakeCorrectiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawCommentCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawCommentCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawCommentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawCommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimInitResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionSuspendRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFilterResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionListResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositClaimListResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositHistoryResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositCommentListResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFilterResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawHistoryResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_crypto_messages_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawCommentListResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_financial_coordinator_crypto_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   80,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_financial_coordinator_crypto_messages_proto_goTypes,
		DependencyIndexes: file_financial_coordinator_crypto_messages_proto_depIdxs,
		MessageInfos:      file_financial_coordinator_crypto_messages_proto_msgTypes,
	}.Build()
	File_financial_coordinator_crypto_messages_proto = out.File
	file_financial_coordinator_crypto_messages_proto_rawDesc = nil
	file_financial_coordinator_crypto_messages_proto_goTypes = nil
	file_financial_coordinator_crypto_messages_proto_depIdxs = nil
}
