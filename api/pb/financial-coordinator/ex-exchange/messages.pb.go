// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: financial-coordinator/ex-exchange/messages.proto

package exExchange

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	_ "rabex/api/pb/commons"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is an external exchange order.
// This order keep track of rabex 3rd party (external) exchange orders
type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId             string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Base                string                 `protobuf:"bytes,3,opt,name=base,proto3" json:"base,omitempty"`
	Quote               string                 `protobuf:"bytes,4,opt,name=quote,proto3" json:"quote,omitempty"`
	BaseQuantity        string                 `protobuf:"bytes,5,opt,name=base_quantity,json=baseQuantity,proto3" json:"base_quantity,omitempty"`
	QuoteQuantity       string                 `protobuf:"bytes,6,opt,name=quote_quantity,json=quoteQuantity,proto3" json:"quote_quantity,omitempty"`
	ExecutedQuantity    string                 `protobuf:"bytes,7,opt,name=executed_quantity,json=executedQuantity,proto3" json:"executed_quantity,omitempty"`
	Price               string                 `protobuf:"bytes,8,opt,name=price,proto3" json:"price,omitempty"`
	Status              ExchangeStatus         `protobuf:"varint,9,opt,name=status,proto3,enum=rabex.api.financialCoordinator.exExchange.ExchangeStatus" json:"status,omitempty"`
	Type                ExchangeType           `protobuf:"varint,10,opt,name=type,proto3,enum=rabex.api.financialCoordinator.exExchange.ExchangeType" json:"type,omitempty"`
	Side                ExchangeSide           `protobuf:"varint,11,opt,name=side,proto3,enum=rabex.api.financialCoordinator.exExchange.ExchangeSide" json:"side,omitempty"`
	BrokerId            string                 `protobuf:"bytes,12,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`
	BrokerWarehouseId   string                 `protobuf:"bytes,13,opt,name=broker_warehouse_id,json=brokerWarehouseId,proto3" json:"broker_warehouse_id,omitempty"`
	BrokerTreasuryId    string                 `protobuf:"bytes,14,opt,name=broker_treasury_id,json=brokerTreasuryId,proto3" json:"broker_treasury_id,omitempty"`
	Description         string                 `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"`
	MetaData            string                 `protobuf:"bytes,16,opt,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
	Attempts            int64                  `protobuf:"varint,17,opt,name=attempts,proto3" json:"attempts,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Fills               []*OrderFills          `protobuf:"bytes,19,rep,name=fills,proto3" json:"fills,omitempty"`
	CummulativeQuoteQty string                 `protobuf:"bytes,20,opt,name=cummulative_quote_qty,json=cummulativeQuoteQty,proto3" json:"cummulative_quote_qty,omitempty"`
	Initiator           string                 `protobuf:"bytes,21,opt,name=initiator,proto3" json:"initiator,omitempty"`
	InitiatorName       string                 `protobuf:"bytes,22,opt,name=initiator_name,json=initiatorName,proto3" json:"initiator_name,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Order) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Order) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *Order) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *Order) GetBaseQuantity() string {
	if x != nil {
		return x.BaseQuantity
	}
	return ""
}

func (x *Order) GetQuoteQuantity() string {
	if x != nil {
		return x.QuoteQuantity
	}
	return ""
}

func (x *Order) GetExecutedQuantity() string {
	if x != nil {
		return x.ExecutedQuantity
	}
	return ""
}

func (x *Order) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Order) GetStatus() ExchangeStatus {
	if x != nil {
		return x.Status
	}
	return ExchangeStatus_EXCHANGE_STATUS_UNSPECIFIED
}

func (x *Order) GetType() ExchangeType {
	if x != nil {
		return x.Type
	}
	return ExchangeType_EXCHANGE_TYPE_UNSPECIFIED
}

func (x *Order) GetSide() ExchangeSide {
	if x != nil {
		return x.Side
	}
	return ExchangeSide_EXCHANGE_SIDE_UNSPECIFIED
}

func (x *Order) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *Order) GetBrokerWarehouseId() string {
	if x != nil {
		return x.BrokerWarehouseId
	}
	return ""
}

func (x *Order) GetBrokerTreasuryId() string {
	if x != nil {
		return x.BrokerTreasuryId
	}
	return ""
}

func (x *Order) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Order) GetMetaData() string {
	if x != nil {
		return x.MetaData
	}
	return ""
}

func (x *Order) GetAttempts() int64 {
	if x != nil {
		return x.Attempts
	}
	return 0
}

func (x *Order) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Order) GetFills() []*OrderFills {
	if x != nil {
		return x.Fills
	}
	return nil
}

func (x *Order) GetCummulativeQuoteQty() string {
	if x != nil {
		return x.CummulativeQuoteQty
	}
	return ""
}

func (x *Order) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

func (x *Order) GetInitiatorName() string {
	if x != nil {
		return x.InitiatorName
	}
	return ""
}

// This shows how an external order fullfilled.
type OrderFills struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderFillsId       int64                  `protobuf:"varint,1,opt,name=order_fills_id,json=orderFillsId,proto3" json:"order_fills_id,omitempty"`
	OrderId            string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Quantity           string                 `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Price              string                 `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	CommissionAsset    string                 `protobuf:"bytes,6,opt,name=commission_asset,json=commissionAsset,proto3" json:"commission_asset,omitempty"`
	CommissionQuantity string                 `protobuf:"bytes,7,opt,name=commission_quantity,json=commissionQuantity,proto3" json:"commission_quantity,omitempty"`
	CommissionPrice    string                 `protobuf:"bytes,8,opt,name=commission_price,json=commissionPrice,proto3" json:"commission_price,omitempty"`
}

func (x *OrderFills) Reset() {
	*x = OrderFills{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFills) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFills) ProtoMessage() {}

func (x *OrderFills) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFills.ProtoReflect.Descriptor instead.
func (*OrderFills) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{1}
}

func (x *OrderFills) GetOrderFillsId() int64 {
	if x != nil {
		return x.OrderFillsId
	}
	return 0
}

func (x *OrderFills) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderFills) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *OrderFills) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OrderFills) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *OrderFills) GetCommissionAsset() string {
	if x != nil {
		return x.CommissionAsset
	}
	return ""
}

func (x *OrderFills) GetCommissionQuantity() string {
	if x != nil {
		return x.CommissionQuantity
	}
	return ""
}

func (x *OrderFills) GetCommissionPrice() string {
	if x != nil {
		return x.CommissionPrice
	}
	return ""
}

// This is used when admin wants to declare fills
type OrderFillsDeclared struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity           string `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price              string `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	CommissionAsset    string `protobuf:"bytes,6,opt,name=commission_asset,json=commissionAsset,proto3" json:"commission_asset,omitempty"`
	CommissionQuantity string `protobuf:"bytes,7,opt,name=commission_quantity,json=commissionQuantity,proto3" json:"commission_quantity,omitempty"`
}

func (x *OrderFillsDeclared) Reset() {
	*x = OrderFillsDeclared{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFillsDeclared) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFillsDeclared) ProtoMessage() {}

func (x *OrderFillsDeclared) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFillsDeclared.ProtoReflect.Descriptor instead.
func (*OrderFillsDeclared) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{2}
}

func (x *OrderFillsDeclared) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *OrderFillsDeclared) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *OrderFillsDeclared) GetCommissionAsset() string {
	if x != nil {
		return x.CommissionAsset
	}
	return ""
}

func (x *OrderFillsDeclared) GetCommissionQuantity() string {
	if x != nil {
		return x.CommissionQuantity
	}
	return ""
}

type FilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId              string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	BrokerWarehouseId    string                 `protobuf:"bytes,2,opt,name=broker_warehouse_id,json=brokerWarehouseId,proto3" json:"broker_warehouse_id,omitempty"`
	BrokerTreasuryId     string                 `protobuf:"bytes,3,opt,name=broker_treasury_id,json=brokerTreasuryId,proto3" json:"broker_treasury_id,omitempty"`
	Base                 string                 `protobuf:"bytes,4,opt,name=base,proto3" json:"base,omitempty"`
	Quote                string                 `protobuf:"bytes,5,opt,name=quote,proto3" json:"quote,omitempty"`
	BaseQuantityFloor    string                 `protobuf:"bytes,6,opt,name=base_quantity_floor,json=baseQuantityFloor,proto3" json:"base_quantity_floor,omitempty"`
	BaseQuantityCeil     string                 `protobuf:"bytes,7,opt,name=base_quantity_ceil,json=baseQuantityCeil,proto3" json:"base_quantity_ceil,omitempty"`
	QuoteQuantityFloor   string                 `protobuf:"bytes,8,opt,name=quote_quantity_floor,json=quoteQuantityFloor,proto3" json:"quote_quantity_floor,omitempty"`
	QuoteQuantityCeil    string                 `protobuf:"bytes,9,opt,name=quote_quantity_ceil,json=quoteQuantityCeil,proto3" json:"quote_quantity_ceil,omitempty"`
	CreatedTimeStart     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_time_start,json=createdTimeStart,proto3" json:"created_time_start,omitempty"`
	CreatedTimeEnd       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_time_end,json=createdTimeEnd,proto3" json:"created_time_end,omitempty"`
	LastUpdatedTimeStart *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=last_updated_time_start,json=lastUpdatedTimeStart,proto3" json:"last_updated_time_start,omitempty"`
	LastUpdatedTimeEnd   *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=last_updated_time_end,json=lastUpdatedTimeEnd,proto3" json:"last_updated_time_end,omitempty"`
	Status               ExchangeStatus         `protobuf:"varint,14,opt,name=status,proto3,enum=rabex.api.financialCoordinator.exExchange.ExchangeStatus" json:"status,omitempty"`
	Type                 ExchangeType           `protobuf:"varint,15,opt,name=type,proto3,enum=rabex.api.financialCoordinator.exExchange.ExchangeType" json:"type,omitempty"`
	Side                 ExchangeSide           `protobuf:"varint,16,opt,name=side,proto3,enum=rabex.api.financialCoordinator.exExchange.ExchangeSide" json:"side,omitempty"`
	Page                 uint32                 `protobuf:"varint,17,opt,name=page,proto3" json:"page,omitempty"`                            // for pagination - determines what page
	PageLimit            uint32                 `protobuf:"varint,18,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"` // for pagination - determines number of records in each page
	IsCsvRequired        bool                   `protobuf:"varint,19,opt,name=is_csv_required,json=isCsvRequired,proto3" json:"is_csv_required,omitempty"`
}

func (x *FilterRequest) Reset() {
	*x = FilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterRequest) ProtoMessage() {}

func (x *FilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterRequest.ProtoReflect.Descriptor instead.
func (*FilterRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{3}
}

func (x *FilterRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *FilterRequest) GetBrokerWarehouseId() string {
	if x != nil {
		return x.BrokerWarehouseId
	}
	return ""
}

func (x *FilterRequest) GetBrokerTreasuryId() string {
	if x != nil {
		return x.BrokerTreasuryId
	}
	return ""
}

func (x *FilterRequest) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *FilterRequest) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *FilterRequest) GetBaseQuantityFloor() string {
	if x != nil {
		return x.BaseQuantityFloor
	}
	return ""
}

func (x *FilterRequest) GetBaseQuantityCeil() string {
	if x != nil {
		return x.BaseQuantityCeil
	}
	return ""
}

func (x *FilterRequest) GetQuoteQuantityFloor() string {
	if x != nil {
		return x.QuoteQuantityFloor
	}
	return ""
}

func (x *FilterRequest) GetQuoteQuantityCeil() string {
	if x != nil {
		return x.QuoteQuantityCeil
	}
	return ""
}

func (x *FilterRequest) GetCreatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeStart
	}
	return nil
}

func (x *FilterRequest) GetCreatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeEnd
	}
	return nil
}

func (x *FilterRequest) GetLastUpdatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedTimeStart
	}
	return nil
}

func (x *FilterRequest) GetLastUpdatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedTimeEnd
	}
	return nil
}

func (x *FilterRequest) GetStatus() ExchangeStatus {
	if x != nil {
		return x.Status
	}
	return ExchangeStatus_EXCHANGE_STATUS_UNSPECIFIED
}

func (x *FilterRequest) GetType() ExchangeType {
	if x != nil {
		return x.Type
	}
	return ExchangeType_EXCHANGE_TYPE_UNSPECIFIED
}

func (x *FilterRequest) GetSide() ExchangeSide {
	if x != nil {
		return x.Side
	}
	return ExchangeSide_EXCHANGE_SIDE_UNSPECIFIED
}

func (x *FilterRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FilterRequest) GetPageLimit() uint32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

func (x *FilterRequest) GetIsCsvRequired() bool {
	if x != nil {
		return x.IsCsvRequired
	}
	return false
}

type FilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string status = 1;
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// repeated string error = 3;
	Data *FilterResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Csv  string               `protobuf:"bytes,5,opt,name=csv,proto3" json:"csv,omitempty"`
}

func (x *FilterResponse) Reset() {
	*x = FilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterResponse) ProtoMessage() {}

func (x *FilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterResponse.ProtoReflect.Descriptor instead.
func (*FilterResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{4}
}

func (x *FilterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FilterResponse) GetData() *FilterResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FilterResponse) GetCsv() string {
	if x != nil {
		return x.Csv
	}
	return ""
}

type RetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId []string `protobuf:"bytes,1,rep,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *RetryRequest) Reset() {
	*x = RetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryRequest) ProtoMessage() {}

func (x *RetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryRequest.ProtoReflect.Descriptor instead.
func (*RetryRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{5}
}

func (x *RetryRequest) GetOrderId() []string {
	if x != nil {
		return x.OrderId
	}
	return nil
}

type RetryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   []string `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`
	Status  string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RetryResponse) Reset() {
	*x = RetryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryResponse) ProtoMessage() {}

func (x *RetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryResponse.ProtoReflect.Descriptor instead.
func (*RetryResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{6}
}

func (x *RetryResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RetryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RetryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RetryResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type CancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId []string `protobuf:"bytes,1,rep,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *CancelRequest) Reset() {
	*x = CancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelRequest) ProtoMessage() {}

func (x *CancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelRequest.ProtoReflect.Descriptor instead.
func (*CancelRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{7}
}

func (x *CancelRequest) GetOrderId() []string {
	if x != nil {
		return x.OrderId
	}
	return nil
}

type CancelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   []string `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`
	Status  string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CancelResponse) Reset() {
	*x = CancelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelResponse) ProtoMessage() {}

func (x *CancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelResponse.ProtoReflect.Descriptor instead.
func (*CancelResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{8}
}

func (x *CancelResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CancelResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CancelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CancelResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type FilledDeclareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId             string                `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Description         string                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ExecutedQty         string                `protobuf:"bytes,3,opt,name=executed_qty,json=executedQty,proto3" json:"executed_qty,omitempty"`
	CummulativeQuoteQty string                `protobuf:"bytes,4,opt,name=cummulative_quote_qty,json=cummulativeQuoteQty,proto3" json:"cummulative_quote_qty,omitempty"`
	Fills               []*OrderFillsDeclared `protobuf:"bytes,5,rep,name=fills,proto3" json:"fills,omitempty"`
}

func (x *FilledDeclareRequest) Reset() {
	*x = FilledDeclareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilledDeclareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilledDeclareRequest) ProtoMessage() {}

func (x *FilledDeclareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilledDeclareRequest.ProtoReflect.Descriptor instead.
func (*FilledDeclareRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{9}
}

func (x *FilledDeclareRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *FilledDeclareRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FilledDeclareRequest) GetExecutedQty() string {
	if x != nil {
		return x.ExecutedQty
	}
	return ""
}

func (x *FilledDeclareRequest) GetCummulativeQuoteQty() string {
	if x != nil {
		return x.CummulativeQuoteQty
	}
	return ""
}

func (x *FilledDeclareRequest) GetFills() []*OrderFillsDeclared {
	if x != nil {
		return x.Fills
	}
	return nil
}

type FilledDeclareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   []string `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`
	Status  string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FilledDeclareResponse) Reset() {
	*x = FilledDeclareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilledDeclareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilledDeclareResponse) ProtoMessage() {}

func (x *FilledDeclareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilledDeclareResponse.ProtoReflect.Descriptor instead.
func (*FilledDeclareResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{10}
}

func (x *FilledDeclareResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *FilledDeclareResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FilledDeclareResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FilledDeclareResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Commenter     string                 `protobuf:"bytes,2,opt,name=commenter,proto3" json:"commenter,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	TransactionId string                 `protobuf:"bytes,6,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	CommenterName string                 `protobuf:"bytes,7,opt,name=commenter_name,json=commenterName,proto3" json:"commenter_name,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{11}
}

func (x *Comment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comment) GetCommenter() string {
	if x != nil {
		return x.Commenter
	}
	return ""
}

func (x *Comment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Comment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Comment) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Comment) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *Comment) GetCommenterName() string {
	if x != nil {
		return x.CommenterName
	}
	return ""
}

type CommentCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Description   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Title         string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *CommentCreateRequest) Reset() {
	*x = CommentCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentCreateRequest) ProtoMessage() {}

func (x *CommentCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentCreateRequest.ProtoReflect.Descriptor instead.
func (*CommentCreateRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{12}
}

func (x *CommentCreateRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *CommentCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CommentCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type CommentCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string status = 1;
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// repeated string error = 3;
	Data *Comment `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CommentCreateResponse) Reset() {
	*x = CommentCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentCreateResponse) ProtoMessage() {}

func (x *CommentCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentCreateResponse.ProtoReflect.Descriptor instead.
func (*CommentCreateResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{13}
}

func (x *CommentCreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommentCreateResponse) GetData() *Comment {
	if x != nil {
		return x.Data
	}
	return nil
}

type CommentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *CommentListRequest) Reset() {
	*x = CommentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListRequest) ProtoMessage() {}

func (x *CommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListRequest.ProtoReflect.Descriptor instead.
func (*CommentListRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{14}
}

func (x *CommentListRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type CommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string status=1;
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// repeated string error=3;
	Data *CommentListResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CommentListResponse) Reset() {
	*x = CommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListResponse) ProtoMessage() {}

func (x *CommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListResponse.ProtoReflect.Descriptor instead.
func (*CommentListResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{15}
}

func (x *CommentListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommentListResponse) GetData() *CommentListResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type MarketBuyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base            string `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Quote           string `protobuf:"bytes,2,opt,name=quote,proto3" json:"quote,omitempty"`
	QuoteQty        string `protobuf:"bytes,3,opt,name=quote_qty,json=quoteQty,proto3" json:"quote_qty,omitempty"`
	Broker          string `protobuf:"bytes,4,opt,name=broker,proto3" json:"broker,omitempty"`
	BrokerWarehouse string `protobuf:"bytes,5,opt,name=broker_warehouse,json=brokerWarehouse,proto3" json:"broker_warehouse,omitempty"`
	BrokerTreasury  string `protobuf:"bytes,6,opt,name=broker_treasury,json=brokerTreasury,proto3" json:"broker_treasury,omitempty"`
	BrokerChannel   string `protobuf:"bytes,7,opt,name=broker_channel,json=brokerChannel,proto3" json:"broker_channel,omitempty"`
}

func (x *MarketBuyRequest) Reset() {
	*x = MarketBuyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketBuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketBuyRequest) ProtoMessage() {}

func (x *MarketBuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketBuyRequest.ProtoReflect.Descriptor instead.
func (*MarketBuyRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{16}
}

func (x *MarketBuyRequest) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *MarketBuyRequest) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *MarketBuyRequest) GetQuoteQty() string {
	if x != nil {
		return x.QuoteQty
	}
	return ""
}

func (x *MarketBuyRequest) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *MarketBuyRequest) GetBrokerWarehouse() string {
	if x != nil {
		return x.BrokerWarehouse
	}
	return ""
}

func (x *MarketBuyRequest) GetBrokerTreasury() string {
	if x != nil {
		return x.BrokerTreasury
	}
	return ""
}

func (x *MarketBuyRequest) GetBrokerChannel() string {
	if x != nil {
		return x.BrokerChannel
	}
	return ""
}

type MarketBuyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Error   []string `protobuf:"bytes,3,rep,name=error,proto3" json:"error,omitempty"`
	Data    string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MarketBuyResponse) Reset() {
	*x = MarketBuyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketBuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketBuyResponse) ProtoMessage() {}

func (x *MarketBuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketBuyResponse.ProtoReflect.Descriptor instead.
func (*MarketBuyResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{17}
}

func (x *MarketBuyResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MarketBuyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MarketBuyResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *MarketBuyResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type MarketSellRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base            string `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Quote           string `protobuf:"bytes,2,opt,name=quote,proto3" json:"quote,omitempty"`
	BaseQty         string `protobuf:"bytes,3,opt,name=base_qty,json=baseQty,proto3" json:"base_qty,omitempty"`
	Broker          string `protobuf:"bytes,4,opt,name=broker,proto3" json:"broker,omitempty"`
	BrokerWarehouse string `protobuf:"bytes,5,opt,name=broker_warehouse,json=brokerWarehouse,proto3" json:"broker_warehouse,omitempty"`
	BrokerTreasury  string `protobuf:"bytes,6,opt,name=broker_treasury,json=brokerTreasury,proto3" json:"broker_treasury,omitempty"`
	BrokerChannel   string `protobuf:"bytes,7,opt,name=broker_channel,json=brokerChannel,proto3" json:"broker_channel,omitempty"`
}

func (x *MarketSellRequest) Reset() {
	*x = MarketSellRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketSellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketSellRequest) ProtoMessage() {}

func (x *MarketSellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketSellRequest.ProtoReflect.Descriptor instead.
func (*MarketSellRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{18}
}

func (x *MarketSellRequest) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *MarketSellRequest) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *MarketSellRequest) GetBaseQty() string {
	if x != nil {
		return x.BaseQty
	}
	return ""
}

func (x *MarketSellRequest) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *MarketSellRequest) GetBrokerWarehouse() string {
	if x != nil {
		return x.BrokerWarehouse
	}
	return ""
}

func (x *MarketSellRequest) GetBrokerTreasury() string {
	if x != nil {
		return x.BrokerTreasury
	}
	return ""
}

func (x *MarketSellRequest) GetBrokerChannel() string {
	if x != nil {
		return x.BrokerChannel
	}
	return ""
}

type MarketSellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Error   []string `protobuf:"bytes,3,rep,name=error,proto3" json:"error,omitempty"`
	Data    string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MarketSellResponse) Reset() {
	*x = MarketSellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketSellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketSellResponse) ProtoMessage() {}

func (x *MarketSellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketSellResponse.ProtoReflect.Descriptor instead.
func (*MarketSellResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{19}
}

func (x *MarketSellResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MarketSellResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MarketSellResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *MarketSellResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type FilterResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*Order `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *FilterResponse_Data) Reset() {
	*x = FilterResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterResponse_Data) ProtoMessage() {}

func (x *FilterResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterResponse_Data.ProtoReflect.Descriptor instead.
func (*FilterResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{4, 0}
}

func (x *FilterResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FilterResponse_Data) GetRows() []*Order {
	if x != nil {
		return x.Rows
	}
	return nil
}

type CommentListResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*Comment `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *CommentListResponse_Data) Reset() {
	*x = CommentListResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListResponse_Data) ProtoMessage() {}

func (x *CommentListResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_ex_exchange_messages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListResponse_Data.ProtoReflect.Descriptor instead.
func (*CommentListResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CommentListResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CommentListResponse_Data) GetRows() []*Comment {
	if x != nil {
		return x.Rows
	}
	return nil
}

var File_financial_coordinator_ex_exchange_messages_proto protoreflect.FileDescriptor

var file_financial_coordinator_ex_exchange_messages_proto_rawDesc = []byte{
	0x0a, 0x30, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x65, 0x78, 0x2d, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x29, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x65, 0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x13, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x65, 0x78, 0x2d, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xda, 0x07, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x72, 0x61,
	0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4b,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x72,
	0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x04, 0x73,
	0x69, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x72, 0x61, 0x62, 0x65,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69,
	0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f,
	0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4b, 0x0a, 0x05, 0x66, 0x69, 0x6c,
	0x6c, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x73, 0x52,
	0x05, 0x66, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x75, 0x6d, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x71, 0x74, 0x79, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x75, 0x6d, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x51, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xc1, 0x02, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x24,
	0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c,
	0x6c, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c,
	0x6c, 0x73, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xec, 0x07, 0x0a, 0x0d, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f,
	0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x73, 0x65,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x12, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x65, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61, 0x73, 0x65, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x65, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x2e, 0x0a,
	0x13, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x65, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x65, 0x69, 0x6c, 0x12, 0x48, 0x0a,
	0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x51, 0x0a,
	0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x4d, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12,
	0x51, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x39, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x65, 0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x4b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x37, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x65, 0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x4b, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e,
	0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x65,
	0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x63, 0x73, 0x76, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x43, 0x73, 0x76, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x76, 0x1a, 0x62, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x29,
	0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x0d, 0x52, 0x65, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x6c, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xff, 0x01, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x44, 0x65, 0x63, 0x6c, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x64, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x51, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x75, 0x6d,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x71,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x75, 0x6d, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x51, 0x74, 0x79, 0x12, 0x53, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x72,
	0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69,
	0x6c, 0x6c, 0x73, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x64, 0x52, 0x05, 0x66, 0x69, 0x6c,
	0x6c, 0x73, 0x22, 0x73, 0x0a, 0x15, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x44, 0x65, 0x63, 0x6c,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf3, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x75, 0x0a,
	0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0x79, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x3b, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xee, 0x01, 0x0a,
	0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x57,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x72,
	0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x64, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x46, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x65, 0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xec, 0x01,
	0x0a, 0x10, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x51, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x54, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x6f, 0x0a, 0x11,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xeb, 0x01,
	0x0a, 0x11, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x73, 0x65, 0x51, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x12, 0x29, 0x0a, 0x10, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x54, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x70, 0x0a, 0x12, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x46, 0x5a,
	0x44, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x65, 0x78, 0x2d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f,
	0x65, 0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x65, 0x78, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_financial_coordinator_ex_exchange_messages_proto_rawDescOnce sync.Once
	file_financial_coordinator_ex_exchange_messages_proto_rawDescData = file_financial_coordinator_ex_exchange_messages_proto_rawDesc
)

func file_financial_coordinator_ex_exchange_messages_proto_rawDescGZIP() []byte {
	file_financial_coordinator_ex_exchange_messages_proto_rawDescOnce.Do(func() {
		file_financial_coordinator_ex_exchange_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_financial_coordinator_ex_exchange_messages_proto_rawDescData)
	})
	return file_financial_coordinator_ex_exchange_messages_proto_rawDescData
}

var file_financial_coordinator_ex_exchange_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_financial_coordinator_ex_exchange_messages_proto_goTypes = []interface{}{
	(*Order)(nil),                    // 0: rabex.api.financialCoordinator.exExchange.Order
	(*OrderFills)(nil),               // 1: rabex.api.financialCoordinator.exExchange.OrderFills
	(*OrderFillsDeclared)(nil),       // 2: rabex.api.financialCoordinator.exExchange.OrderFillsDeclared
	(*FilterRequest)(nil),            // 3: rabex.api.financialCoordinator.exExchange.FilterRequest
	(*FilterResponse)(nil),           // 4: rabex.api.financialCoordinator.exExchange.FilterResponse
	(*RetryRequest)(nil),             // 5: rabex.api.financialCoordinator.exExchange.RetryRequest
	(*RetryResponse)(nil),            // 6: rabex.api.financialCoordinator.exExchange.RetryResponse
	(*CancelRequest)(nil),            // 7: rabex.api.financialCoordinator.exExchange.CancelRequest
	(*CancelResponse)(nil),           // 8: rabex.api.financialCoordinator.exExchange.CancelResponse
	(*FilledDeclareRequest)(nil),     // 9: rabex.api.financialCoordinator.exExchange.FilledDeclareRequest
	(*FilledDeclareResponse)(nil),    // 10: rabex.api.financialCoordinator.exExchange.FilledDeclareResponse
	(*Comment)(nil),                  // 11: rabex.api.financialCoordinator.exExchange.Comment
	(*CommentCreateRequest)(nil),     // 12: rabex.api.financialCoordinator.exExchange.CommentCreateRequest
	(*CommentCreateResponse)(nil),    // 13: rabex.api.financialCoordinator.exExchange.CommentCreateResponse
	(*CommentListRequest)(nil),       // 14: rabex.api.financialCoordinator.exExchange.CommentListRequest
	(*CommentListResponse)(nil),      // 15: rabex.api.financialCoordinator.exExchange.CommentListResponse
	(*MarketBuyRequest)(nil),         // 16: rabex.api.financialCoordinator.exExchange.MarketBuyRequest
	(*MarketBuyResponse)(nil),        // 17: rabex.api.financialCoordinator.exExchange.MarketBuyResponse
	(*MarketSellRequest)(nil),        // 18: rabex.api.financialCoordinator.exExchange.MarketSellRequest
	(*MarketSellResponse)(nil),       // 19: rabex.api.financialCoordinator.exExchange.MarketSellResponse
	(*FilterResponse_Data)(nil),      // 20: rabex.api.financialCoordinator.exExchange.FilterResponse.Data
	(*CommentListResponse_Data)(nil), // 21: rabex.api.financialCoordinator.exExchange.CommentListResponse.Data
	(*timestamppb.Timestamp)(nil),    // 22: google.protobuf.Timestamp
	(ExchangeStatus)(0),              // 23: rabex.api.financialCoordinator.exExchange.ExchangeStatus
	(ExchangeType)(0),                // 24: rabex.api.financialCoordinator.exExchange.ExchangeType
	(ExchangeSide)(0),                // 25: rabex.api.financialCoordinator.exExchange.ExchangeSide
}
var file_financial_coordinator_ex_exchange_messages_proto_depIdxs = []int32{
	22, // 0: rabex.api.financialCoordinator.exExchange.Order.created_at:type_name -> google.protobuf.Timestamp
	23, // 1: rabex.api.financialCoordinator.exExchange.Order.status:type_name -> rabex.api.financialCoordinator.exExchange.ExchangeStatus
	24, // 2: rabex.api.financialCoordinator.exExchange.Order.type:type_name -> rabex.api.financialCoordinator.exExchange.ExchangeType
	25, // 3: rabex.api.financialCoordinator.exExchange.Order.side:type_name -> rabex.api.financialCoordinator.exExchange.ExchangeSide
	22, // 4: rabex.api.financialCoordinator.exExchange.Order.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 5: rabex.api.financialCoordinator.exExchange.Order.fills:type_name -> rabex.api.financialCoordinator.exExchange.OrderFills
	22, // 6: rabex.api.financialCoordinator.exExchange.OrderFills.created_at:type_name -> google.protobuf.Timestamp
	22, // 7: rabex.api.financialCoordinator.exExchange.FilterRequest.created_time_start:type_name -> google.protobuf.Timestamp
	22, // 8: rabex.api.financialCoordinator.exExchange.FilterRequest.created_time_end:type_name -> google.protobuf.Timestamp
	22, // 9: rabex.api.financialCoordinator.exExchange.FilterRequest.last_updated_time_start:type_name -> google.protobuf.Timestamp
	22, // 10: rabex.api.financialCoordinator.exExchange.FilterRequest.last_updated_time_end:type_name -> google.protobuf.Timestamp
	23, // 11: rabex.api.financialCoordinator.exExchange.FilterRequest.status:type_name -> rabex.api.financialCoordinator.exExchange.ExchangeStatus
	24, // 12: rabex.api.financialCoordinator.exExchange.FilterRequest.type:type_name -> rabex.api.financialCoordinator.exExchange.ExchangeType
	25, // 13: rabex.api.financialCoordinator.exExchange.FilterRequest.side:type_name -> rabex.api.financialCoordinator.exExchange.ExchangeSide
	20, // 14: rabex.api.financialCoordinator.exExchange.FilterResponse.data:type_name -> rabex.api.financialCoordinator.exExchange.FilterResponse.Data
	2,  // 15: rabex.api.financialCoordinator.exExchange.FilledDeclareRequest.fills:type_name -> rabex.api.financialCoordinator.exExchange.OrderFillsDeclared
	22, // 16: rabex.api.financialCoordinator.exExchange.Comment.created:type_name -> google.protobuf.Timestamp
	11, // 17: rabex.api.financialCoordinator.exExchange.CommentCreateResponse.data:type_name -> rabex.api.financialCoordinator.exExchange.Comment
	21, // 18: rabex.api.financialCoordinator.exExchange.CommentListResponse.data:type_name -> rabex.api.financialCoordinator.exExchange.CommentListResponse.Data
	0,  // 19: rabex.api.financialCoordinator.exExchange.FilterResponse.Data.rows:type_name -> rabex.api.financialCoordinator.exExchange.Order
	11, // 20: rabex.api.financialCoordinator.exExchange.CommentListResponse.Data.rows:type_name -> rabex.api.financialCoordinator.exExchange.Comment
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_financial_coordinator_ex_exchange_messages_proto_init() }
func file_financial_coordinator_ex_exchange_messages_proto_init() {
	if File_financial_coordinator_ex_exchange_messages_proto != nil {
		return
	}
	file_financial_coordinator_ex_exchange_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFills); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFillsDeclared); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilledDeclareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilledDeclareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketBuyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketBuyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketSellRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketSellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_ex_exchange_messages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentListResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_financial_coordinator_ex_exchange_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_financial_coordinator_ex_exchange_messages_proto_goTypes,
		DependencyIndexes: file_financial_coordinator_ex_exchange_messages_proto_depIdxs,
		MessageInfos:      file_financial_coordinator_ex_exchange_messages_proto_msgTypes,
	}.Build()
	File_financial_coordinator_ex_exchange_messages_proto = out.File
	file_financial_coordinator_ex_exchange_messages_proto_rawDesc = nil
	file_financial_coordinator_ex_exchange_messages_proto_goTypes = nil
	file_financial_coordinator_ex_exchange_messages_proto_depIdxs = nil
}
