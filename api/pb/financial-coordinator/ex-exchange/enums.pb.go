// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: financial-coordinator/ex-exchange/enums.proto

package exExchange

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExchangeStatus int32

const (
	ExchangeStatus_EXCHANGE_STATUS_UNSPECIFIED     ExchangeStatus = 0
	ExchangeStatus_EXCHANGE_STATUS_NEW             ExchangeStatus = 1
	ExchangeStatus_EXCHANGE_STATUS_PENDING         ExchangeStatus = 2
	ExchangeStatus_EXCHANGE_STATUS_FAILED          ExchangeStatus = 3
	ExchangeStatus_EXCHANGE_STATUS_FILLED          ExchangeStatus = 4
	ExchangeStatus_EXCHANGE_STATUS_CANCELLED       ExchangeStatus = 5
	ExchangeStatus_EXCHANGE_STATUS_COMPLETED       ExchangeStatus = 6
	ExchangeStatus_EXCHANGE_STATUS_WAITINGFORADMIN ExchangeStatus = 7
)

// Enum value maps for ExchangeStatus.
var (
	ExchangeStatus_name = map[int32]string{
		0: "EXCHANGE_STATUS_UNSPECIFIED",
		1: "EXCHANGE_STATUS_NEW",
		2: "EXCHANGE_STATUS_PENDING",
		3: "EXCHANGE_STATUS_FAILED",
		4: "EXCHANGE_STATUS_FILLED",
		5: "EXCHANGE_STATUS_CANCELLED",
		6: "EXCHANGE_STATUS_COMPLETED",
		7: "EXCHANGE_STATUS_WAITINGFORADMIN",
	}
	ExchangeStatus_value = map[string]int32{
		"EXCHANGE_STATUS_UNSPECIFIED":     0,
		"EXCHANGE_STATUS_NEW":             1,
		"EXCHANGE_STATUS_PENDING":         2,
		"EXCHANGE_STATUS_FAILED":          3,
		"EXCHANGE_STATUS_FILLED":          4,
		"EXCHANGE_STATUS_CANCELLED":       5,
		"EXCHANGE_STATUS_COMPLETED":       6,
		"EXCHANGE_STATUS_WAITINGFORADMIN": 7,
	}
)

func (x ExchangeStatus) Enum() *ExchangeStatus {
	p := new(ExchangeStatus)
	*p = x
	return p
}

func (x ExchangeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExchangeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_ex_exchange_enums_proto_enumTypes[0].Descriptor()
}

func (ExchangeStatus) Type() protoreflect.EnumType {
	return &file_financial_coordinator_ex_exchange_enums_proto_enumTypes[0]
}

func (x ExchangeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExchangeStatus.Descriptor instead.
func (ExchangeStatus) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_enums_proto_rawDescGZIP(), []int{0}
}

type ExchangeSide int32

const (
	ExchangeSide_EXCHANGE_SIDE_UNSPECIFIED ExchangeSide = 0
	ExchangeSide_EXCHANGE_SIDE_BUY         ExchangeSide = 1
	ExchangeSide_EXCHANGE_SIDE_SELL        ExchangeSide = 2
)

// Enum value maps for ExchangeSide.
var (
	ExchangeSide_name = map[int32]string{
		0: "EXCHANGE_SIDE_UNSPECIFIED",
		1: "EXCHANGE_SIDE_BUY",
		2: "EXCHANGE_SIDE_SELL",
	}
	ExchangeSide_value = map[string]int32{
		"EXCHANGE_SIDE_UNSPECIFIED": 0,
		"EXCHANGE_SIDE_BUY":         1,
		"EXCHANGE_SIDE_SELL":        2,
	}
)

func (x ExchangeSide) Enum() *ExchangeSide {
	p := new(ExchangeSide)
	*p = x
	return p
}

func (x ExchangeSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExchangeSide) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_ex_exchange_enums_proto_enumTypes[1].Descriptor()
}

func (ExchangeSide) Type() protoreflect.EnumType {
	return &file_financial_coordinator_ex_exchange_enums_proto_enumTypes[1]
}

func (x ExchangeSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExchangeSide.Descriptor instead.
func (ExchangeSide) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_enums_proto_rawDescGZIP(), []int{1}
}

type ExchangeType int32

const (
	ExchangeType_EXCHANGE_TYPE_UNSPECIFIED ExchangeType = 0
	ExchangeType_EXCHANGE_TYPE_MARKET      ExchangeType = 1
	ExchangeType_EXCHANGE_TYPE_LIMIT       ExchangeType = 2
)

// Enum value maps for ExchangeType.
var (
	ExchangeType_name = map[int32]string{
		0: "EXCHANGE_TYPE_UNSPECIFIED",
		1: "EXCHANGE_TYPE_MARKET",
		2: "EXCHANGE_TYPE_LIMIT",
	}
	ExchangeType_value = map[string]int32{
		"EXCHANGE_TYPE_UNSPECIFIED": 0,
		"EXCHANGE_TYPE_MARKET":      1,
		"EXCHANGE_TYPE_LIMIT":       2,
	}
)

func (x ExchangeType) Enum() *ExchangeType {
	p := new(ExchangeType)
	*p = x
	return p
}

func (x ExchangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExchangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_ex_exchange_enums_proto_enumTypes[2].Descriptor()
}

func (ExchangeType) Type() protoreflect.EnumType {
	return &file_financial_coordinator_ex_exchange_enums_proto_enumTypes[2]
}

func (x ExchangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExchangeType.Descriptor instead.
func (ExchangeType) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_ex_exchange_enums_proto_rawDescGZIP(), []int{2}
}

var File_financial_coordinator_ex_exchange_enums_proto protoreflect.FileDescriptor

var file_financial_coordinator_ex_exchange_enums_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x65, 0x78, 0x2d, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x29, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x65, 0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2a, 0x82, 0x02, 0x0a, 0x0e, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a,
	0x1b, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17,
	0x0a, 0x13, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x58, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x1a, 0x0a, 0x16, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19,
	0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x45,
	0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x23, 0x0a, 0x1f, 0x45, 0x58,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x41,
	0x49, 0x54, 0x49, 0x4e, 0x47, 0x46, 0x4f, 0x52, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x07, 0x2a,
	0x5c, 0x0a, 0x0c, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x64, 0x65, 0x12,
	0x1d, 0x0a, 0x19, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x49, 0x44, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x5f,
	0x42, 0x55, 0x59, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x02, 0x2a, 0x60, 0x0a,
	0x0c, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x19, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14,
	0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41,
	0x52, 0x4b, 0x45, 0x54, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x02, 0x42,
	0x46, 0x5a, 0x44, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f,
	0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x65, 0x78, 0x2d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2f, 0x65, 0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x65, 0x78, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_financial_coordinator_ex_exchange_enums_proto_rawDescOnce sync.Once
	file_financial_coordinator_ex_exchange_enums_proto_rawDescData = file_financial_coordinator_ex_exchange_enums_proto_rawDesc
)

func file_financial_coordinator_ex_exchange_enums_proto_rawDescGZIP() []byte {
	file_financial_coordinator_ex_exchange_enums_proto_rawDescOnce.Do(func() {
		file_financial_coordinator_ex_exchange_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_financial_coordinator_ex_exchange_enums_proto_rawDescData)
	})
	return file_financial_coordinator_ex_exchange_enums_proto_rawDescData
}

var file_financial_coordinator_ex_exchange_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_financial_coordinator_ex_exchange_enums_proto_goTypes = []interface{}{
	(ExchangeStatus)(0), // 0: rabex.api.financialCoordinator.exExchange.ExchangeStatus
	(ExchangeSide)(0),   // 1: rabex.api.financialCoordinator.exExchange.ExchangeSide
	(ExchangeType)(0),   // 2: rabex.api.financialCoordinator.exExchange.ExchangeType
}
var file_financial_coordinator_ex_exchange_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_financial_coordinator_ex_exchange_enums_proto_init() }
func file_financial_coordinator_ex_exchange_enums_proto_init() {
	if File_financial_coordinator_ex_exchange_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_financial_coordinator_ex_exchange_enums_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_financial_coordinator_ex_exchange_enums_proto_goTypes,
		DependencyIndexes: file_financial_coordinator_ex_exchange_enums_proto_depIdxs,
		EnumInfos:         file_financial_coordinator_ex_exchange_enums_proto_enumTypes,
	}.Build()
	File_financial_coordinator_ex_exchange_enums_proto = out.File
	file_financial_coordinator_ex_exchange_enums_proto_rawDesc = nil
	file_financial_coordinator_ex_exchange_enums_proto_goTypes = nil
	file_financial_coordinator_ex_exchange_enums_proto_depIdxs = nil
}
