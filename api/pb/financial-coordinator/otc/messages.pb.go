// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: financial-coordinator/otc/messages.proto

package otc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Maker                   string                 `protobuf:"bytes,2,opt,name=maker,proto3" json:"maker,omitempty"`
	MakerWarehouse          string                 `protobuf:"bytes,3,opt,name=maker_warehouse,json=makerWarehouse,proto3" json:"maker_warehouse,omitempty"`
	Taker                   string                 `protobuf:"bytes,4,opt,name=taker,proto3" json:"taker,omitempty"`
	TakeWarehouse           string                 `protobuf:"bytes,5,opt,name=take_warehouse,json=takeWarehouse,proto3" json:"take_warehouse,omitempty"`
	MakerNameFa             string                 `protobuf:"bytes,6,opt,name=maker_name_fa,json=makerNameFa,proto3" json:"maker_name_fa,omitempty"`
	MakerNid                string                 `protobuf:"bytes,7,opt,name=maker_nid,json=makerNid,proto3" json:"maker_nid,omitempty"`
	MakerAsset              string                 `protobuf:"bytes,8,opt,name=maker_asset,json=makerAsset,proto3" json:"maker_asset,omitempty"`
	MakerAssetFa            string                 `protobuf:"bytes,9,opt,name=maker_asset_fa,json=makerAssetFa,proto3" json:"maker_asset_fa,omitempty"`
	ReferralNumber          string                 `protobuf:"bytes,10,opt,name=referral_number,json=referralNumber,proto3" json:"referral_number,omitempty"`
	ReferralAsset           string                 `protobuf:"bytes,11,opt,name=referral_asset,json=referralAsset,proto3" json:"referral_asset,omitempty"`
	ReferralPrice           string                 `protobuf:"bytes,12,opt,name=referral_price,json=referralPrice,proto3" json:"referral_price,omitempty"`
	ReferralPercentage      float32                `protobuf:"fixed32,13,opt,name=referral_percentage,json=referralPercentage,proto3" json:"referral_percentage,omitempty"`
	ReferrerSharePercentage int32                  `protobuf:"varint,14,opt,name=referrer_share_percentage,json=referrerSharePercentage,proto3" json:"referrer_share_percentage,omitempty"`
	MakerQty                string                 `protobuf:"bytes,15,opt,name=maker_qty,json=makerQty,proto3" json:"maker_qty,omitempty"`
	TakerAsset              string                 `protobuf:"bytes,16,opt,name=taker_asset,json=takerAsset,proto3" json:"taker_asset,omitempty"`
	TakerAssetFa            string                 `protobuf:"bytes,17,opt,name=taker_asset_fa,json=takerAssetFa,proto3" json:"taker_asset_fa,omitempty"`
	TakerQty                string                 `protobuf:"bytes,18,opt,name=taker_qty,json=takerQty,proto3" json:"taker_qty,omitempty"`
	Side                    Side                   `protobuf:"varint,19,opt,name=side,proto3,enum=rabex.api.financialCoordinator.otc.Side" json:"side,omitempty"`
	Base                    string                 `protobuf:"bytes,20,opt,name=base,proto3" json:"base,omitempty"`
	Quote                   string                 `protobuf:"bytes,21,opt,name=quote,proto3" json:"quote,omitempty"`
	Price                   string                 `protobuf:"bytes,22,opt,name=price,proto3" json:"price,omitempty"`
	PriceMultiplier         float32                `protobuf:"fixed32,23,opt,name=price_multiplier,json=priceMultiplier,proto3" json:"price_multiplier,omitempty"`
	BaseRefPrice            string                 `protobuf:"bytes,24,opt,name=base_ref_price,json=baseRefPrice,proto3" json:"base_ref_price,omitempty"`
	UsdtPrice               string                 `protobuf:"bytes,25,opt,name=usdt_price,json=usdtPrice,proto3" json:"usdt_price,omitempty"`
	Status                  Status                 `protobuf:"varint,27,opt,name=status,proto3,enum=rabex.api.financialCoordinator.otc.Status" json:"status,omitempty"`
	Description             string                 `protobuf:"bytes,28,opt,name=description,proto3" json:"description,omitempty"`
	Meta                    string                 `protobuf:"bytes,29,opt,name=meta,proto3" json:"meta,omitempty"`
	InvoiceNumber           string                 `protobuf:"bytes,30,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	DeviceIp                string                 `protobuf:"bytes,31,opt,name=device_ip,json=deviceIp,proto3" json:"device_ip,omitempty"`
	DeviceMeta              string                 `protobuf:"bytes,32,opt,name=device_meta,json=deviceMeta,proto3" json:"device_meta,omitempty"`
	Created                 *timestamppb.Timestamp `protobuf:"bytes,33,opt,name=created,proto3" json:"created,omitempty"`
	Updated                 *timestamppb.Timestamp `protobuf:"bytes,34,opt,name=updated,proto3" json:"updated,omitempty"`
	Filled                  *timestamppb.Timestamp `protobuf:"bytes,35,opt,name=filled,proto3" json:"filled,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order) GetMaker() string {
	if x != nil {
		return x.Maker
	}
	return ""
}

func (x *Order) GetMakerWarehouse() string {
	if x != nil {
		return x.MakerWarehouse
	}
	return ""
}

func (x *Order) GetTaker() string {
	if x != nil {
		return x.Taker
	}
	return ""
}

func (x *Order) GetTakeWarehouse() string {
	if x != nil {
		return x.TakeWarehouse
	}
	return ""
}

func (x *Order) GetMakerNameFa() string {
	if x != nil {
		return x.MakerNameFa
	}
	return ""
}

func (x *Order) GetMakerNid() string {
	if x != nil {
		return x.MakerNid
	}
	return ""
}

func (x *Order) GetMakerAsset() string {
	if x != nil {
		return x.MakerAsset
	}
	return ""
}

func (x *Order) GetMakerAssetFa() string {
	if x != nil {
		return x.MakerAssetFa
	}
	return ""
}

func (x *Order) GetReferralNumber() string {
	if x != nil {
		return x.ReferralNumber
	}
	return ""
}

func (x *Order) GetReferralAsset() string {
	if x != nil {
		return x.ReferralAsset
	}
	return ""
}

func (x *Order) GetReferralPrice() string {
	if x != nil {
		return x.ReferralPrice
	}
	return ""
}

func (x *Order) GetReferralPercentage() float32 {
	if x != nil {
		return x.ReferralPercentage
	}
	return 0
}

func (x *Order) GetReferrerSharePercentage() int32 {
	if x != nil {
		return x.ReferrerSharePercentage
	}
	return 0
}

func (x *Order) GetMakerQty() string {
	if x != nil {
		return x.MakerQty
	}
	return ""
}

func (x *Order) GetTakerAsset() string {
	if x != nil {
		return x.TakerAsset
	}
	return ""
}

func (x *Order) GetTakerAssetFa() string {
	if x != nil {
		return x.TakerAssetFa
	}
	return ""
}

func (x *Order) GetTakerQty() string {
	if x != nil {
		return x.TakerQty
	}
	return ""
}

func (x *Order) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_SIDE_UNSPECIFIED
}

func (x *Order) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *Order) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *Order) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Order) GetPriceMultiplier() float32 {
	if x != nil {
		return x.PriceMultiplier
	}
	return 0
}

func (x *Order) GetBaseRefPrice() string {
	if x != nil {
		return x.BaseRefPrice
	}
	return ""
}

func (x *Order) GetUsdtPrice() string {
	if x != nil {
		return x.UsdtPrice
	}
	return ""
}

func (x *Order) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *Order) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Order) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *Order) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *Order) GetDeviceIp() string {
	if x != nil {
		return x.DeviceIp
	}
	return ""
}

func (x *Order) GetDeviceMeta() string {
	if x != nil {
		return x.DeviceMeta
	}
	return ""
}

func (x *Order) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Order) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Order) GetFilled() *timestamppb.Timestamp {
	if x != nil {
		return x.Filled
	}
	return nil
}

type OrderHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Maker          string                 `protobuf:"bytes,2,opt,name=maker,proto3" json:"maker,omitempty"`
	MakerWarehouse string                 `protobuf:"bytes,3,opt,name=maker_warehouse,json=makerWarehouse,proto3" json:"maker_warehouse,omitempty"`
	MakerAsset     string                 `protobuf:"bytes,4,opt,name=maker_asset,json=makerAsset,proto3" json:"maker_asset,omitempty"`
	MakerAssetFa   string                 `protobuf:"bytes,5,opt,name=maker_asset_fa,json=makerAssetFa,proto3" json:"maker_asset_fa,omitempty"`
	MakerQty       string                 `protobuf:"bytes,6,opt,name=maker_qty,json=makerQty,proto3" json:"maker_qty,omitempty"`
	TakerAsset     string                 `protobuf:"bytes,7,opt,name=taker_asset,json=takerAsset,proto3" json:"taker_asset,omitempty"`
	TakerAssetFa   string                 `protobuf:"bytes,8,opt,name=taker_asset_fa,json=takerAssetFa,proto3" json:"taker_asset_fa,omitempty"`
	TakerQty       string                 `protobuf:"bytes,9,opt,name=taker_qty,json=takerQty,proto3" json:"taker_qty,omitempty"`
	Side           Side                   `protobuf:"varint,10,opt,name=side,proto3,enum=rabex.api.financialCoordinator.otc.Side" json:"side,omitempty"`
	Base           string                 `protobuf:"bytes,11,opt,name=base,proto3" json:"base,omitempty"`
	Quote          string                 `protobuf:"bytes,12,opt,name=quote,proto3" json:"quote,omitempty"`
	Price          string                 `protobuf:"bytes,13,opt,name=price,proto3" json:"price,omitempty"`
	Status         Status                 `protobuf:"varint,14,opt,name=status,proto3,enum=rabex.api.financialCoordinator.otc.Status" json:"status,omitempty"`
	InvoiceNumber  string                 `protobuf:"bytes,15,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	Created        *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created,proto3" json:"created,omitempty"`
	Filled         *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=filled,proto3" json:"filled,omitempty"`
}

func (x *OrderHistory) Reset() {
	*x = OrderHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderHistory) ProtoMessage() {}

func (x *OrderHistory) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderHistory.ProtoReflect.Descriptor instead.
func (*OrderHistory) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{1}
}

func (x *OrderHistory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderHistory) GetMaker() string {
	if x != nil {
		return x.Maker
	}
	return ""
}

func (x *OrderHistory) GetMakerWarehouse() string {
	if x != nil {
		return x.MakerWarehouse
	}
	return ""
}

func (x *OrderHistory) GetMakerAsset() string {
	if x != nil {
		return x.MakerAsset
	}
	return ""
}

func (x *OrderHistory) GetMakerAssetFa() string {
	if x != nil {
		return x.MakerAssetFa
	}
	return ""
}

func (x *OrderHistory) GetMakerQty() string {
	if x != nil {
		return x.MakerQty
	}
	return ""
}

func (x *OrderHistory) GetTakerAsset() string {
	if x != nil {
		return x.TakerAsset
	}
	return ""
}

func (x *OrderHistory) GetTakerAssetFa() string {
	if x != nil {
		return x.TakerAssetFa
	}
	return ""
}

func (x *OrderHistory) GetTakerQty() string {
	if x != nil {
		return x.TakerQty
	}
	return ""
}

func (x *OrderHistory) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_SIDE_UNSPECIFIED
}

func (x *OrderHistory) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *OrderHistory) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *OrderHistory) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *OrderHistory) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *OrderHistory) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *OrderHistory) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *OrderHistory) GetFilled() *timestamppb.Timestamp {
	if x != nil {
		return x.Filled
	}
	return nil
}

type OrderInquiryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MakerAsset string `protobuf:"bytes,1,opt,name=maker_asset,json=makerAsset,proto3" json:"maker_asset,omitempty"` // midaham (user)
	MakerQty   string `protobuf:"bytes,2,opt,name=maker_qty,json=makerQty,proto3" json:"maker_qty,omitempty"`
	Base       string `protobuf:"bytes,3,opt,name=base,proto3" json:"base,omitempty"`
	Quote      string `protobuf:"bytes,4,opt,name=quote,proto3" json:"quote,omitempty"`
}

func (x *OrderInquiryRequest) Reset() {
	*x = OrderInquiryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInquiryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInquiryRequest) ProtoMessage() {}

func (x *OrderInquiryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInquiryRequest.ProtoReflect.Descriptor instead.
func (*OrderInquiryRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{2}
}

func (x *OrderInquiryRequest) GetMakerAsset() string {
	if x != nil {
		return x.MakerAsset
	}
	return ""
}

func (x *OrderInquiryRequest) GetMakerQty() string {
	if x != nil {
		return x.MakerQty
	}
	return ""
}

func (x *OrderInquiryRequest) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *OrderInquiryRequest) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

type OrderInquiryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   []string                   `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`
	Status  string                     `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string                     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *OrderInquiryResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OrderInquiryResponse) Reset() {
	*x = OrderInquiryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInquiryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInquiryResponse) ProtoMessage() {}

func (x *OrderInquiryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInquiryResponse.ProtoReflect.Descriptor instead.
func (*OrderInquiryResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{3}
}

func (x *OrderInquiryResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *OrderInquiryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderInquiryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OrderInquiryResponse) GetData() *OrderInquiryResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderConfirmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //
}

func (x *OrderConfirmRequest) Reset() {
	*x = OrderConfirmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderConfirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderConfirmRequest) ProtoMessage() {}

func (x *OrderConfirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderConfirmRequest.ProtoReflect.Descriptor instead.
func (*OrderConfirmRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{4}
}

func (x *OrderConfirmRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OrderConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   []string                   `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`
	Status  string                     `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string                     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *OrderConfirmResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OrderConfirmResponse) Reset() {
	*x = OrderConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderConfirmResponse) ProtoMessage() {}

func (x *OrderConfirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderConfirmResponse.ProtoReflect.Descriptor instead.
func (*OrderConfirmResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{5}
}

func (x *OrderConfirmResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *OrderConfirmResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderConfirmResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OrderConfirmResponse) GetData() *OrderConfirmResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type OtcFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MakerId              string                 `protobuf:"bytes,2,opt,name=maker_id,json=makerId,proto3" json:"maker_id,omitempty"`
	MakerWarehouseId     string                 `protobuf:"bytes,3,opt,name=maker_warehouse_id,json=makerWarehouseId,proto3" json:"maker_warehouse_id,omitempty"`
	TakerId              string                 `protobuf:"bytes,4,opt,name=taker_id,json=takerId,proto3" json:"taker_id,omitempty"`
	TakerWarehouseId     string                 `protobuf:"bytes,5,opt,name=taker_warehouse_id,json=takerWarehouseId,proto3" json:"taker_warehouse_id,omitempty"`
	InvoiceNumber        string                 `protobuf:"bytes,6,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	Base                 string                 `protobuf:"bytes,7,opt,name=base,proto3" json:"base,omitempty"`
	Quote                string                 `protobuf:"bytes,8,opt,name=quote,proto3" json:"quote,omitempty"`
	MakerQuantityFloor   string                 `protobuf:"bytes,9,opt,name=maker_quantity_floor,json=makerQuantityFloor,proto3" json:"maker_quantity_floor,omitempty"`
	MakerQuantityCeil    string                 `protobuf:"bytes,10,opt,name=maker_quantity_ceil,json=makerQuantityCeil,proto3" json:"maker_quantity_ceil,omitempty"`
	TakerQuantityFloor   string                 `protobuf:"bytes,11,opt,name=taker_quantity_floor,json=takerQuantityFloor,proto3" json:"taker_quantity_floor,omitempty"`
	TakerQuantityCeil    string                 `protobuf:"bytes,12,opt,name=taker_quantity_ceil,json=takerQuantityCeil,proto3" json:"taker_quantity_ceil,omitempty"`
	CreatedTimeStart     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_time_start,json=createdTimeStart,proto3" json:"created_time_start,omitempty"`
	CreatedTimeEnd       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_time_end,json=createdTimeEnd,proto3" json:"created_time_end,omitempty"`
	LastUpdatedTimeStart *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=last_updated_time_start,json=lastUpdatedTimeStart,proto3" json:"last_updated_time_start,omitempty"`
	LastUpdatedTimeEnd   *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=last_updated_time_end,json=lastUpdatedTimeEnd,proto3" json:"last_updated_time_end,omitempty"`
	FilledTimeStart      *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=filled_time_start,json=filledTimeStart,proto3" json:"filled_time_start,omitempty"`
	FilledTimeEnd        *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=filled_time_end,json=filledTimeEnd,proto3" json:"filled_time_end,omitempty"`
	Status               Status                 `protobuf:"varint,19,opt,name=status,proto3,enum=rabex.api.financialCoordinator.otc.Status" json:"status,omitempty"`
	Page                 uint32                 `protobuf:"varint,20,opt,name=page,proto3" json:"page,omitempty"`                            // for pagination - determines what `page
	PageLimit            uint32                 `protobuf:"varint,21,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"` // for pagination - determines number of records in each page
	IsCsvRequired        bool                   `protobuf:"varint,22,opt,name=is_csv_required,json=isCsvRequired,proto3" json:"is_csv_required,omitempty"`
	TakerAsset           string                 `protobuf:"bytes,23,opt,name=taker_asset,json=takerAsset,proto3" json:"taker_asset,omitempty"`
	MakerAsset           string                 `protobuf:"bytes,24,opt,name=maker_asset,json=makerAsset,proto3" json:"maker_asset,omitempty"`
	MakerNid             string                 `protobuf:"bytes,25,opt,name=maker_nid,json=makerNid,proto3" json:"maker_nid,omitempty"`
}

func (x *OtcFilterRequest) Reset() {
	*x = OtcFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtcFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtcFilterRequest) ProtoMessage() {}

func (x *OtcFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtcFilterRequest.ProtoReflect.Descriptor instead.
func (*OtcFilterRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{6}
}

func (x *OtcFilterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OtcFilterRequest) GetMakerId() string {
	if x != nil {
		return x.MakerId
	}
	return ""
}

func (x *OtcFilterRequest) GetMakerWarehouseId() string {
	if x != nil {
		return x.MakerWarehouseId
	}
	return ""
}

func (x *OtcFilterRequest) GetTakerId() string {
	if x != nil {
		return x.TakerId
	}
	return ""
}

func (x *OtcFilterRequest) GetTakerWarehouseId() string {
	if x != nil {
		return x.TakerWarehouseId
	}
	return ""
}

func (x *OtcFilterRequest) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *OtcFilterRequest) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *OtcFilterRequest) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *OtcFilterRequest) GetMakerQuantityFloor() string {
	if x != nil {
		return x.MakerQuantityFloor
	}
	return ""
}

func (x *OtcFilterRequest) GetMakerQuantityCeil() string {
	if x != nil {
		return x.MakerQuantityCeil
	}
	return ""
}

func (x *OtcFilterRequest) GetTakerQuantityFloor() string {
	if x != nil {
		return x.TakerQuantityFloor
	}
	return ""
}

func (x *OtcFilterRequest) GetTakerQuantityCeil() string {
	if x != nil {
		return x.TakerQuantityCeil
	}
	return ""
}

func (x *OtcFilterRequest) GetCreatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeStart
	}
	return nil
}

func (x *OtcFilterRequest) GetCreatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeEnd
	}
	return nil
}

func (x *OtcFilterRequest) GetLastUpdatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedTimeStart
	}
	return nil
}

func (x *OtcFilterRequest) GetLastUpdatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedTimeEnd
	}
	return nil
}

func (x *OtcFilterRequest) GetFilledTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.FilledTimeStart
	}
	return nil
}

func (x *OtcFilterRequest) GetFilledTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.FilledTimeEnd
	}
	return nil
}

func (x *OtcFilterRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *OtcFilterRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OtcFilterRequest) GetPageLimit() uint32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

func (x *OtcFilterRequest) GetIsCsvRequired() bool {
	if x != nil {
		return x.IsCsvRequired
	}
	return false
}

func (x *OtcFilterRequest) GetTakerAsset() string {
	if x != nil {
		return x.TakerAsset
	}
	return ""
}

func (x *OtcFilterRequest) GetMakerAsset() string {
	if x != nil {
		return x.MakerAsset
	}
	return ""
}

func (x *OtcFilterRequest) GetMakerNid() string {
	if x != nil {
		return x.MakerNid
	}
	return ""
}

type OtcFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   []string                `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`
	Status  string                  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *OtcFilterResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Csv     string                  `protobuf:"bytes,5,opt,name=csv,proto3" json:"csv,omitempty"`
}

func (x *OtcFilterResponse) Reset() {
	*x = OtcFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtcFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtcFilterResponse) ProtoMessage() {}

func (x *OtcFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtcFilterResponse.ProtoReflect.Descriptor instead.
func (*OtcFilterResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{7}
}

func (x *OtcFilterResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *OtcFilterResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OtcFilterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OtcFilterResponse) GetData() *OtcFilterResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OtcFilterResponse) GetCsv() string {
	if x != nil {
		return x.Csv
	}
	return ""
}

type FiatOtcHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Side             Side                   `protobuf:"varint,1,opt,name=side,proto3,enum=rabex.api.financialCoordinator.otc.Side" json:"side,omitempty"`
	CreatedTimeStart *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_time_start,json=createdTimeStart,proto3" json:"created_time_start,omitempty"`
	CreatedTimeEnd   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_time_end,json=createdTimeEnd,proto3" json:"created_time_end,omitempty"`
	FilledTimeStart  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=filled_time_start,json=filledTimeStart,proto3" json:"filled_time_start,omitempty"`
	FilledTimeEnd    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=filled_time_end,json=filledTimeEnd,proto3" json:"filled_time_end,omitempty"`
	Page             uint32                 `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`                            // for pagination - determines what `page
	PageLimit        uint32                 `protobuf:"varint,7,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"` // for pagination - determines number of records in each page
}

func (x *FiatOtcHistoryRequest) Reset() {
	*x = FiatOtcHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiatOtcHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiatOtcHistoryRequest) ProtoMessage() {}

func (x *FiatOtcHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiatOtcHistoryRequest.ProtoReflect.Descriptor instead.
func (*FiatOtcHistoryRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{8}
}

func (x *FiatOtcHistoryRequest) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_SIDE_UNSPECIFIED
}

func (x *FiatOtcHistoryRequest) GetCreatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeStart
	}
	return nil
}

func (x *FiatOtcHistoryRequest) GetCreatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeEnd
	}
	return nil
}

func (x *FiatOtcHistoryRequest) GetFilledTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.FilledTimeStart
	}
	return nil
}

func (x *FiatOtcHistoryRequest) GetFilledTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.FilledTimeEnd
	}
	return nil
}

func (x *FiatOtcHistoryRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FiatOtcHistoryRequest) GetPageLimit() uint32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

type FiatOtcHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   []string                     `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`
	Status  string                       `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string                       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *FiatOtcHistoryResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FiatOtcHistoryResponse) Reset() {
	*x = FiatOtcHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiatOtcHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiatOtcHistoryResponse) ProtoMessage() {}

func (x *FiatOtcHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiatOtcHistoryResponse.ProtoReflect.Descriptor instead.
func (*FiatOtcHistoryResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{9}
}

func (x *FiatOtcHistoryResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *FiatOtcHistoryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FiatOtcHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FiatOtcHistoryResponse) GetData() *FiatOtcHistoryResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ExchangeOtcHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Side             Side                   `protobuf:"varint,1,opt,name=side,proto3,enum=rabex.api.financialCoordinator.otc.Side" json:"side,omitempty"`
	CreatedTimeStart *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_time_start,json=createdTimeStart,proto3" json:"created_time_start,omitempty"`
	CreatedTimeEnd   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_time_end,json=createdTimeEnd,proto3" json:"created_time_end,omitempty"`
	FilledTimeStart  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=filled_time_start,json=filledTimeStart,proto3" json:"filled_time_start,omitempty"`
	FilledTimeEnd    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=filled_time_end,json=filledTimeEnd,proto3" json:"filled_time_end,omitempty"`
	Page             uint32                 `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`                            // for pagination - determines what `page
	PageLimit        uint32                 `protobuf:"varint,7,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"` // for pagination - determines number of records in each page
}

func (x *ExchangeOtcHistoryRequest) Reset() {
	*x = ExchangeOtcHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeOtcHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeOtcHistoryRequest) ProtoMessage() {}

func (x *ExchangeOtcHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeOtcHistoryRequest.ProtoReflect.Descriptor instead.
func (*ExchangeOtcHistoryRequest) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{10}
}

func (x *ExchangeOtcHistoryRequest) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_SIDE_UNSPECIFIED
}

func (x *ExchangeOtcHistoryRequest) GetCreatedTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeStart
	}
	return nil
}

func (x *ExchangeOtcHistoryRequest) GetCreatedTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeEnd
	}
	return nil
}

func (x *ExchangeOtcHistoryRequest) GetFilledTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.FilledTimeStart
	}
	return nil
}

func (x *ExchangeOtcHistoryRequest) GetFilledTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.FilledTimeEnd
	}
	return nil
}

func (x *ExchangeOtcHistoryRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ExchangeOtcHistoryRequest) GetPageLimit() uint32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

type ExchangeOtcHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   []string                         `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`
	Status  string                           `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message string                           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ExchangeOtcHistoryResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ExchangeOtcHistoryResponse) Reset() {
	*x = ExchangeOtcHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeOtcHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeOtcHistoryResponse) ProtoMessage() {}

func (x *ExchangeOtcHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeOtcHistoryResponse.ProtoReflect.Descriptor instead.
func (*ExchangeOtcHistoryResponse) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{11}
}

func (x *ExchangeOtcHistoryResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ExchangeOtcHistoryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExchangeOtcHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ExchangeOtcHistoryResponse) GetData() *ExchangeOtcHistoryResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderInquiryResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // this id is needed for order confirm request
	MakerAsset       string `protobuf:"bytes,2,opt,name=maker_asset,json=makerAsset,proto3" json:"maker_asset,omitempty"`
	MakerQty         string `protobuf:"bytes,3,opt,name=maker_qty,json=makerQty,proto3" json:"maker_qty,omitempty"`
	TakerAsset       string `protobuf:"bytes,4,opt,name=taker_asset,json=takerAsset,proto3" json:"taker_asset,omitempty"`
	TakerQty         string `protobuf:"bytes,5,opt,name=taker_qty,json=takerQty,proto3" json:"taker_qty,omitempty"`
	Base             string `protobuf:"bytes,6,opt,name=base,proto3" json:"base,omitempty"`
	Quote            string `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`
	Price            string `protobuf:"bytes,8,opt,name=price,proto3" json:"price,omitempty"`
	CountDownSeconds uint64 `protobuf:"varint,9,opt,name=count_down_seconds,json=countDownSeconds,proto3" json:"count_down_seconds,omitempty"`
}

func (x *OrderInquiryResponse_Data) Reset() {
	*x = OrderInquiryResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInquiryResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInquiryResponse_Data) ProtoMessage() {}

func (x *OrderInquiryResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInquiryResponse_Data.ProtoReflect.Descriptor instead.
func (*OrderInquiryResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{3, 0}
}

func (x *OrderInquiryResponse_Data) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderInquiryResponse_Data) GetMakerAsset() string {
	if x != nil {
		return x.MakerAsset
	}
	return ""
}

func (x *OrderInquiryResponse_Data) GetMakerQty() string {
	if x != nil {
		return x.MakerQty
	}
	return ""
}

func (x *OrderInquiryResponse_Data) GetTakerAsset() string {
	if x != nil {
		return x.TakerAsset
	}
	return ""
}

func (x *OrderInquiryResponse_Data) GetTakerQty() string {
	if x != nil {
		return x.TakerQty
	}
	return ""
}

func (x *OrderInquiryResponse_Data) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *OrderInquiryResponse_Data) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *OrderInquiryResponse_Data) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *OrderInquiryResponse_Data) GetCountDownSeconds() uint64 {
	if x != nil {
		return x.CountDownSeconds
	}
	return 0
}

type OrderConfirmResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceNumber string `protobuf:"bytes,2,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
}

func (x *OrderConfirmResponse_Data) Reset() {
	*x = OrderConfirmResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderConfirmResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderConfirmResponse_Data) ProtoMessage() {}

func (x *OrderConfirmResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderConfirmResponse_Data.ProtoReflect.Descriptor instead.
func (*OrderConfirmResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{5, 0}
}

func (x *OrderConfirmResponse_Data) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderConfirmResponse_Data) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

type OtcFilterResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*Order `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *OtcFilterResponse_Data) Reset() {
	*x = OtcFilterResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtcFilterResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtcFilterResponse_Data) ProtoMessage() {}

func (x *OtcFilterResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtcFilterResponse_Data.ProtoReflect.Descriptor instead.
func (*OtcFilterResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{7, 0}
}

func (x *OtcFilterResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OtcFilterResponse_Data) GetRows() []*Order {
	if x != nil {
		return x.Rows
	}
	return nil
}

type FiatOtcHistoryResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*OrderHistory `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *FiatOtcHistoryResponse_Data) Reset() {
	*x = FiatOtcHistoryResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiatOtcHistoryResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiatOtcHistoryResponse_Data) ProtoMessage() {}

func (x *FiatOtcHistoryResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiatOtcHistoryResponse_Data.ProtoReflect.Descriptor instead.
func (*FiatOtcHistoryResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{9, 0}
}

func (x *FiatOtcHistoryResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FiatOtcHistoryResponse_Data) GetRows() []*OrderHistory {
	if x != nil {
		return x.Rows
	}
	return nil
}

type ExchangeOtcHistoryResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows  []*OrderHistory `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *ExchangeOtcHistoryResponse_Data) Reset() {
	*x = ExchangeOtcHistoryResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_financial_coordinator_otc_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeOtcHistoryResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeOtcHistoryResponse_Data) ProtoMessage() {}

func (x *ExchangeOtcHistoryResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_financial_coordinator_otc_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeOtcHistoryResponse_Data.ProtoReflect.Descriptor instead.
func (*ExchangeOtcHistoryResponse_Data) Descriptor() ([]byte, []int) {
	return file_financial_coordinator_otc_messages_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ExchangeOtcHistoryResponse_Data) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ExchangeOtcHistoryResponse_Data) GetRows() []*OrderHistory {
	if x != nil {
		return x.Rows
	}
	return nil
}

var File_financial_coordinator_otc_messages_proto protoreflect.FileDescriptor

var file_financial_coordinator_otc_messages_proto_rawDesc = []byte{
	0x0a, 0x28, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x6f, 0x74, 0x63, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x72, 0x61, 0x62, 0x65,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6f, 0x74, 0x63, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x25, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x6f, 0x74, 0x63, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xed, 0x09, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x61, 0x6b, 0x65, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x61, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x61,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x61,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x46, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x19,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x17, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x6b, 0x65,
	0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x6b,
	0x65, 0x72, 0x51, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x61, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x51, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x04, 0x73, 0x69, 0x64,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6f, 0x74, 0x63, 0x2e, 0x53, 0x69, 0x64,
	0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x66, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x64, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x64, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6f, 0x74, 0x63, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x22, 0xf8, 0x04, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x27, 0x0a,
	0x0f, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x6b,
	0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x6b, 0x65, 0x72,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x61, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x51, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61,
	0x6b, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46,
	0x61, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x51, 0x74, 0x79, 0x12, 0x3c,
	0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x72,
	0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6f, 0x74,
	0x63, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x72,
	0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6f, 0x74,
	0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x22, 0x7d, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x6b, 0x65,
	0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x6b,
	0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61,
	0x6b, 0x65, 0x72, 0x51, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x22, 0xb4, 0x03, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x51, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x6f, 0x74, 0x63, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x80, 0x02, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x51, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x51, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x25, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf0,
	0x01, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x51, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e,
	0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6f,
	0x74, 0x63, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x3d, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x85, 0x09, 0x0a, 0x10, 0x4f, 0x74, 0x63, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61,
	0x6b, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x6b,
	0x65, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x6c, 0x6f, 0x6f,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x65,
	0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x65, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x61, 0x6b, 0x65, 0x72,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x2e, 0x0a,
	0x13, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x65, 0x69, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x65, 0x69, 0x6c, 0x12, 0x48, 0x0a,
	0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x51, 0x0a,
	0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x4d, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12,
	0x46, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x42, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x72, 0x61,
	0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6f, 0x74, 0x63,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x63, 0x73, 0x76, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x43,
	0x73, 0x76, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61,
	0x6b, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x64, 0x22, 0x9a, 0x02, 0x0a, 0x11, 0x4f, 0x74,
	0x63, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6f, 0x74, 0x63, 0x2e, 0x4f, 0x74, 0x63, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x76, 0x1a, 0x5b, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6f, 0x74, 0x63, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xa4, 0x03, 0x0a, 0x15, 0x46, 0x69, 0x61, 0x74, 0x4f,
	0x74, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x6f, 0x74, 0x63, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x48,
	0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x46,
	0x0a, 0x11, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x66, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x99, 0x02,
	0x0a, 0x16, 0x46, 0x69, 0x61, 0x74, 0x4f, 0x74, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x53, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x6f, 0x74, 0x63, 0x2e, 0x46, 0x69, 0x61, 0x74, 0x4f, 0x74, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x62, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x6f, 0x74, 0x63, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xa8, 0x03, 0x0a, 0x19, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x74, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6f, 0x74, 0x63, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52,
	0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x44, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x46, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x42, 0x0a,
	0x0f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0xa1, 0x02, 0x0a, 0x1a, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4f, 0x74, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x57, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x72, 0x61, 0x62, 0x65,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6f, 0x74, 0x63, 0x2e, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x74, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x62, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x44, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x6f, 0x74, 0x63, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x42, 0x2c, 0x5a, 0x2a, 0x72, 0x61, 0x62, 0x65,
	0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x6f,
	0x74, 0x63, 0x3b, 0x6f, 0x74, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_financial_coordinator_otc_messages_proto_rawDescOnce sync.Once
	file_financial_coordinator_otc_messages_proto_rawDescData = file_financial_coordinator_otc_messages_proto_rawDesc
)

func file_financial_coordinator_otc_messages_proto_rawDescGZIP() []byte {
	file_financial_coordinator_otc_messages_proto_rawDescOnce.Do(func() {
		file_financial_coordinator_otc_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_financial_coordinator_otc_messages_proto_rawDescData)
	})
	return file_financial_coordinator_otc_messages_proto_rawDescData
}

var file_financial_coordinator_otc_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_financial_coordinator_otc_messages_proto_goTypes = []interface{}{
	(*Order)(nil),                           // 0: rabex.api.financialCoordinator.otc.Order
	(*OrderHistory)(nil),                    // 1: rabex.api.financialCoordinator.otc.OrderHistory
	(*OrderInquiryRequest)(nil),             // 2: rabex.api.financialCoordinator.otc.OrderInquiryRequest
	(*OrderInquiryResponse)(nil),            // 3: rabex.api.financialCoordinator.otc.OrderInquiryResponse
	(*OrderConfirmRequest)(nil),             // 4: rabex.api.financialCoordinator.otc.OrderConfirmRequest
	(*OrderConfirmResponse)(nil),            // 5: rabex.api.financialCoordinator.otc.OrderConfirmResponse
	(*OtcFilterRequest)(nil),                // 6: rabex.api.financialCoordinator.otc.OtcFilterRequest
	(*OtcFilterResponse)(nil),               // 7: rabex.api.financialCoordinator.otc.OtcFilterResponse
	(*FiatOtcHistoryRequest)(nil),           // 8: rabex.api.financialCoordinator.otc.FiatOtcHistoryRequest
	(*FiatOtcHistoryResponse)(nil),          // 9: rabex.api.financialCoordinator.otc.FiatOtcHistoryResponse
	(*ExchangeOtcHistoryRequest)(nil),       // 10: rabex.api.financialCoordinator.otc.ExchangeOtcHistoryRequest
	(*ExchangeOtcHistoryResponse)(nil),      // 11: rabex.api.financialCoordinator.otc.ExchangeOtcHistoryResponse
	(*OrderInquiryResponse_Data)(nil),       // 12: rabex.api.financialCoordinator.otc.OrderInquiryResponse.Data
	(*OrderConfirmResponse_Data)(nil),       // 13: rabex.api.financialCoordinator.otc.OrderConfirmResponse.Data
	(*OtcFilterResponse_Data)(nil),          // 14: rabex.api.financialCoordinator.otc.OtcFilterResponse.Data
	(*FiatOtcHistoryResponse_Data)(nil),     // 15: rabex.api.financialCoordinator.otc.FiatOtcHistoryResponse.Data
	(*ExchangeOtcHistoryResponse_Data)(nil), // 16: rabex.api.financialCoordinator.otc.ExchangeOtcHistoryResponse.Data
	(Side)(0),                               // 17: rabex.api.financialCoordinator.otc.Side
	(Status)(0),                             // 18: rabex.api.financialCoordinator.otc.Status
	(*timestamppb.Timestamp)(nil),           // 19: google.protobuf.Timestamp
}
var file_financial_coordinator_otc_messages_proto_depIdxs = []int32{
	17, // 0: rabex.api.financialCoordinator.otc.Order.side:type_name -> rabex.api.financialCoordinator.otc.Side
	18, // 1: rabex.api.financialCoordinator.otc.Order.status:type_name -> rabex.api.financialCoordinator.otc.Status
	19, // 2: rabex.api.financialCoordinator.otc.Order.created:type_name -> google.protobuf.Timestamp
	19, // 3: rabex.api.financialCoordinator.otc.Order.updated:type_name -> google.protobuf.Timestamp
	19, // 4: rabex.api.financialCoordinator.otc.Order.filled:type_name -> google.protobuf.Timestamp
	17, // 5: rabex.api.financialCoordinator.otc.OrderHistory.side:type_name -> rabex.api.financialCoordinator.otc.Side
	18, // 6: rabex.api.financialCoordinator.otc.OrderHistory.status:type_name -> rabex.api.financialCoordinator.otc.Status
	19, // 7: rabex.api.financialCoordinator.otc.OrderHistory.created:type_name -> google.protobuf.Timestamp
	19, // 8: rabex.api.financialCoordinator.otc.OrderHistory.filled:type_name -> google.protobuf.Timestamp
	12, // 9: rabex.api.financialCoordinator.otc.OrderInquiryResponse.data:type_name -> rabex.api.financialCoordinator.otc.OrderInquiryResponse.Data
	13, // 10: rabex.api.financialCoordinator.otc.OrderConfirmResponse.data:type_name -> rabex.api.financialCoordinator.otc.OrderConfirmResponse.Data
	19, // 11: rabex.api.financialCoordinator.otc.OtcFilterRequest.created_time_start:type_name -> google.protobuf.Timestamp
	19, // 12: rabex.api.financialCoordinator.otc.OtcFilterRequest.created_time_end:type_name -> google.protobuf.Timestamp
	19, // 13: rabex.api.financialCoordinator.otc.OtcFilterRequest.last_updated_time_start:type_name -> google.protobuf.Timestamp
	19, // 14: rabex.api.financialCoordinator.otc.OtcFilterRequest.last_updated_time_end:type_name -> google.protobuf.Timestamp
	19, // 15: rabex.api.financialCoordinator.otc.OtcFilterRequest.filled_time_start:type_name -> google.protobuf.Timestamp
	19, // 16: rabex.api.financialCoordinator.otc.OtcFilterRequest.filled_time_end:type_name -> google.protobuf.Timestamp
	18, // 17: rabex.api.financialCoordinator.otc.OtcFilterRequest.status:type_name -> rabex.api.financialCoordinator.otc.Status
	14, // 18: rabex.api.financialCoordinator.otc.OtcFilterResponse.data:type_name -> rabex.api.financialCoordinator.otc.OtcFilterResponse.Data
	17, // 19: rabex.api.financialCoordinator.otc.FiatOtcHistoryRequest.side:type_name -> rabex.api.financialCoordinator.otc.Side
	19, // 20: rabex.api.financialCoordinator.otc.FiatOtcHistoryRequest.created_time_start:type_name -> google.protobuf.Timestamp
	19, // 21: rabex.api.financialCoordinator.otc.FiatOtcHistoryRequest.created_time_end:type_name -> google.protobuf.Timestamp
	19, // 22: rabex.api.financialCoordinator.otc.FiatOtcHistoryRequest.filled_time_start:type_name -> google.protobuf.Timestamp
	19, // 23: rabex.api.financialCoordinator.otc.FiatOtcHistoryRequest.filled_time_end:type_name -> google.protobuf.Timestamp
	15, // 24: rabex.api.financialCoordinator.otc.FiatOtcHistoryResponse.data:type_name -> rabex.api.financialCoordinator.otc.FiatOtcHistoryResponse.Data
	17, // 25: rabex.api.financialCoordinator.otc.ExchangeOtcHistoryRequest.side:type_name -> rabex.api.financialCoordinator.otc.Side
	19, // 26: rabex.api.financialCoordinator.otc.ExchangeOtcHistoryRequest.created_time_start:type_name -> google.protobuf.Timestamp
	19, // 27: rabex.api.financialCoordinator.otc.ExchangeOtcHistoryRequest.created_time_end:type_name -> google.protobuf.Timestamp
	19, // 28: rabex.api.financialCoordinator.otc.ExchangeOtcHistoryRequest.filled_time_start:type_name -> google.protobuf.Timestamp
	19, // 29: rabex.api.financialCoordinator.otc.ExchangeOtcHistoryRequest.filled_time_end:type_name -> google.protobuf.Timestamp
	16, // 30: rabex.api.financialCoordinator.otc.ExchangeOtcHistoryResponse.data:type_name -> rabex.api.financialCoordinator.otc.ExchangeOtcHistoryResponse.Data
	0,  // 31: rabex.api.financialCoordinator.otc.OtcFilterResponse.Data.rows:type_name -> rabex.api.financialCoordinator.otc.Order
	1,  // 32: rabex.api.financialCoordinator.otc.FiatOtcHistoryResponse.Data.rows:type_name -> rabex.api.financialCoordinator.otc.OrderHistory
	1,  // 33: rabex.api.financialCoordinator.otc.ExchangeOtcHistoryResponse.Data.rows:type_name -> rabex.api.financialCoordinator.otc.OrderHistory
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_financial_coordinator_otc_messages_proto_init() }
func file_financial_coordinator_otc_messages_proto_init() {
	if File_financial_coordinator_otc_messages_proto != nil {
		return
	}
	file_financial_coordinator_otc_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_financial_coordinator_otc_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInquiryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInquiryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderConfirmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtcFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtcFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiatOtcHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiatOtcHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeOtcHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeOtcHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInquiryResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderConfirmResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtcFilterResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiatOtcHistoryResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_financial_coordinator_otc_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeOtcHistoryResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_financial_coordinator_otc_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_financial_coordinator_otc_messages_proto_goTypes,
		DependencyIndexes: file_financial_coordinator_otc_messages_proto_depIdxs,
		MessageInfos:      file_financial_coordinator_otc_messages_proto_msgTypes,
	}.Build()
	File_financial_coordinator_otc_messages_proto = out.File
	file_financial_coordinator_otc_messages_proto_rawDesc = nil
	file_financial_coordinator_otc_messages_proto_goTypes = nil
	file_financial_coordinator_otc_messages_proto_depIdxs = nil
}
