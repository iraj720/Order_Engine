// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: financial-coordinator/toman/enums.proto

package toman

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DepositStatus int32

const (
	DepositStatus_DEPOSIT_STATUS_UNSPECIFIED               DepositStatus = 0
	DepositStatus_DEPOSIT_STATUS_FAILED                    DepositStatus = 1
	DepositStatus_DEPOSIT_STATUS_ABORTED                   DepositStatus = 2
	DepositStatus_DEPOSIT_STATUS_WAITING_FOR_ADMIN         DepositStatus = 3
	DepositStatus_DEPOSIT_STATUS_NEW                       DepositStatus = 4
	DepositStatus_DEPOSIT_STATUS_PAYMENT_SUCCESSFUL        DepositStatus = 5
	DepositStatus_DEPOSIT_STATUS_CONFISCATED               DepositStatus = 6
	DepositStatus_DEPOSIT_STATUS_FROZEN                    DepositStatus = 7
	DepositStatus_DEPOSIT_STATUS_COMPLETED                 DepositStatus = 8
	DepositStatus_DEPOSIT_STATUS_PAYMENT_SUCCESSFUL_MANUAL DepositStatus = 9
	DepositStatus_DEPOSIT_STATUS_PROCESSING                DepositStatus = 41 // this is just for user and is not used in flows,
)

// Enum value maps for DepositStatus.
var (
	DepositStatus_name = map[int32]string{
		0:  "DEPOSIT_STATUS_UNSPECIFIED",
		1:  "DEPOSIT_STATUS_FAILED",
		2:  "DEPOSIT_STATUS_ABORTED",
		3:  "DEPOSIT_STATUS_WAITING_FOR_ADMIN",
		4:  "DEPOSIT_STATUS_NEW",
		5:  "DEPOSIT_STATUS_PAYMENT_SUCCESSFUL",
		6:  "DEPOSIT_STATUS_CONFISCATED",
		7:  "DEPOSIT_STATUS_FROZEN",
		8:  "DEPOSIT_STATUS_COMPLETED",
		9:  "DEPOSIT_STATUS_PAYMENT_SUCCESSFUL_MANUAL",
		41: "DEPOSIT_STATUS_PROCESSING",
	}
	DepositStatus_value = map[string]int32{
		"DEPOSIT_STATUS_UNSPECIFIED":               0,
		"DEPOSIT_STATUS_FAILED":                    1,
		"DEPOSIT_STATUS_ABORTED":                   2,
		"DEPOSIT_STATUS_WAITING_FOR_ADMIN":         3,
		"DEPOSIT_STATUS_NEW":                       4,
		"DEPOSIT_STATUS_PAYMENT_SUCCESSFUL":        5,
		"DEPOSIT_STATUS_CONFISCATED":               6,
		"DEPOSIT_STATUS_FROZEN":                    7,
		"DEPOSIT_STATUS_COMPLETED":                 8,
		"DEPOSIT_STATUS_PAYMENT_SUCCESSFUL_MANUAL": 9,
		"DEPOSIT_STATUS_PROCESSING":                41,
	}
)

func (x DepositStatus) Enum() *DepositStatus {
	p := new(DepositStatus)
	*p = x
	return p
}

func (x DepositStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepositStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[0].Descriptor()
}

func (DepositStatus) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[0]
}

func (x DepositStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepositStatus.Descriptor instead.
func (DepositStatus) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{0}
}

type DepositType int32

const (
	DepositType_DEPOSIT_TYPE_UNSPECIFIED DepositType = 0
)

// Enum value maps for DepositType.
var (
	DepositType_name = map[int32]string{
		0: "DEPOSIT_TYPE_UNSPECIFIED",
	}
	DepositType_value = map[string]int32{
		"DEPOSIT_TYPE_UNSPECIFIED": 0,
	}
)

func (x DepositType) Enum() *DepositType {
	p := new(DepositType)
	*p = x
	return p
}

func (x DepositType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepositType) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[1].Descriptor()
}

func (DepositType) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[1]
}

func (x DepositType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepositType.Descriptor instead.
func (DepositType) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{1}
}

type DepositPaymentService int32

const (
	DepositPaymentService_DEPOSIT_PAYMENT_SERVICE_UNSPECIFIED DepositPaymentService = 0
	DepositPaymentService_DEPOSIT_PAYMENT_SERVICE_VANDAR      DepositPaymentService = 1
	DepositPaymentService_DEPOSIT_PAYMENT_SERVICE_JIBIT       DepositPaymentService = 2
)

// Enum value maps for DepositPaymentService.
var (
	DepositPaymentService_name = map[int32]string{
		0: "DEPOSIT_PAYMENT_SERVICE_UNSPECIFIED",
		1: "DEPOSIT_PAYMENT_SERVICE_VANDAR",
		2: "DEPOSIT_PAYMENT_SERVICE_JIBIT",
	}
	DepositPaymentService_value = map[string]int32{
		"DEPOSIT_PAYMENT_SERVICE_UNSPECIFIED": 0,
		"DEPOSIT_PAYMENT_SERVICE_VANDAR":      1,
		"DEPOSIT_PAYMENT_SERVICE_JIBIT":       2,
	}
)

func (x DepositPaymentService) Enum() *DepositPaymentService {
	p := new(DepositPaymentService)
	*p = x
	return p
}

func (x DepositPaymentService) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepositPaymentService) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[2].Descriptor()
}

func (DepositPaymentService) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[2]
}

func (x DepositPaymentService) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepositPaymentService.Descriptor instead.
func (DepositPaymentService) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{2}
}

type ActionDepositVerify int32

const (
	ActionDepositVerify_ACTION_DEPOSIT_VERIFY_UNSPECIFIED ActionDepositVerify = 0
	ActionDepositVerify_ACTION_DEPOSIT_VERIFY_VERIFY      ActionDepositVerify = 1
	ActionDepositVerify_ACTION_DEPOSIT_VERIFY_FAILED      ActionDepositVerify = 2
)

// Enum value maps for ActionDepositVerify.
var (
	ActionDepositVerify_name = map[int32]string{
		0: "ACTION_DEPOSIT_VERIFY_UNSPECIFIED",
		1: "ACTION_DEPOSIT_VERIFY_VERIFY",
		2: "ACTION_DEPOSIT_VERIFY_FAILED",
	}
	ActionDepositVerify_value = map[string]int32{
		"ACTION_DEPOSIT_VERIFY_UNSPECIFIED": 0,
		"ACTION_DEPOSIT_VERIFY_VERIFY":      1,
		"ACTION_DEPOSIT_VERIFY_FAILED":      2,
	}
)

func (x ActionDepositVerify) Enum() *ActionDepositVerify {
	p := new(ActionDepositVerify)
	*p = x
	return p
}

func (x ActionDepositVerify) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionDepositVerify) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[3].Descriptor()
}

func (ActionDepositVerify) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[3]
}

func (x ActionDepositVerify) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionDepositVerify.Descriptor instead.
func (ActionDepositVerify) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{3}
}

type DepositAction int32

const (
	DepositAction_DEPOSIT_ACTION_UNSPECIFIED DepositAction = 0
	DepositAction_DEPOSIT_ACTION_VERIFY      DepositAction = 1
	DepositAction_DEPOSIT_ACTION_FAILED      DepositAction = 2
)

// Enum value maps for DepositAction.
var (
	DepositAction_name = map[int32]string{
		0: "DEPOSIT_ACTION_UNSPECIFIED",
		1: "DEPOSIT_ACTION_VERIFY",
		2: "DEPOSIT_ACTION_FAILED",
	}
	DepositAction_value = map[string]int32{
		"DEPOSIT_ACTION_UNSPECIFIED": 0,
		"DEPOSIT_ACTION_VERIFY":      1,
		"DEPOSIT_ACTION_FAILED":      2,
	}
)

func (x DepositAction) Enum() *DepositAction {
	p := new(DepositAction)
	*p = x
	return p
}

func (x DepositAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepositAction) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[4].Descriptor()
}

func (DepositAction) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[4]
}

func (x DepositAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepositAction.Descriptor instead.
func (DepositAction) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{4}
}

type ActionDepositTrxInit int32

const (
	ActionDepositTrxInit_ACTION_DEPOSIT_TRXINIT_UNSPECIFIED ActionDepositTrxInit = 0
	ActionDepositTrxInit_ACTION_DEPOSIT_TRXINIT_APPROVED    ActionDepositTrxInit = 1
	ActionDepositTrxInit_ACTION_DEPOSIT_TRXINIT_FAILED      ActionDepositTrxInit = 2
)

// Enum value maps for ActionDepositTrxInit.
var (
	ActionDepositTrxInit_name = map[int32]string{
		0: "ACTION_DEPOSIT_TRXINIT_UNSPECIFIED",
		1: "ACTION_DEPOSIT_TRXINIT_APPROVED",
		2: "ACTION_DEPOSIT_TRXINIT_FAILED",
	}
	ActionDepositTrxInit_value = map[string]int32{
		"ACTION_DEPOSIT_TRXINIT_UNSPECIFIED": 0,
		"ACTION_DEPOSIT_TRXINIT_APPROVED":    1,
		"ACTION_DEPOSIT_TRXINIT_FAILED":      2,
	}
)

func (x ActionDepositTrxInit) Enum() *ActionDepositTrxInit {
	p := new(ActionDepositTrxInit)
	*p = x
	return p
}

func (x ActionDepositTrxInit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionDepositTrxInit) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[5].Descriptor()
}

func (ActionDepositTrxInit) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[5]
}

func (x ActionDepositTrxInit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionDepositTrxInit.Descriptor instead.
func (ActionDepositTrxInit) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{5}
}

type ActionWithdrawFinalize int32

const (
	ActionWithdrawFinalize_WITHDRAW_FINALIZE_ACTION_UNSPECIFIED ActionWithdrawFinalize = 0
	ActionWithdrawFinalize_WITHDRAW_FINALIZE_VERIFY_ACTION      ActionWithdrawFinalize = 1
	ActionWithdrawFinalize_WITHDRAW_FINALIZE_FAILED_ACTION      ActionWithdrawFinalize = 2
)

// Enum value maps for ActionWithdrawFinalize.
var (
	ActionWithdrawFinalize_name = map[int32]string{
		0: "WITHDRAW_FINALIZE_ACTION_UNSPECIFIED",
		1: "WITHDRAW_FINALIZE_VERIFY_ACTION",
		2: "WITHDRAW_FINALIZE_FAILED_ACTION",
	}
	ActionWithdrawFinalize_value = map[string]int32{
		"WITHDRAW_FINALIZE_ACTION_UNSPECIFIED": 0,
		"WITHDRAW_FINALIZE_VERIFY_ACTION":      1,
		"WITHDRAW_FINALIZE_FAILED_ACTION":      2,
	}
)

func (x ActionWithdrawFinalize) Enum() *ActionWithdrawFinalize {
	p := new(ActionWithdrawFinalize)
	*p = x
	return p
}

func (x ActionWithdrawFinalize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionWithdrawFinalize) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[6].Descriptor()
}

func (ActionWithdrawFinalize) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[6]
}

func (x ActionWithdrawFinalize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionWithdrawFinalize.Descriptor instead.
func (ActionWithdrawFinalize) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{6}
}

type ActionDepositProceed int32

const (
	ActionDepositProceed_ACTION_DEPOSIT_PROCEED_UNSPECIFIED ActionDepositProceed = 0
	ActionDepositProceed_ACTION_DEPOSIT_PROCEED_FINALIZE    ActionDepositProceed = 1
	ActionDepositProceed_ACTION_DEPOSIT_PROCEED_CONFISCATE  ActionDepositProceed = 2
	ActionDepositProceed_ACTION_DEPOSIT_PROCEED_FREEZE      ActionDepositProceed = 3
)

// Enum value maps for ActionDepositProceed.
var (
	ActionDepositProceed_name = map[int32]string{
		0: "ACTION_DEPOSIT_PROCEED_UNSPECIFIED",
		1: "ACTION_DEPOSIT_PROCEED_FINALIZE",
		2: "ACTION_DEPOSIT_PROCEED_CONFISCATE",
		3: "ACTION_DEPOSIT_PROCEED_FREEZE",
	}
	ActionDepositProceed_value = map[string]int32{
		"ACTION_DEPOSIT_PROCEED_UNSPECIFIED": 0,
		"ACTION_DEPOSIT_PROCEED_FINALIZE":    1,
		"ACTION_DEPOSIT_PROCEED_CONFISCATE":  2,
		"ACTION_DEPOSIT_PROCEED_FREEZE":      3,
	}
)

func (x ActionDepositProceed) Enum() *ActionDepositProceed {
	p := new(ActionDepositProceed)
	*p = x
	return p
}

func (x ActionDepositProceed) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionDepositProceed) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[7].Descriptor()
}

func (ActionDepositProceed) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[7]
}

func (x ActionDepositProceed) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionDepositProceed.Descriptor instead.
func (ActionDepositProceed) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{7}
}

type WithdrawStatus int32

const (
	WithdrawStatus_WITHDRAW_STATUS_UNSPECIFIED           WithdrawStatus = 0
	WithdrawStatus_WITHDRAW_STATUS_NEW                   WithdrawStatus = 1
	WithdrawStatus_WITHDRAW_STATUS_MISCARRIED            WithdrawStatus = 2
	WithdrawStatus_WITHDRAW_STATUS_WAITING_FOR_ADMIN     WithdrawStatus = 3
	WithdrawStatus_WITHDRAW_STATUS_FROZEN                WithdrawStatus = 4
	WithdrawStatus_WITHDRAW_STATUS_SENT_TO_GW            WithdrawStatus = 5
	WithdrawStatus_WITHDRAW_STATUS_SUCCESSFUL            WithdrawStatus = 6
	WithdrawStatus_WITHDRAW_STATUS_FAILED                WithdrawStatus = 7
	WithdrawStatus_WITHDRAW_STATUS_ACC_FINALIZING_FAILED WithdrawStatus = 8
	WithdrawStatus_WITHDRAW_STATUS_CANCELED              WithdrawStatus = 9
	WithdrawStatus_WITHDRAW_STATUS_COMPLETED             WithdrawStatus = 10
	WithdrawStatus_WITHDRAW_STATUS_CORRECTED             WithdrawStatus = 11
	WithdrawStatus_WITHDRAW_STATUS_PROCESSING            WithdrawStatus = 41 // this is just for user and is not used in flows,
)

// Enum value maps for WithdrawStatus.
var (
	WithdrawStatus_name = map[int32]string{
		0:  "WITHDRAW_STATUS_UNSPECIFIED",
		1:  "WITHDRAW_STATUS_NEW",
		2:  "WITHDRAW_STATUS_MISCARRIED",
		3:  "WITHDRAW_STATUS_WAITING_FOR_ADMIN",
		4:  "WITHDRAW_STATUS_FROZEN",
		5:  "WITHDRAW_STATUS_SENT_TO_GW",
		6:  "WITHDRAW_STATUS_SUCCESSFUL",
		7:  "WITHDRAW_STATUS_FAILED",
		8:  "WITHDRAW_STATUS_ACC_FINALIZING_FAILED",
		9:  "WITHDRAW_STATUS_CANCELED",
		10: "WITHDRAW_STATUS_COMPLETED",
		11: "WITHDRAW_STATUS_CORRECTED",
		41: "WITHDRAW_STATUS_PROCESSING",
	}
	WithdrawStatus_value = map[string]int32{
		"WITHDRAW_STATUS_UNSPECIFIED":           0,
		"WITHDRAW_STATUS_NEW":                   1,
		"WITHDRAW_STATUS_MISCARRIED":            2,
		"WITHDRAW_STATUS_WAITING_FOR_ADMIN":     3,
		"WITHDRAW_STATUS_FROZEN":                4,
		"WITHDRAW_STATUS_SENT_TO_GW":            5,
		"WITHDRAW_STATUS_SUCCESSFUL":            6,
		"WITHDRAW_STATUS_FAILED":                7,
		"WITHDRAW_STATUS_ACC_FINALIZING_FAILED": 8,
		"WITHDRAW_STATUS_CANCELED":              9,
		"WITHDRAW_STATUS_COMPLETED":             10,
		"WITHDRAW_STATUS_CORRECTED":             11,
		"WITHDRAW_STATUS_PROCESSING":            41,
	}
)

func (x WithdrawStatus) Enum() *WithdrawStatus {
	p := new(WithdrawStatus)
	*p = x
	return p
}

func (x WithdrawStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[8].Descriptor()
}

func (WithdrawStatus) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[8]
}

func (x WithdrawStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawStatus.Descriptor instead.
func (WithdrawStatus) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{8}
}

type WithdrawFillStatus int32

const (
	WithdrawFillStatus_WITHDRAW_FILL_STATUS_UNSPECIFIED WithdrawFillStatus = 0
	WithdrawFillStatus_WITHDRAW_FILL_STATUS_NEW         WithdrawFillStatus = 1
	WithdrawFillStatus_WITHDRAW_FILL_STATUS_MISCARRIED  WithdrawFillStatus = 2
	WithdrawFillStatus_WITHDRAW_FILL_STATUS_SUCCESSFUL  WithdrawFillStatus = 6
	// WITHDRAW_FILL_STATUS_FAILED = 7;
	WithdrawFillStatus_WITHDRAW_FILL_STATUS_CANCELED  WithdrawFillStatus = 9
	WithdrawFillStatus_WITHDRAW_FILL_STATUS_COMPLETED WithdrawFillStatus = 10
)

// Enum value maps for WithdrawFillStatus.
var (
	WithdrawFillStatus_name = map[int32]string{
		0:  "WITHDRAW_FILL_STATUS_UNSPECIFIED",
		1:  "WITHDRAW_FILL_STATUS_NEW",
		2:  "WITHDRAW_FILL_STATUS_MISCARRIED",
		6:  "WITHDRAW_FILL_STATUS_SUCCESSFUL",
		9:  "WITHDRAW_FILL_STATUS_CANCELED",
		10: "WITHDRAW_FILL_STATUS_COMPLETED",
	}
	WithdrawFillStatus_value = map[string]int32{
		"WITHDRAW_FILL_STATUS_UNSPECIFIED": 0,
		"WITHDRAW_FILL_STATUS_NEW":         1,
		"WITHDRAW_FILL_STATUS_MISCARRIED":  2,
		"WITHDRAW_FILL_STATUS_SUCCESSFUL":  6,
		"WITHDRAW_FILL_STATUS_CANCELED":    9,
		"WITHDRAW_FILL_STATUS_COMPLETED":   10,
	}
)

func (x WithdrawFillStatus) Enum() *WithdrawFillStatus {
	p := new(WithdrawFillStatus)
	*p = x
	return p
}

func (x WithdrawFillStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawFillStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[9].Descriptor()
}

func (WithdrawFillStatus) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[9]
}

func (x WithdrawFillStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawFillStatus.Descriptor instead.
func (WithdrawFillStatus) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{9}
}

type WithdrawType int32

const (
	WithdrawType_WITHDRAW_TYPE_UNSPECIFIED WithdrawType = 0
)

// Enum value maps for WithdrawType.
var (
	WithdrawType_name = map[int32]string{
		0: "WITHDRAW_TYPE_UNSPECIFIED",
	}
	WithdrawType_value = map[string]int32{
		"WITHDRAW_TYPE_UNSPECIFIED": 0,
	}
)

func (x WithdrawType) Enum() *WithdrawType {
	p := new(WithdrawType)
	*p = x
	return p
}

func (x WithdrawType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawType) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[10].Descriptor()
}

func (WithdrawType) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[10]
}

func (x WithdrawType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawType.Descriptor instead.
func (WithdrawType) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{10}
}

type WithdrawTransactionAction int32

const (
	WithdrawTransactionAction_WITHDRAW_TRANSACTION_ACTION_UNSPECIFIED     WithdrawTransactionAction = 0
	WithdrawTransactionAction_WITHDRAW_TRANSACTION_ACTION_SEND_TO_GATEWAY WithdrawTransactionAction = 1
	WithdrawTransactionAction_WITHDRAW_TRANSACTION_ACTION_CANCEL          WithdrawTransactionAction = 2
	WithdrawTransactionAction_WITHDRAW_TRANSACTION_ACTION_FREEZE          WithdrawTransactionAction = 3
)

// Enum value maps for WithdrawTransactionAction.
var (
	WithdrawTransactionAction_name = map[int32]string{
		0: "WITHDRAW_TRANSACTION_ACTION_UNSPECIFIED",
		1: "WITHDRAW_TRANSACTION_ACTION_SEND_TO_GATEWAY",
		2: "WITHDRAW_TRANSACTION_ACTION_CANCEL",
		3: "WITHDRAW_TRANSACTION_ACTION_FREEZE",
	}
	WithdrawTransactionAction_value = map[string]int32{
		"WITHDRAW_TRANSACTION_ACTION_UNSPECIFIED":     0,
		"WITHDRAW_TRANSACTION_ACTION_SEND_TO_GATEWAY": 1,
		"WITHDRAW_TRANSACTION_ACTION_CANCEL":          2,
		"WITHDRAW_TRANSACTION_ACTION_FREEZE":          3,
	}
)

func (x WithdrawTransactionAction) Enum() *WithdrawTransactionAction {
	p := new(WithdrawTransactionAction)
	*p = x
	return p
}

func (x WithdrawTransactionAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawTransactionAction) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[11].Descriptor()
}

func (WithdrawTransactionAction) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[11]
}

func (x WithdrawTransactionAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawTransactionAction.Descriptor instead.
func (WithdrawTransactionAction) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{11}
}

type WithdrawPaymentService int32

const (
	WithdrawPaymentService_WITHDRAW_PAYMENT_SERVICE_UNSPECIFIED WithdrawPaymentService = 0
	WithdrawPaymentService_WITHDRAW_PAYMENT_SERVICE_VANDAR      WithdrawPaymentService = 1
	WithdrawPaymentService_WITHDRAW_PAYMENT_SERVICE_JIBIT       WithdrawPaymentService = 2
)

// Enum value maps for WithdrawPaymentService.
var (
	WithdrawPaymentService_name = map[int32]string{
		0: "WITHDRAW_PAYMENT_SERVICE_UNSPECIFIED",
		1: "WITHDRAW_PAYMENT_SERVICE_VANDAR",
		2: "WITHDRAW_PAYMENT_SERVICE_JIBIT",
	}
	WithdrawPaymentService_value = map[string]int32{
		"WITHDRAW_PAYMENT_SERVICE_UNSPECIFIED": 0,
		"WITHDRAW_PAYMENT_SERVICE_VANDAR":      1,
		"WITHDRAW_PAYMENT_SERVICE_JIBIT":       2,
	}
)

func (x WithdrawPaymentService) Enum() *WithdrawPaymentService {
	p := new(WithdrawPaymentService)
	*p = x
	return p
}

func (x WithdrawPaymentService) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawPaymentService) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_coordinator_toman_enums_proto_enumTypes[12].Descriptor()
}

func (WithdrawPaymentService) Type() protoreflect.EnumType {
	return &file_financial_coordinator_toman_enums_proto_enumTypes[12]
}

func (x WithdrawPaymentService) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawPaymentService.Descriptor instead.
func (WithdrawPaymentService) EnumDescriptor() ([]byte, []int) {
	return file_financial_coordinator_toman_enums_proto_rawDescGZIP(), []int{12}
}

var File_financial_coordinator_toman_enums_proto protoreflect.FileDescriptor

var file_financial_coordinator_toman_enums_proto_rawDesc = []byte{
	0x0a, 0x27, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x2a, 0xf1, 0x02, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x24,
	0x0a, 0x20, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x04, 0x12, 0x25, 0x0a, 0x21,
	0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55,
	0x4c, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x53, 0x43, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x52, 0x4f, 0x5a, 0x45, 0x4e, 0x10, 0x07, 0x12, 0x1c,
	0x0a, 0x18, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x08, 0x12, 0x2c, 0x0a, 0x28,
	0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55,
	0x4c, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x45,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x29, 0x2a, 0x2b, 0x0a, 0x0b, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x45, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x2a, 0x87, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x27, 0x0a, 0x23, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x50, 0x41, 0x59, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x44, 0x45, 0x50,
	0x4f, 0x53, 0x49, 0x54, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x56, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x10, 0x01, 0x12, 0x21, 0x0a,
	0x1d, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4a, 0x49, 0x42, 0x49, 0x54, 0x10, 0x02,
	0x2a, 0x80, 0x01, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46,
	0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x20, 0x0a, 0x1c, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49,
	0x54, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x10,
	0x01, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x02, 0x2a, 0x65, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x10, 0x01, 0x12,
	0x19, 0x0a, 0x15, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x86, 0x01, 0x0a, 0x14, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x78, 0x49,
	0x6e, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x22, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x54, 0x52, 0x58, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x54, 0x52,
	0x58, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x21, 0x0a, 0x1d, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x5f, 0x54, 0x52, 0x58, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x02, 0x2a, 0x8c, 0x01, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x28,
	0x0a, 0x24, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c,
	0x49, 0x5a, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x57, 0x49, 0x54, 0x48,
	0x44, 0x52, 0x41, 0x57, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x5f, 0x56, 0x45,
	0x52, 0x49, 0x46, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x23, 0x0a,
	0x1f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49,
	0x5a, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x2a, 0xad, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x22, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x43, 0x45, 0x45, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x45, 0x44, 0x5f, 0x46, 0x49,
	0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45,
	0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x53, 0x43, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12,
	0x21, 0x0a, 0x1d, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49,
	0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x45, 0x44, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x5a, 0x45,
	0x10, 0x03, 0x2a, 0xb0, 0x03, 0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41,
	0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52,
	0x41, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12,
	0x1e, 0x0a, 0x1a, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x4d, 0x49, 0x53, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x25, 0x0a, 0x21, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x41,
	0x44, 0x4d, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52,
	0x41, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x52, 0x4f, 0x5a, 0x45, 0x4e,
	0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x4f, 0x5f, 0x47, 0x57,
	0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c,
	0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x29,
	0x0a, 0x25, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x41, 0x43, 0x43, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x49, 0x54,
	0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x49, 0x54, 0x48, 0x44,
	0x52, 0x41, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52,
	0x41, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43,
	0x54, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x1e, 0x0a, 0x1a, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41,
	0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53,
	0x49, 0x4e, 0x47, 0x10, 0x29, 0x2a, 0xe9, 0x01, 0x0a, 0x12, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x46, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x20,
	0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x46, 0x49, 0x4c, 0x4c, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x46,
	0x49, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01,
	0x12, 0x23, 0x0a, 0x1f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x46, 0x49, 0x4c,
	0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x49, 0x53, 0x43, 0x41, 0x52, 0x52,
	0x49, 0x45, 0x44, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41,
	0x57, 0x5f, 0x46, 0x49, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c, 0x10, 0x06, 0x12, 0x21, 0x0a, 0x1d, 0x57, 0x49,
	0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x46, 0x49, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x09, 0x12, 0x22, 0x0a,
	0x1e, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x46, 0x49, 0x4c, 0x4c, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10,
	0x0a, 0x2a, 0x2d, 0x0a, 0x0c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x2a, 0xc9, 0x01, 0x0a, 0x19, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x27, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2f, 0x0a, 0x2b, 0x57,
	0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f,
	0x54, 0x4f, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22,
	0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x10, 0x02, 0x12, 0x26, 0x0a, 0x22, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57,
	0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x5a, 0x45, 0x10, 0x03, 0x2a, 0x8b, 0x01, 0x0a,
	0x16, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x24, 0x57, 0x49, 0x54, 0x48, 0x44,
	0x52, 0x41, 0x57, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x23, 0x0a, 0x1f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x50, 0x41,
	0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x56, 0x41,
	0x4e, 0x44, 0x41, 0x52, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52,
	0x41, 0x57, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x4a, 0x49, 0x42, 0x49, 0x54, 0x10, 0x02, 0x42, 0x30, 0x5a, 0x2e, 0x72, 0x61,
	0x62, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x2d, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2f, 0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x3b, 0x74, 0x6f, 0x6d, 0x61, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_financial_coordinator_toman_enums_proto_rawDescOnce sync.Once
	file_financial_coordinator_toman_enums_proto_rawDescData = file_financial_coordinator_toman_enums_proto_rawDesc
)

func file_financial_coordinator_toman_enums_proto_rawDescGZIP() []byte {
	file_financial_coordinator_toman_enums_proto_rawDescOnce.Do(func() {
		file_financial_coordinator_toman_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_financial_coordinator_toman_enums_proto_rawDescData)
	})
	return file_financial_coordinator_toman_enums_proto_rawDescData
}

var file_financial_coordinator_toman_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 13)
var file_financial_coordinator_toman_enums_proto_goTypes = []interface{}{
	(DepositStatus)(0),             // 0: financialCoordinator.toman.DepositStatus
	(DepositType)(0),               // 1: financialCoordinator.toman.DepositType
	(DepositPaymentService)(0),     // 2: financialCoordinator.toman.DepositPaymentService
	(ActionDepositVerify)(0),       // 3: financialCoordinator.toman.ActionDepositVerify
	(DepositAction)(0),             // 4: financialCoordinator.toman.DepositAction
	(ActionDepositTrxInit)(0),      // 5: financialCoordinator.toman.ActionDepositTrxInit
	(ActionWithdrawFinalize)(0),    // 6: financialCoordinator.toman.ActionWithdrawFinalize
	(ActionDepositProceed)(0),      // 7: financialCoordinator.toman.ActionDepositProceed
	(WithdrawStatus)(0),            // 8: financialCoordinator.toman.WithdrawStatus
	(WithdrawFillStatus)(0),        // 9: financialCoordinator.toman.WithdrawFillStatus
	(WithdrawType)(0),              // 10: financialCoordinator.toman.WithdrawType
	(WithdrawTransactionAction)(0), // 11: financialCoordinator.toman.WithdrawTransactionAction
	(WithdrawPaymentService)(0),    // 12: financialCoordinator.toman.WithdrawPaymentService
}
var file_financial_coordinator_toman_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_financial_coordinator_toman_enums_proto_init() }
func file_financial_coordinator_toman_enums_proto_init() {
	if File_financial_coordinator_toman_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_financial_coordinator_toman_enums_proto_rawDesc,
			NumEnums:      13,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_financial_coordinator_toman_enums_proto_goTypes,
		DependencyIndexes: file_financial_coordinator_toman_enums_proto_depIdxs,
		EnumInfos:         file_financial_coordinator_toman_enums_proto_enumTypes,
	}.Build()
	File_financial_coordinator_toman_enums_proto = out.File
	file_financial_coordinator_toman_enums_proto_rawDesc = nil
	file_financial_coordinator_toman_enums_proto_goTypes = nil
	file_financial_coordinator_toman_enums_proto_depIdxs = nil
}
