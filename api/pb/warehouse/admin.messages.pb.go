// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: warehouse/admin.messages.proto

package warehouse

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	commons "rabex/api/pb/commons"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ManualFiatDeposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TreasuryAccount  string `protobuf:"bytes,1,opt,name=treasuryAccount,proto3" json:"treasuryAccount,omitempty"`
	Amount           string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	WarehouseAccount string `protobuf:"bytes,3,opt,name=warehouseAccount,proto3" json:"warehouseAccount,omitempty"`
	Comment          string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *ManualFiatDeposit) Reset() {
	*x = ManualFiatDeposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualFiatDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualFiatDeposit) ProtoMessage() {}

func (x *ManualFiatDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualFiatDeposit.ProtoReflect.Descriptor instead.
func (*ManualFiatDeposit) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{0}
}

func (x *ManualFiatDeposit) GetTreasuryAccount() string {
	if x != nil {
		return x.TreasuryAccount
	}
	return ""
}

func (x *ManualFiatDeposit) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *ManualFiatDeposit) GetWarehouseAccount() string {
	if x != nil {
		return x.WarehouseAccount
	}
	return ""
}

func (x *ManualFiatDeposit) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ManualFiatWithrawalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner            string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Amount           string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	ReferenceRequest string `protobuf:"bytes,3,opt,name=referenceRequest,proto3" json:"referenceRequest,omitempty"`
	Comment          string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Iban             string `protobuf:"bytes,5,opt,name=iban,proto3" json:"iban,omitempty"`
}

func (x *ManualFiatWithrawalRequest) Reset() {
	*x = ManualFiatWithrawalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualFiatWithrawalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualFiatWithrawalRequest) ProtoMessage() {}

func (x *ManualFiatWithrawalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualFiatWithrawalRequest.ProtoReflect.Descriptor instead.
func (*ManualFiatWithrawalRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{1}
}

func (x *ManualFiatWithrawalRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ManualFiatWithrawalRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *ManualFiatWithrawalRequest) GetReferenceRequest() string {
	if x != nil {
		return x.ReferenceRequest
	}
	return ""
}

func (x *ManualFiatWithrawalRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ManualFiatWithrawalRequest) GetIban() string {
	if x != nil {
		return x.Iban
	}
	return ""
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param []*FilterParam `protobuf:"bytes,1,rep,name=Param,proto3" json:"Param,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{2}
}

func (x *Filter) GetParam() []*FilterParam {
	if x != nil {
		return x.Param
	}
	return nil
}

type BrokerWarehouseAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset   commons.Assets  `protobuf:"varint,1,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	Broker  commons.Brokers `protobuf:"varint,2,opt,name=broker,proto3,enum=rabex.api.commons.Brokers" json:"broker,omitempty"`
	Address string          `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *BrokerWarehouseAccountRequest) Reset() {
	*x = BrokerWarehouseAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrokerWarehouseAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerWarehouseAccountRequest) ProtoMessage() {}

func (x *BrokerWarehouseAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerWarehouseAccountRequest.ProtoReflect.Descriptor instead.
func (*BrokerWarehouseAccountRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{3}
}

func (x *BrokerWarehouseAccountRequest) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *BrokerWarehouseAccountRequest) GetBroker() commons.Brokers {
	if x != nil {
		return x.Broker
	}
	return commons.Brokers(0)
}

func (x *BrokerWarehouseAccountRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type BrokerTreasuryAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network       commons.Networks   `protobuf:"varint,1,opt,name=network,proto3,enum=rabex.api.commons.Networks" json:"network,omitempty"`
	Asset         commons.Assets     `protobuf:"varint,2,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	Broker        commons.Brokers    `protobuf:"varint,3,opt,name=broker,proto3,enum=rabex.api.commons.Brokers" json:"broker,omitempty"`
	Address       string             `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	BrokerAccount string             `protobuf:"bytes,5,opt,name=brokerAccount,proto3" json:"brokerAccount,omitempty"`
	Issuer        BrokerWalletIssuer `protobuf:"varint,6,opt,name=issuer,proto3,enum=rabex.api.warehouse.BrokerWalletIssuer" json:"issuer,omitempty"`
}

func (x *BrokerTreasuryAccountRequest) Reset() {
	*x = BrokerTreasuryAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrokerTreasuryAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerTreasuryAccountRequest) ProtoMessage() {}

func (x *BrokerTreasuryAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerTreasuryAccountRequest.ProtoReflect.Descriptor instead.
func (*BrokerTreasuryAccountRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{4}
}

func (x *BrokerTreasuryAccountRequest) GetNetwork() commons.Networks {
	if x != nil {
		return x.Network
	}
	return commons.Networks(0)
}

func (x *BrokerTreasuryAccountRequest) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *BrokerTreasuryAccountRequest) GetBroker() commons.Brokers {
	if x != nil {
		return x.Broker
	}
	return commons.Brokers(0)
}

func (x *BrokerTreasuryAccountRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BrokerTreasuryAccountRequest) GetBrokerAccount() string {
	if x != nil {
		return x.BrokerAccount
	}
	return ""
}

func (x *BrokerTreasuryAccountRequest) GetIssuer() BrokerWalletIssuer {
	if x != nil {
		return x.Issuer
	}
	return BrokerWalletIssuer_Unspecified
}

type NewAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset         commons.Assets `protobuf:"varint,1,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	Symbol        string         `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Type          AssetType      `protobuf:"varint,3,opt,name=type,proto3,enum=rabex.api.warehouse.AssetType" json:"type,omitempty"`
	Decimals      uint32         `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
	MinDeposit    string         `protobuf:"bytes,5,opt,name=minDeposit,proto3" json:"minDeposit,omitempty"`
	MaxDeposit    string         `protobuf:"bytes,6,opt,name=maxDeposit,proto3" json:"maxDeposit,omitempty"`
	MinWithdrawal string         `protobuf:"bytes,7,opt,name=minWithdrawal,proto3" json:"minWithdrawal,omitempty"`
	MaxWithdrawal string         `protobuf:"bytes,8,opt,name=maxWithdrawal,proto3" json:"maxWithdrawal,omitempty"`
}

func (x *NewAsset) Reset() {
	*x = NewAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAsset) ProtoMessage() {}

func (x *NewAsset) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAsset.ProtoReflect.Descriptor instead.
func (*NewAsset) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{5}
}

func (x *NewAsset) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *NewAsset) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *NewAsset) GetType() AssetType {
	if x != nil {
		return x.Type
	}
	return AssetType_StableCoin
}

func (x *NewAsset) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *NewAsset) GetMinDeposit() string {
	if x != nil {
		return x.MinDeposit
	}
	return ""
}

func (x *NewAsset) GetMaxDeposit() string {
	if x != nil {
		return x.MaxDeposit
	}
	return ""
}

func (x *NewAsset) GetMinWithdrawal() string {
	if x != nil {
		return x.MinWithdrawal
	}
	return ""
}

func (x *NewAsset) GetMaxWithdrawal() string {
	if x != nil {
		return x.MaxWithdrawal
	}
	return ""
}

type NewNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network      commons.Networks `protobuf:"varint,1,opt,name=network,proto3,enum=rabex.api.commons.Networks" json:"network,omitempty"`
	AddressRegex string           `protobuf:"bytes,2,opt,name=addressRegex,proto3" json:"addressRegex,omitempty"`
	MemoRegex    string           `protobuf:"bytes,3,opt,name=memoRegex,proto3" json:"memoRegex,omitempty"`
	Symbol       string           `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *NewNetwork) Reset() {
	*x = NewNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewNetwork) ProtoMessage() {}

func (x *NewNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewNetwork.ProtoReflect.Descriptor instead.
func (*NewNetwork) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{6}
}

func (x *NewNetwork) GetNetwork() commons.Networks {
	if x != nil {
		return x.Network
	}
	return commons.Networks(0)
}

func (x *NewNetwork) GetAddressRegex() string {
	if x != nil {
		return x.AddressRegex
	}
	return ""
}

func (x *NewNetwork) GetMemoRegex() string {
	if x != nil {
		return x.MemoRegex
	}
	return ""
}

func (x *NewNetwork) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type NewAssetNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset       commons.Assets   `protobuf:"varint,1,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	Network     commons.Networks `protobuf:"varint,2,opt,name=network,proto3,enum=rabex.api.commons.Networks" json:"network,omitempty"`
	Decimals    uint32           `protobuf:"varint,3,opt,name=decimals,proto3" json:"decimals,omitempty"`
	WithdrawFee string           `protobuf:"bytes,4,opt,name=withdrawFee,proto3" json:"withdrawFee,omitempty"`
}

func (x *NewAssetNetwork) Reset() {
	*x = NewAssetNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAssetNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAssetNetwork) ProtoMessage() {}

func (x *NewAssetNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAssetNetwork.ProtoReflect.Descriptor instead.
func (*NewAssetNetwork) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{7}
}

func (x *NewAssetNetwork) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *NewAssetNetwork) GetNetwork() commons.Networks {
	if x != nil {
		return x.Network
	}
	return commons.Networks(0)
}

func (x *NewAssetNetwork) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *NewAssetNetwork) GetWithdrawFee() string {
	if x != nil {
		return x.WithdrawFee
	}
	return ""
}

type BrokersFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Broker []commons.Brokers `protobuf:"varint,1,rep,packed,name=broker,proto3,enum=rabex.api.commons.Brokers" json:"broker,omitempty"`
}

func (x *BrokersFilter) Reset() {
	*x = BrokersFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrokersFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokersFilter) ProtoMessage() {}

func (x *BrokersFilter) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokersFilter.ProtoReflect.Descriptor instead.
func (*BrokersFilter) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{8}
}

func (x *BrokersFilter) GetBroker() []commons.Brokers {
	if x != nil {
		return x.Broker
	}
	return nil
}

type BrokerAccountsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrokerAccountDetails []*BrokerAccountDetails `protobuf:"bytes,1,rep,name=brokerAccountDetails,proto3" json:"brokerAccountDetails,omitempty"`
}

func (x *BrokerAccountsList) Reset() {
	*x = BrokerAccountsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrokerAccountsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerAccountsList) ProtoMessage() {}

func (x *BrokerAccountsList) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerAccountsList.ProtoReflect.Descriptor instead.
func (*BrokerAccountsList) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{9}
}

func (x *BrokerAccountsList) GetBrokerAccountDetails() []*BrokerAccountDetails {
	if x != nil {
		return x.BrokerAccountDetails
	}
	return nil
}

type BrokerAccountDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string              `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Broker      commons.Brokers     `protobuf:"varint,2,opt,name=broker,proto3,enum=rabex.api.commons.Brokers" json:"broker,omitempty"`
	Asset       commons.Assets      `protobuf:"varint,3,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	SubAccounts []*BrokerSubAccount `protobuf:"bytes,4,rep,name=subAccounts,proto3" json:"subAccounts,omitempty"`
}

func (x *BrokerAccountDetails) Reset() {
	*x = BrokerAccountDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrokerAccountDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerAccountDetails) ProtoMessage() {}

func (x *BrokerAccountDetails) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerAccountDetails.ProtoReflect.Descriptor instead.
func (*BrokerAccountDetails) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{10}
}

func (x *BrokerAccountDetails) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BrokerAccountDetails) GetBroker() commons.Brokers {
	if x != nil {
		return x.Broker
	}
	return commons.Brokers(0)
}

func (x *BrokerAccountDetails) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *BrokerAccountDetails) GetSubAccounts() []*BrokerSubAccount {
	if x != nil {
		return x.SubAccounts
	}
	return nil
}

type BrokerSubAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid             string             `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	NetBalance       string             `protobuf:"bytes,2,opt,name=netBalance,proto3" json:"netBalance,omitempty"`
	GrossBalance     string             `protobuf:"bytes,3,opt,name=grossBalance,proto3" json:"grossBalance,omitempty"`
	Issuer           BrokerWalletIssuer `protobuf:"varint,4,opt,name=issuer,proto3,enum=rabex.api.warehouse.BrokerWalletIssuer" json:"issuer,omitempty"`
	TreasuryAccounts []*TreasuryAccount `protobuf:"bytes,5,rep,name=treasuryAccounts,proto3" json:"treasuryAccounts,omitempty"`
}

func (x *BrokerSubAccount) Reset() {
	*x = BrokerSubAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrokerSubAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerSubAccount) ProtoMessage() {}

func (x *BrokerSubAccount) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerSubAccount.ProtoReflect.Descriptor instead.
func (*BrokerSubAccount) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{11}
}

func (x *BrokerSubAccount) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BrokerSubAccount) GetNetBalance() string {
	if x != nil {
		return x.NetBalance
	}
	return ""
}

func (x *BrokerSubAccount) GetGrossBalance() string {
	if x != nil {
		return x.GrossBalance
	}
	return ""
}

func (x *BrokerSubAccount) GetIssuer() BrokerWalletIssuer {
	if x != nil {
		return x.Issuer
	}
	return BrokerWalletIssuer_Unspecified
}

func (x *BrokerSubAccount) GetTreasuryAccounts() []*TreasuryAccount {
	if x != nil {
		return x.TreasuryAccounts
	}
	return nil
}

type TotalAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset commons.Assets `protobuf:"varint,1,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	Total string         `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *TotalAccount) Reset() {
	*x = TotalAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalAccount) ProtoMessage() {}

func (x *TotalAccount) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalAccount.ProtoReflect.Descriptor instead.
func (*TotalAccount) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{12}
}

func (x *TotalAccount) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *TotalAccount) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

type TotalAccounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*TotalAccount `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *TotalAccounts) Reset() {
	*x = TotalAccounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalAccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalAccounts) ProtoMessage() {}

func (x *TotalAccounts) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalAccounts.ProtoReflect.Descriptor instead.
func (*TotalAccounts) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{13}
}

func (x *TotalAccounts) GetAccounts() []*TotalAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type FilterParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FilterParam) Reset() {
	*x = FilterParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_admin_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterParam) ProtoMessage() {}

func (x *FilterParam) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_admin_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterParam.ProtoReflect.Descriptor instead.
func (*FilterParam) Descriptor() ([]byte, []int) {
	return file_warehouse_admin_messages_proto_rawDescGZIP(), []int{2, 0}
}

func (x *FilterParam) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *FilterParam) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_warehouse_admin_messages_proto protoreflect.FileDescriptor

var file_warehouse_admin_messages_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x18, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x11,
	0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x61, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x46, 0x69, 0x61, 0x74, 0x57, 0x69, 0x74, 0x68, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x62, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e,
	0x22, 0x76, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x05, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x61, 0x62, 0x65,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x1a, 0x33, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x1d, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x62, 0x65,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x61,
	0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xbb, 0x02, 0x0a, 0x1c, 0x42, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x61,
	0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x06,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52,
	0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0xaf, 0x02, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x72, 0x61,
	0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x6d, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x22, 0x9d, 0x01, 0x0a, 0x0a, 0x4e, 0x65,
	0x77, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x35, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x61, 0x62, 0x65,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x67, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x67, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x67, 0x65,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0xb7, 0x01, 0x0a, 0x0f, 0x4e, 0x65,
	0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2f, 0x0a,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72,
	0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x35,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x46, 0x65, 0x65, 0x22, 0x43, 0x0a, 0x0d, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73,
	0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x22, 0x73, 0x0a, 0x12, 0x42, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5d,
	0x0a, 0x14, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72,
	0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x14, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xd8, 0x01,
	0x0a, 0x14, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x61, 0x62,
	0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x2f,
	0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x47, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x73, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xfd, 0x01, 0x0a, 0x10, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x06,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x10, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x10, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x55, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x4e, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x3d, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x42,
	0x22, 0x5a, 0x20, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x3b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_warehouse_admin_messages_proto_rawDescOnce sync.Once
	file_warehouse_admin_messages_proto_rawDescData = file_warehouse_admin_messages_proto_rawDesc
)

func file_warehouse_admin_messages_proto_rawDescGZIP() []byte {
	file_warehouse_admin_messages_proto_rawDescOnce.Do(func() {
		file_warehouse_admin_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_warehouse_admin_messages_proto_rawDescData)
	})
	return file_warehouse_admin_messages_proto_rawDescData
}

var file_warehouse_admin_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_warehouse_admin_messages_proto_goTypes = []interface{}{
	(*ManualFiatDeposit)(nil),             // 0: rabex.api.warehouse.ManualFiatDeposit
	(*ManualFiatWithrawalRequest)(nil),    // 1: rabex.api.warehouse.ManualFiatWithrawalRequest
	(*Filter)(nil),                        // 2: rabex.api.warehouse.Filter
	(*BrokerWarehouseAccountRequest)(nil), // 3: rabex.api.warehouse.BrokerWarehouseAccountRequest
	(*BrokerTreasuryAccountRequest)(nil),  // 4: rabex.api.warehouse.BrokerTreasuryAccountRequest
	(*NewAsset)(nil),                      // 5: rabex.api.warehouse.NewAsset
	(*NewNetwork)(nil),                    // 6: rabex.api.warehouse.NewNetwork
	(*NewAssetNetwork)(nil),               // 7: rabex.api.warehouse.NewAssetNetwork
	(*BrokersFilter)(nil),                 // 8: rabex.api.warehouse.BrokersFilter
	(*BrokerAccountsList)(nil),            // 9: rabex.api.warehouse.BrokerAccountsList
	(*BrokerAccountDetails)(nil),          // 10: rabex.api.warehouse.BrokerAccountDetails
	(*BrokerSubAccount)(nil),              // 11: rabex.api.warehouse.BrokerSubAccount
	(*TotalAccount)(nil),                  // 12: rabex.api.warehouse.TotalAccount
	(*TotalAccounts)(nil),                 // 13: rabex.api.warehouse.TotalAccounts
	(*FilterParam)(nil),                   // 14: rabex.api.warehouse.Filter.param
	(commons.Assets)(0),                   // 15: rabex.api.commons.Assets
	(commons.Brokers)(0),                  // 16: rabex.api.commons.Brokers
	(commons.Networks)(0),                 // 17: rabex.api.commons.Networks
	(BrokerWalletIssuer)(0),               // 18: rabex.api.warehouse.BrokerWalletIssuer
	(AssetType)(0),                        // 19: rabex.api.warehouse.AssetType
	(*TreasuryAccount)(nil),               // 20: rabex.api.warehouse.TreasuryAccount
}
var file_warehouse_admin_messages_proto_depIdxs = []int32{
	14, // 0: rabex.api.warehouse.Filter.Param:type_name -> rabex.api.warehouse.Filter.param
	15, // 1: rabex.api.warehouse.BrokerWarehouseAccountRequest.asset:type_name -> rabex.api.commons.Assets
	16, // 2: rabex.api.warehouse.BrokerWarehouseAccountRequest.broker:type_name -> rabex.api.commons.Brokers
	17, // 3: rabex.api.warehouse.BrokerTreasuryAccountRequest.network:type_name -> rabex.api.commons.Networks
	15, // 4: rabex.api.warehouse.BrokerTreasuryAccountRequest.asset:type_name -> rabex.api.commons.Assets
	16, // 5: rabex.api.warehouse.BrokerTreasuryAccountRequest.broker:type_name -> rabex.api.commons.Brokers
	18, // 6: rabex.api.warehouse.BrokerTreasuryAccountRequest.issuer:type_name -> rabex.api.warehouse.BrokerWalletIssuer
	15, // 7: rabex.api.warehouse.NewAsset.asset:type_name -> rabex.api.commons.Assets
	19, // 8: rabex.api.warehouse.NewAsset.type:type_name -> rabex.api.warehouse.AssetType
	17, // 9: rabex.api.warehouse.NewNetwork.network:type_name -> rabex.api.commons.Networks
	15, // 10: rabex.api.warehouse.NewAssetNetwork.asset:type_name -> rabex.api.commons.Assets
	17, // 11: rabex.api.warehouse.NewAssetNetwork.network:type_name -> rabex.api.commons.Networks
	16, // 12: rabex.api.warehouse.BrokersFilter.broker:type_name -> rabex.api.commons.Brokers
	10, // 13: rabex.api.warehouse.BrokerAccountsList.brokerAccountDetails:type_name -> rabex.api.warehouse.BrokerAccountDetails
	16, // 14: rabex.api.warehouse.BrokerAccountDetails.broker:type_name -> rabex.api.commons.Brokers
	15, // 15: rabex.api.warehouse.BrokerAccountDetails.asset:type_name -> rabex.api.commons.Assets
	11, // 16: rabex.api.warehouse.BrokerAccountDetails.subAccounts:type_name -> rabex.api.warehouse.BrokerSubAccount
	18, // 17: rabex.api.warehouse.BrokerSubAccount.issuer:type_name -> rabex.api.warehouse.BrokerWalletIssuer
	20, // 18: rabex.api.warehouse.BrokerSubAccount.treasuryAccounts:type_name -> rabex.api.warehouse.TreasuryAccount
	15, // 19: rabex.api.warehouse.TotalAccount.asset:type_name -> rabex.api.commons.Assets
	12, // 20: rabex.api.warehouse.TotalAccounts.accounts:type_name -> rabex.api.warehouse.TotalAccount
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_warehouse_admin_messages_proto_init() }
func file_warehouse_admin_messages_proto_init() {
	if File_warehouse_admin_messages_proto != nil {
		return
	}
	file_warehouse_enums_proto_init()
	file_warehouse_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_warehouse_admin_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualFiatDeposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualFiatWithrawalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrokerWarehouseAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrokerTreasuryAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAssetNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrokersFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrokerAccountsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrokerAccountDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrokerSubAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalAccounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_admin_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_warehouse_admin_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_warehouse_admin_messages_proto_goTypes,
		DependencyIndexes: file_warehouse_admin_messages_proto_depIdxs,
		MessageInfos:      file_warehouse_admin_messages_proto_msgTypes,
	}.Build()
	File_warehouse_admin_messages_proto = out.File
	file_warehouse_admin_messages_proto_rawDesc = nil
	file_warehouse_admin_messages_proto_goTypes = nil
	file_warehouse_admin_messages_proto_depIdxs = nil
}
