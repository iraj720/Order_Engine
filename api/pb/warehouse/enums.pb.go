// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: warehouse/enums.proto

package warehouse

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountType int32

const (
	AccountType_UserAccount   AccountType = 0
	AccountType_BrokerAccount AccountType = 1
	AccountType_SuperAccount  AccountType = 2
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "UserAccount",
		1: "BrokerAccount",
		2: "SuperAccount",
	}
	AccountType_value = map[string]int32{
		"UserAccount":   0,
		"BrokerAccount": 1,
		"SuperAccount":  2,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_warehouse_enums_proto_enumTypes[0].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_warehouse_enums_proto_enumTypes[0]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_warehouse_enums_proto_rawDescGZIP(), []int{0}
}

type AccountStatus int32

const (
	AccountStatus_Active   AccountStatus = 0
	AccountStatus_Deactive AccountStatus = 1
)

// Enum value maps for AccountStatus.
var (
	AccountStatus_name = map[int32]string{
		0: "Active",
		1: "Deactive",
	}
	AccountStatus_value = map[string]int32{
		"Active":   0,
		"Deactive": 1,
	}
)

func (x AccountStatus) Enum() *AccountStatus {
	p := new(AccountStatus)
	*p = x
	return p
}

func (x AccountStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_warehouse_enums_proto_enumTypes[1].Descriptor()
}

func (AccountStatus) Type() protoreflect.EnumType {
	return &file_warehouse_enums_proto_enumTypes[1]
}

func (x AccountStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountStatus.Descriptor instead.
func (AccountStatus) EnumDescriptor() ([]byte, []int) {
	return file_warehouse_enums_proto_rawDescGZIP(), []int{1}
}

type AssetStatus int32

const (
	AssetStatus_Available    AssetStatus = 0
	AssetStatus_InTransition AssetStatus = 1
	AssetStatus_Freezed      AssetStatus = 2
	AssetStatus_Blocked      AssetStatus = 3
)

// Enum value maps for AssetStatus.
var (
	AssetStatus_name = map[int32]string{
		0: "Available",
		1: "InTransition",
		2: "Freezed",
		3: "Blocked",
	}
	AssetStatus_value = map[string]int32{
		"Available":    0,
		"InTransition": 1,
		"Freezed":      2,
		"Blocked":      3,
	}
)

func (x AssetStatus) Enum() *AssetStatus {
	p := new(AssetStatus)
	*p = x
	return p
}

func (x AssetStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_warehouse_enums_proto_enumTypes[2].Descriptor()
}

func (AssetStatus) Type() protoreflect.EnumType {
	return &file_warehouse_enums_proto_enumTypes[2]
}

func (x AssetStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetStatus.Descriptor instead.
func (AssetStatus) EnumDescriptor() ([]byte, []int) {
	return file_warehouse_enums_proto_rawDescGZIP(), []int{2}
}

type AssetType int32

const (
	AssetType_StableCoin AssetType = 0
	AssetType_FiatMoney  AssetType = 1
	AssetType_Crypto     AssetType = 2
)

// Enum value maps for AssetType.
var (
	AssetType_name = map[int32]string{
		0: "StableCoin",
		1: "FiatMoney",
		2: "Crypto",
	}
	AssetType_value = map[string]int32{
		"StableCoin": 0,
		"FiatMoney":  1,
		"Crypto":     2,
	}
)

func (x AssetType) Enum() *AssetType {
	p := new(AssetType)
	*p = x
	return p
}

func (x AssetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetType) Descriptor() protoreflect.EnumDescriptor {
	return file_warehouse_enums_proto_enumTypes[3].Descriptor()
}

func (AssetType) Type() protoreflect.EnumType {
	return &file_warehouse_enums_proto_enumTypes[3]
}

func (x AssetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetType.Descriptor instead.
func (AssetType) EnumDescriptor() ([]byte, []int) {
	return file_warehouse_enums_proto_rawDescGZIP(), []int{3}
}

type WarehouseActionType int32

const (
	WarehouseActionType_Withdraw    WarehouseActionType = 0
	WarehouseActionType_Deposit     WarehouseActionType = 1
	WarehouseActionType_SendFund    WarehouseActionType = 2
	WarehouseActionType_RecieveFund WarehouseActionType = 3
	WarehouseActionType_Expenditure WarehouseActionType = 4
	WarehouseActionType_Commission  WarehouseActionType = 5
	WarehouseActionType_Tax         WarehouseActionType = 6
)

// Enum value maps for WarehouseActionType.
var (
	WarehouseActionType_name = map[int32]string{
		0: "Withdraw",
		1: "Deposit",
		2: "SendFund",
		3: "RecieveFund",
		4: "Expenditure",
		5: "Commission",
		6: "Tax",
	}
	WarehouseActionType_value = map[string]int32{
		"Withdraw":    0,
		"Deposit":     1,
		"SendFund":    2,
		"RecieveFund": 3,
		"Expenditure": 4,
		"Commission":  5,
		"Tax":         6,
	}
)

func (x WarehouseActionType) Enum() *WarehouseActionType {
	p := new(WarehouseActionType)
	*p = x
	return p
}

func (x WarehouseActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WarehouseActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_warehouse_enums_proto_enumTypes[4].Descriptor()
}

func (WarehouseActionType) Type() protoreflect.EnumType {
	return &file_warehouse_enums_proto_enumTypes[4]
}

func (x WarehouseActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WarehouseActionType.Descriptor instead.
func (WarehouseActionType) EnumDescriptor() ([]byte, []int) {
	return file_warehouse_enums_proto_rawDescGZIP(), []int{4}
}

type BrokerWalletIssuer int32

const (
	BrokerWalletIssuer_Unspecified BrokerWalletIssuer = 0
	BrokerWalletIssuer_Mellat      BrokerWalletIssuer = 1
	BrokerWalletIssuer_Melli       BrokerWalletIssuer = 2
	BrokerWalletIssuer_Saman       BrokerWalletIssuer = 3
	BrokerWalletIssuer_Saderat     BrokerWalletIssuer = 4
	BrokerWalletIssuer_Pasargad    BrokerWalletIssuer = 5
	BrokerWalletIssuer_Binance     BrokerWalletIssuer = 51
	BrokerWalletIssuer_TrustWallet BrokerWalletIssuer = 52
	BrokerWalletIssuer_Coinbase    BrokerWalletIssuer = 53
	BrokerWalletIssuer_Trezor      BrokerWalletIssuer = 54
)

// Enum value maps for BrokerWalletIssuer.
var (
	BrokerWalletIssuer_name = map[int32]string{
		0:  "Unspecified",
		1:  "Mellat",
		2:  "Melli",
		3:  "Saman",
		4:  "Saderat",
		5:  "Pasargad",
		51: "Binance",
		52: "TrustWallet",
		53: "Coinbase",
		54: "Trezor",
	}
	BrokerWalletIssuer_value = map[string]int32{
		"Unspecified": 0,
		"Mellat":      1,
		"Melli":       2,
		"Saman":       3,
		"Saderat":     4,
		"Pasargad":    5,
		"Binance":     51,
		"TrustWallet": 52,
		"Coinbase":    53,
		"Trezor":      54,
	}
)

func (x BrokerWalletIssuer) Enum() *BrokerWalletIssuer {
	p := new(BrokerWalletIssuer)
	*p = x
	return p
}

func (x BrokerWalletIssuer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BrokerWalletIssuer) Descriptor() protoreflect.EnumDescriptor {
	return file_warehouse_enums_proto_enumTypes[5].Descriptor()
}

func (BrokerWalletIssuer) Type() protoreflect.EnumType {
	return &file_warehouse_enums_proto_enumTypes[5]
}

func (x BrokerWalletIssuer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BrokerWalletIssuer.Descriptor instead.
func (BrokerWalletIssuer) EnumDescriptor() ([]byte, []int) {
	return file_warehouse_enums_proto_rawDescGZIP(), []int{5}
}

type DepositScenarios int32

const (
	DepositScenarios_AutoApprove   DepositScenarios = 0
	DepositScenarios_AdminApprove  DepositScenarios = 1
	DepositScenarios_Confiscate    DepositScenarios = 2
	DepositScenarios_Freeze        DepositScenarios = 3
	DepositScenarios_Unfreeze      DepositScenarios = 4
	DepositScenarios_ManualDeposit DepositScenarios = 5
	DepositScenarios_RejectPayment DepositScenarios = 6
)

// Enum value maps for DepositScenarios.
var (
	DepositScenarios_name = map[int32]string{
		0: "AutoApprove",
		1: "AdminApprove",
		2: "Confiscate",
		3: "Freeze",
		4: "Unfreeze",
		5: "ManualDeposit",
		6: "RejectPayment",
	}
	DepositScenarios_value = map[string]int32{
		"AutoApprove":   0,
		"AdminApprove":  1,
		"Confiscate":    2,
		"Freeze":        3,
		"Unfreeze":      4,
		"ManualDeposit": 5,
		"RejectPayment": 6,
	}
)

func (x DepositScenarios) Enum() *DepositScenarios {
	p := new(DepositScenarios)
	*p = x
	return p
}

func (x DepositScenarios) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepositScenarios) Descriptor() protoreflect.EnumDescriptor {
	return file_warehouse_enums_proto_enumTypes[6].Descriptor()
}

func (DepositScenarios) Type() protoreflect.EnumType {
	return &file_warehouse_enums_proto_enumTypes[6]
}

func (x DepositScenarios) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepositScenarios.Descriptor instead.
func (DepositScenarios) EnumDescriptor() ([]byte, []int) {
	return file_warehouse_enums_proto_rawDescGZIP(), []int{6}
}

type WithdrawScenarios int32

const (
	WithdrawScenarios_WAutoApprove WithdrawScenarios = 0
)

// Enum value maps for WithdrawScenarios.
var (
	WithdrawScenarios_name = map[int32]string{
		0: "WAutoApprove",
	}
	WithdrawScenarios_value = map[string]int32{
		"WAutoApprove": 0,
	}
)

func (x WithdrawScenarios) Enum() *WithdrawScenarios {
	p := new(WithdrawScenarios)
	*p = x
	return p
}

func (x WithdrawScenarios) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawScenarios) Descriptor() protoreflect.EnumDescriptor {
	return file_warehouse_enums_proto_enumTypes[7].Descriptor()
}

func (WithdrawScenarios) Type() protoreflect.EnumType {
	return &file_warehouse_enums_proto_enumTypes[7]
}

func (x WithdrawScenarios) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawScenarios.Descriptor instead.
func (WithdrawScenarios) EnumDescriptor() ([]byte, []int) {
	return file_warehouse_enums_proto_rawDescGZIP(), []int{7}
}

type WarehouseBalanceActionType int32

const (
	WarehouseBalanceActionType_Sell WarehouseBalanceActionType = 0
	WarehouseBalanceActionType_But  WarehouseBalanceActionType = 1
)

// Enum value maps for WarehouseBalanceActionType.
var (
	WarehouseBalanceActionType_name = map[int32]string{
		0: "Sell",
		1: "But",
	}
	WarehouseBalanceActionType_value = map[string]int32{
		"Sell": 0,
		"But":  1,
	}
)

func (x WarehouseBalanceActionType) Enum() *WarehouseBalanceActionType {
	p := new(WarehouseBalanceActionType)
	*p = x
	return p
}

func (x WarehouseBalanceActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WarehouseBalanceActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_warehouse_enums_proto_enumTypes[8].Descriptor()
}

func (WarehouseBalanceActionType) Type() protoreflect.EnumType {
	return &file_warehouse_enums_proto_enumTypes[8]
}

func (x WarehouseBalanceActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WarehouseBalanceActionType.Descriptor instead.
func (WarehouseBalanceActionType) EnumDescriptor() ([]byte, []int) {
	return file_warehouse_enums_proto_rawDescGZIP(), []int{8}
}

type ExchangeStatus int32

const (
	ExchangeStatus_New          ExchangeStatus = 0
	ExchangeStatus_Pending      ExchangeStatus = 1
	ExchangeStatus_Failed       ExchangeStatus = 2
	ExchangeStatus_Filed        ExchangeStatus = 3
	ExchangeStatus_Cancelled    ExchangeStatus = 4
	ExchangeStatus_Completed    ExchangeStatus = 5
	ExchangeStatus_FailedToSend ExchangeStatus = 6
)

// Enum value maps for ExchangeStatus.
var (
	ExchangeStatus_name = map[int32]string{
		0: "New",
		1: "Pending",
		2: "Failed",
		3: "Filed",
		4: "Cancelled",
		5: "Completed",
		6: "FailedToSend",
	}
	ExchangeStatus_value = map[string]int32{
		"New":          0,
		"Pending":      1,
		"Failed":       2,
		"Filed":        3,
		"Cancelled":    4,
		"Completed":    5,
		"FailedToSend": 6,
	}
)

func (x ExchangeStatus) Enum() *ExchangeStatus {
	p := new(ExchangeStatus)
	*p = x
	return p
}

func (x ExchangeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExchangeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_warehouse_enums_proto_enumTypes[9].Descriptor()
}

func (ExchangeStatus) Type() protoreflect.EnumType {
	return &file_warehouse_enums_proto_enumTypes[9]
}

func (x ExchangeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExchangeStatus.Descriptor instead.
func (ExchangeStatus) EnumDescriptor() ([]byte, []int) {
	return file_warehouse_enums_proto_rawDescGZIP(), []int{9}
}

type ExchangeSide int32

const (
	ExchangeSide_ExchangeBuy  ExchangeSide = 0
	ExchangeSide_ExchangeSell ExchangeSide = 1
)

// Enum value maps for ExchangeSide.
var (
	ExchangeSide_name = map[int32]string{
		0: "ExchangeBuy",
		1: "ExchangeSell",
	}
	ExchangeSide_value = map[string]int32{
		"ExchangeBuy":  0,
		"ExchangeSell": 1,
	}
)

func (x ExchangeSide) Enum() *ExchangeSide {
	p := new(ExchangeSide)
	*p = x
	return p
}

func (x ExchangeSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExchangeSide) Descriptor() protoreflect.EnumDescriptor {
	return file_warehouse_enums_proto_enumTypes[10].Descriptor()
}

func (ExchangeSide) Type() protoreflect.EnumType {
	return &file_warehouse_enums_proto_enumTypes[10]
}

func (x ExchangeSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExchangeSide.Descriptor instead.
func (ExchangeSide) EnumDescriptor() ([]byte, []int) {
	return file_warehouse_enums_proto_rawDescGZIP(), []int{10}
}

var File_warehouse_enums_proto protoreflect.FileDescriptor

var file_warehouse_enums_proto_rawDesc = []byte{
	0x0a, 0x15, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2a, 0x43, 0x0a, 0x0b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x01, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10,
	0x02, 0x2a, 0x29, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x2a, 0x48, 0x0a, 0x0b,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x6e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x10, 0x03, 0x2a, 0x36, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x69,
	0x6e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x69, 0x61, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x10, 0x02, 0x2a, 0x79,
	0x0a, 0x13, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x46, 0x75, 0x6e, 0x64, 0x10, 0x03, 0x12,
	0x0f, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x72, 0x65, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x05,
	0x12, 0x07, 0x0a, 0x03, 0x54, 0x61, 0x78, 0x10, 0x06, 0x2a, 0xa0, 0x01, 0x0a, 0x12, 0x42, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x4d, 0x65, 0x6c, 0x6c, 0x69, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x61, 0x6d, 0x61,
	0x6e, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x61, 0x64, 0x65, 0x72, 0x61, 0x74, 0x10, 0x04,
	0x12, 0x0c, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x61, 0x72, 0x67, 0x61, 0x64, 0x10, 0x05, 0x12, 0x0b,
	0x0a, 0x07, 0x42, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x33, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x10, 0x34, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x10, 0x35, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x72,
	0x65, 0x7a, 0x6f, 0x72, 0x10, 0x36, 0x22, 0x04, 0x08, 0x06, 0x10, 0x32, 0x2a, 0x85, 0x01, 0x0a,
	0x10, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f,
	0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x73, 0x63, 0x61,
	0x74, 0x65, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x10, 0x04, 0x12, 0x11,
	0x0a, 0x0d, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x10,
	0x05, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x10, 0x06, 0x2a, 0x25, 0x0a, 0x11, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x41, 0x75,
	0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x10, 0x00, 0x2a, 0x2f, 0x0a, 0x1a, 0x57,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x65, 0x6c,
	0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x75, 0x74, 0x10, 0x01, 0x2a, 0x6d, 0x0a, 0x0e,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07,
	0x0a, 0x03, 0x4e, 0x65, 0x77, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x54, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x10, 0x06, 0x2a, 0x31, 0x0a, 0x0c, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x64, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x75, 0x79, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x6c, 0x10, 0x01, 0x42, 0x22,
	0x5a, 0x20, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x3b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_warehouse_enums_proto_rawDescOnce sync.Once
	file_warehouse_enums_proto_rawDescData = file_warehouse_enums_proto_rawDesc
)

func file_warehouse_enums_proto_rawDescGZIP() []byte {
	file_warehouse_enums_proto_rawDescOnce.Do(func() {
		file_warehouse_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_warehouse_enums_proto_rawDescData)
	})
	return file_warehouse_enums_proto_rawDescData
}

var file_warehouse_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 11)
var file_warehouse_enums_proto_goTypes = []interface{}{
	(AccountType)(0),                // 0: rabex.api.warehouse.AccountType
	(AccountStatus)(0),              // 1: rabex.api.warehouse.AccountStatus
	(AssetStatus)(0),                // 2: rabex.api.warehouse.AssetStatus
	(AssetType)(0),                  // 3: rabex.api.warehouse.AssetType
	(WarehouseActionType)(0),        // 4: rabex.api.warehouse.WarehouseActionType
	(BrokerWalletIssuer)(0),         // 5: rabex.api.warehouse.BrokerWalletIssuer
	(DepositScenarios)(0),           // 6: rabex.api.warehouse.DepositScenarios
	(WithdrawScenarios)(0),          // 7: rabex.api.warehouse.WithdrawScenarios
	(WarehouseBalanceActionType)(0), // 8: rabex.api.warehouse.WarehouseBalanceActionType
	(ExchangeStatus)(0),             // 9: rabex.api.warehouse.ExchangeStatus
	(ExchangeSide)(0),               // 10: rabex.api.warehouse.ExchangeSide
}
var file_warehouse_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_warehouse_enums_proto_init() }
func file_warehouse_enums_proto_init() {
	if File_warehouse_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_warehouse_enums_proto_rawDesc,
			NumEnums:      11,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_warehouse_enums_proto_goTypes,
		DependencyIndexes: file_warehouse_enums_proto_depIdxs,
		EnumInfos:         file_warehouse_enums_proto_enumTypes,
	}.Build()
	File_warehouse_enums_proto = out.File
	file_warehouse_enums_proto_rawDesc = nil
	file_warehouse_enums_proto_goTypes = nil
	file_warehouse_enums_proto_depIdxs = nil
}
