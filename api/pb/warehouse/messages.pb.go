// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: warehouse/messages.proto

package warehouse

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	commons "rabex/api/pb/commons"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WarehouseReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receipt string `protobuf:"bytes,1,opt,name=receipt,proto3" json:"receipt,omitempty"`
}

func (x *WarehouseReceipt) Reset() {
	*x = WarehouseReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarehouseReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarehouseReceipt) ProtoMessage() {}

func (x *WarehouseReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarehouseReceipt.ProtoReflect.Descriptor instead.
func (*WarehouseReceipt) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{0}
}

func (x *WarehouseReceipt) GetReceipt() string {
	if x != nil {
		return x.Receipt
	}
	return ""
}

type UserAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network commons.Networks `protobuf:"varint,1,opt,name=network,proto3,enum=rabex.api.commons.Networks" json:"network,omitempty"`
	Asset   commons.Assets   `protobuf:"varint,2,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	Broker  commons.Brokers  `protobuf:"varint,3,opt,name=broker,proto3,enum=rabex.api.commons.Brokers" json:"broker,omitempty"`
	Address string           `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Owner   string           `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Type    AccountType      `protobuf:"varint,6,opt,name=type,proto3,enum=rabex.api.warehouse.AccountType" json:"type,omitempty"`
}

func (x *UserAccountRequest) Reset() {
	*x = UserAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountRequest) ProtoMessage() {}

func (x *UserAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountRequest.ProtoReflect.Descriptor instead.
func (*UserAccountRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{1}
}

func (x *UserAccountRequest) GetNetwork() commons.Networks {
	if x != nil {
		return x.Network
	}
	return commons.Networks(0)
}

func (x *UserAccountRequest) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *UserAccountRequest) GetBroker() commons.Brokers {
	if x != nil {
		return x.Broker
	}
	return commons.Brokers(0)
}

func (x *UserAccountRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserAccountRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *UserAccountRequest) GetType() AccountType {
	if x != nil {
		return x.Type
	}
	return AccountType_UserAccount
}

type UserAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *UserAccountResponse) Reset() {
	*x = UserAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountResponse) ProtoMessage() {}

func (x *UserAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountResponse.ProtoReflect.Descriptor instead.
func (*UserAccountResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{2}
}

func (x *UserAccountResponse) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

type AssetLimitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network commons.Networks `protobuf:"varint,1,opt,name=network,proto3,enum=rabex.api.commons.Networks" json:"network,omitempty"`
	Asset   commons.Assets   `protobuf:"varint,2,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
}

func (x *AssetLimitsRequest) Reset() {
	*x = AssetLimitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetLimitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetLimitsRequest) ProtoMessage() {}

func (x *AssetLimitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetLimitsRequest.ProtoReflect.Descriptor instead.
func (*AssetLimitsRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{3}
}

func (x *AssetLimitsRequest) GetNetwork() commons.Networks {
	if x != nil {
		return x.Network
	}
	return commons.Networks(0)
}

func (x *AssetLimitsRequest) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

type LimitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinDeposit  string         `protobuf:"bytes,1,opt,name=minDeposit,proto3" json:"minDeposit,omitempty"`
	MaxDeposit  string         `protobuf:"bytes,2,opt,name=maxDeposit,proto3" json:"maxDeposit,omitempty"`
	MinWithdraw string         `protobuf:"bytes,3,opt,name=minWithdraw,proto3" json:"minWithdraw,omitempty"`
	MaxWithdraw string         `protobuf:"bytes,4,opt,name=maxWithdraw,proto3" json:"maxWithdraw,omitempty"`
	Base        commons.Assets `protobuf:"varint,5,opt,name=base,proto3,enum=rabex.api.commons.Assets" json:"base,omitempty"`
	Decimal     int32          `protobuf:"varint,6,opt,name=decimal,proto3" json:"decimal,omitempty"`
}

func (x *LimitsResponse) Reset() {
	*x = LimitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitsResponse) ProtoMessage() {}

func (x *LimitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitsResponse.ProtoReflect.Descriptor instead.
func (*LimitsResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{4}
}

func (x *LimitsResponse) GetMinDeposit() string {
	if x != nil {
		return x.MinDeposit
	}
	return ""
}

func (x *LimitsResponse) GetMaxDeposit() string {
	if x != nil {
		return x.MaxDeposit
	}
	return ""
}

func (x *LimitsResponse) GetMinWithdraw() string {
	if x != nil {
		return x.MinWithdraw
	}
	return ""
}

func (x *LimitsResponse) GetMaxWithdraw() string {
	if x != nil {
		return x.MaxWithdraw
	}
	return ""
}

func (x *LimitsResponse) GetBase() commons.Assets {
	if x != nil {
		return x.Base
	}
	return commons.Assets(0)
}

func (x *LimitsResponse) GetDecimal() int32 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

type BalancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner  string          `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Broker commons.Brokers `protobuf:"varint,2,opt,name=broker,proto3,enum=rabex.api.commons.Brokers" json:"broker,omitempty"`
}

func (x *BalancesRequest) Reset() {
	*x = BalancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancesRequest) ProtoMessage() {}

func (x *BalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancesRequest.ProtoReflect.Descriptor instead.
func (*BalancesRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{5}
}

func (x *BalancesRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *BalancesRequest) GetBroker() commons.Brokers {
	if x != nil {
		return x.Broker
	}
	return commons.Brokers(0)
}

type BalancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance []*Balance `protobuf:"bytes,1,rep,name=balance,proto3" json:"balance,omitempty"`
}

func (x *BalancesResponse) Reset() {
	*x = BalancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancesResponse) ProtoMessage() {}

func (x *BalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancesResponse.ProtoReflect.Descriptor instead.
func (*BalancesResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{6}
}

func (x *BalancesResponse) GetBalance() []*Balance {
	if x != nil {
		return x.Balance
	}
	return nil
}

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset     commons.Assets   `protobuf:"varint,1,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	Network   commons.Networks `protobuf:"varint,2,opt,name=network,proto3,enum=rabex.api.commons.Networks" json:"network,omitempty"`
	Gross     string           `protobuf:"bytes,3,opt,name=gross,proto3" json:"gross,omitempty"`
	Net       string           `protobuf:"bytes,4,opt,name=net,proto3" json:"net,omitempty"`
	AccountId string           `protobuf:"bytes,5,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Broker    commons.Brokers  `protobuf:"varint,6,opt,name=broker,proto3,enum=rabex.api.commons.Brokers" json:"broker,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{7}
}

func (x *Balance) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *Balance) GetNetwork() commons.Networks {
	if x != nil {
		return x.Network
	}
	return commons.Networks(0)
}

func (x *Balance) GetGross() string {
	if x != nil {
		return x.Gross
	}
	return ""
}

func (x *Balance) GetNet() string {
	if x != nil {
		return x.Net
	}
	return ""
}

func (x *Balance) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Balance) GetBroker() commons.Brokers {
	if x != nil {
		return x.Broker
	}
	return commons.Brokers(0)
}

type DepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To      string           `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Amount  string           `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Asset   commons.Assets   `protobuf:"varint,3,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	Broker  commons.Brokers  `protobuf:"varint,4,opt,name=broker,proto3,enum=rabex.api.commons.Brokers" json:"broker,omitempty"`
	Network commons.Networks `protobuf:"varint,5,opt,name=network,proto3,enum=rabex.api.commons.Networks" json:"network,omitempty"`
}

func (x *DepositRequest) Reset() {
	*x = DepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositRequest) ProtoMessage() {}

func (x *DepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositRequest.ProtoReflect.Descriptor instead.
func (*DepositRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{8}
}

func (x *DepositRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *DepositRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *DepositRequest) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *DepositRequest) GetBroker() commons.Brokers {
	if x != nil {
		return x.Broker
	}
	return commons.Brokers(0)
}

func (x *DepositRequest) GetNetwork() commons.Networks {
	if x != nil {
		return x.Network
	}
	return commons.Networks(0)
}

type DepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayUrl string `protobuf:"bytes,1,opt,name=payUrl,proto3" json:"payUrl,omitempty"`
	Pass   string `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
}

func (x *DepositResponse) Reset() {
	*x = DepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositResponse) ProtoMessage() {}

func (x *DepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositResponse.ProtoReflect.Descriptor instead.
func (*DepositResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{9}
}

func (x *DepositResponse) GetPayUrl() string {
	if x != nil {
		return x.PayUrl
	}
	return ""
}

func (x *DepositResponse) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

type DepositFundsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pass            string                `protobuf:"bytes,1,opt,name=pass,proto3" json:"pass,omitempty"`
	InvoiceId       string                `protobuf:"bytes,2,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	Status          commons.DepositStatus `protobuf:"varint,3,opt,name=status,proto3,enum=rabex.api.commons.deposit.DepositStatus" json:"status,omitempty"`
	Amount          string                `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	From            string                `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	TreasuryAddress string                `protobuf:"bytes,6,opt,name=treasuryAddress,proto3" json:"treasuryAddress,omitempty"`
	Network         commons.Networks      `protobuf:"varint,7,opt,name=network,proto3,enum=rabex.api.commons.Networks" json:"network,omitempty"`
}

func (x *DepositFundsEvent) Reset() {
	*x = DepositFundsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFundsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFundsEvent) ProtoMessage() {}

func (x *DepositFundsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFundsEvent.ProtoReflect.Descriptor instead.
func (*DepositFundsEvent) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{10}
}

func (x *DepositFundsEvent) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *DepositFundsEvent) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *DepositFundsEvent) GetStatus() commons.DepositStatus {
	if x != nil {
		return x.Status
	}
	return commons.DepositStatus(0)
}

func (x *DepositFundsEvent) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *DepositFundsEvent) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *DepositFundsEvent) GetTreasuryAddress() string {
	if x != nil {
		return x.TreasuryAddress
	}
	return ""
}

func (x *DepositFundsEvent) GetNetwork() commons.Networks {
	if x != nil {
		return x.Network
	}
	return commons.Networks(0)
}

type ListDepositsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositData []*DepositData `protobuf:"bytes,1,rep,name=depositData,proto3" json:"depositData,omitempty"`
}

func (x *ListDepositsResponse) Reset() {
	*x = ListDepositsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepositsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepositsResponse) ProtoMessage() {}

func (x *ListDepositsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepositsResponse.ProtoReflect.Descriptor instead.
func (*ListDepositsResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{11}
}

func (x *ListDepositsResponse) GetDepositData() []*DepositData {
	if x != nil {
		return x.DepositData
	}
	return nil
}

type SearchFiatDepositsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestUUID string                  `protobuf:"bytes,1,opt,name=requestUUID,proto3" json:"requestUUID,omitempty"` // transaction table row uuid
	CardNo      string                  `protobuf:"bytes,2,opt,name=cardNo,proto3" json:"cardNo,omitempty"`
	Status      []commons.DepositStatus `protobuf:"varint,3,rep,packed,name=status,proto3,enum=rabex.api.commons.deposit.DepositStatus" json:"status,omitempty"`
	StartDate   *timestamppb.Timestamp  `protobuf:"bytes,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate     *timestamppb.Timestamp  `protobuf:"bytes,5,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Amount      string                  `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Owner       string                  `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	InvoiceId   string                  `protobuf:"bytes,8,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	Count       int32                   `protobuf:"varint,9,opt,name=count,proto3" json:"count,omitempty"` // for pagination
	Page        int32                   `protobuf:"varint,10,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *SearchFiatDepositsRequest) Reset() {
	*x = SearchFiatDepositsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFiatDepositsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFiatDepositsRequest) ProtoMessage() {}

func (x *SearchFiatDepositsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFiatDepositsRequest.ProtoReflect.Descriptor instead.
func (*SearchFiatDepositsRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{12}
}

func (x *SearchFiatDepositsRequest) GetRequestUUID() string {
	if x != nil {
		return x.RequestUUID
	}
	return ""
}

func (x *SearchFiatDepositsRequest) GetCardNo() string {
	if x != nil {
		return x.CardNo
	}
	return ""
}

func (x *SearchFiatDepositsRequest) GetStatus() []commons.DepositStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SearchFiatDepositsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *SearchFiatDepositsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *SearchFiatDepositsRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SearchFiatDepositsRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *SearchFiatDepositsRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *SearchFiatDepositsRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SearchFiatDepositsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type DepositData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	RequestUUID string                 `protobuf:"bytes,2,opt,name=requestUUID,proto3" json:"requestUUID,omitempty"` // uuid (police uuid)
	Asset       commons.Assets         `protobuf:"varint,3,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	Network     commons.Networks       `protobuf:"varint,4,opt,name=network,proto3,enum=rabex.api.commons.Networks" json:"network,omitempty"`
	Amount      string                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Status      commons.DepositStatus  `protobuf:"varint,6,opt,name=status,proto3,enum=rabex.api.commons.deposit.DepositStatus" json:"status,omitempty"`
	InvoiceId   string                 `protobuf:"bytes,7,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"` // human readable
	Owner       string                 `protobuf:"bytes,8,opt,name=owner,proto3" json:"owner,omitempty"`
	CardNo      string                 `protobuf:"bytes,9,opt,name=cardNo,proto3" json:"cardNo,omitempty"`
}

func (x *DepositData) Reset() {
	*x = DepositData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositData) ProtoMessage() {}

func (x *DepositData) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositData.ProtoReflect.Descriptor instead.
func (*DepositData) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{13}
}

func (x *DepositData) GetTimeStamp() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeStamp
	}
	return nil
}

func (x *DepositData) GetRequestUUID() string {
	if x != nil {
		return x.RequestUUID
	}
	return ""
}

func (x *DepositData) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *DepositData) GetNetwork() commons.Networks {
	if x != nil {
		return x.Network
	}
	return commons.Networks(0)
}

func (x *DepositData) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *DepositData) GetStatus() commons.DepositStatus {
	if x != nil {
		return x.Status
	}
	return commons.DepositStatus(0)
}

func (x *DepositData) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *DepositData) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *DepositData) GetCardNo() string {
	if x != nil {
		return x.CardNo
	}
	return ""
}

type SearchFiatDepositsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*DepositData `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	Count   int32          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Page    int32          `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *SearchFiatDepositsResponse) Reset() {
	*x = SearchFiatDepositsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFiatDepositsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFiatDepositsResponse) ProtoMessage() {}

func (x *SearchFiatDepositsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFiatDepositsResponse.ProtoReflect.Descriptor instead.
func (*SearchFiatDepositsResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{14}
}

func (x *SearchFiatDepositsResponse) GetPayload() []*DepositData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SearchFiatDepositsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SearchFiatDepositsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ApproveDepositsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUIDs []string `protobuf:"bytes,1,rep,name=UUIDs,proto3" json:"UUIDs,omitempty"`
}

func (x *ApproveDepositsRequest) Reset() {
	*x = ApproveDepositsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveDepositsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveDepositsRequest) ProtoMessage() {}

func (x *ApproveDepositsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveDepositsRequest.ProtoReflect.Descriptor instead.
func (*ApproveDepositsRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{15}
}

func (x *ApproveDepositsRequest) GetUUIDs() []string {
	if x != nil {
		return x.UUIDs
	}
	return nil
}

type ApproveDepositsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ApproveDepositsResponse) Reset() {
	*x = ApproveDepositsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveDepositsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveDepositsResponse) ProtoMessage() {}

func (x *ApproveDepositsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveDepositsResponse.ProtoReflect.Descriptor instead.
func (*ApproveDepositsResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{16}
}

func (x *ApproveDepositsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TakeActionDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action      DepositScenarios `protobuf:"varint,1,opt,name=action,proto3,enum=rabex.api.warehouse.DepositScenarios" json:"action,omitempty"`
	Description string           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	RequestUUID []string         `protobuf:"bytes,3,rep,name=requestUUID,proto3" json:"requestUUID,omitempty"`
}

func (x *TakeActionDepositRequest) Reset() {
	*x = TakeActionDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeActionDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeActionDepositRequest) ProtoMessage() {}

func (x *TakeActionDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeActionDepositRequest.ProtoReflect.Descriptor instead.
func (*TakeActionDepositRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{17}
}

func (x *TakeActionDepositRequest) GetAction() DepositScenarios {
	if x != nil {
		return x.Action
	}
	return DepositScenarios_AutoApprove
}

func (x *TakeActionDepositRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TakeActionDepositRequest) GetRequestUUID() []string {
	if x != nil {
		return x.RequestUUID
	}
	return nil
}

type TakeActionDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TakeActionDepositResponse) Reset() {
	*x = TakeActionDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeActionDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeActionDepositResponse) ProtoMessage() {}

func (x *TakeActionDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeActionDepositResponse.ProtoReflect.Descriptor instead.
func (*TakeActionDepositResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{18}
}

func (x *TakeActionDepositResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From   string          `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To     string          `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount string          `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Asset  commons.Assets  `protobuf:"varint,4,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	Broker commons.Brokers `protobuf:"varint,5,opt,name=broker,proto3,enum=rabex.api.commons.Brokers" json:"broker,omitempty"`
	Iban   string          `protobuf:"bytes,6,opt,name=iban,proto3" json:"iban,omitempty"`
}

func (x *WithdrawRequest) Reset() {
	*x = WithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRequest) ProtoMessage() {}

func (x *WithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRequest.ProtoReflect.Descriptor instead.
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{19}
}

func (x *WithdrawRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *WithdrawRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *WithdrawRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WithdrawRequest) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *WithdrawRequest) GetBroker() commons.Brokers {
	if x != nil {
		return x.Broker
	}
	return commons.Brokers(0)
}

func (x *WithdrawRequest) GetIban() string {
	if x != nil {
		return x.Iban
	}
	return ""
}

type WithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// maybe message is not needed
	Message string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status  commons.WithdrawStatus `protobuf:"varint,2,opt,name=status,proto3,enum=rabex.api.commons.withdraw.WithdrawStatus" json:"status,omitempty"`
}

func (x *WithdrawResponse) Reset() {
	*x = WithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawResponse) ProtoMessage() {}

func (x *WithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawResponse.ProtoReflect.Descriptor instead.
func (*WithdrawResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{20}
}

func (x *WithdrawResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WithdrawResponse) GetStatus() commons.WithdrawStatus {
	if x != nil {
		return x.Status
	}
	return commons.WithdrawStatus(0)
}

type SearchFiatWithdrawalsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string                   `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Iban      string                   `protobuf:"bytes,2,opt,name=iban,proto3" json:"iban,omitempty"`
	Status    []commons.WithdrawStatus `protobuf:"varint,3,rep,packed,name=status,proto3,enum=rabex.api.commons.withdraw.WithdrawStatus" json:"status,omitempty"`
	StartDate *timestamppb.Timestamp   `protobuf:"bytes,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate   *timestamppb.Timestamp   `protobuf:"bytes,5,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Amount    string                   `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Owner     string                   `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	Count     int32                    `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
	Page      int32                    `protobuf:"varint,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *SearchFiatWithdrawalsRequest) Reset() {
	*x = SearchFiatWithdrawalsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFiatWithdrawalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFiatWithdrawalsRequest) ProtoMessage() {}

func (x *SearchFiatWithdrawalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFiatWithdrawalsRequest.ProtoReflect.Descriptor instead.
func (*SearchFiatWithdrawalsRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{21}
}

func (x *SearchFiatWithdrawalsRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *SearchFiatWithdrawalsRequest) GetIban() string {
	if x != nil {
		return x.Iban
	}
	return ""
}

func (x *SearchFiatWithdrawalsRequest) GetStatus() []commons.WithdrawStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SearchFiatWithdrawalsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *SearchFiatWithdrawalsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *SearchFiatWithdrawalsRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SearchFiatWithdrawalsRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *SearchFiatWithdrawalsRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SearchFiatWithdrawalsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type WithdrawalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	RequestUUID string                 `protobuf:"bytes,2,opt,name=requestUUID,proto3" json:"requestUUID,omitempty"` // uuid (police uuid)
	Asset       commons.Assets         `protobuf:"varint,3,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	Network     commons.Networks       `protobuf:"varint,4,opt,name=network,proto3,enum=rabex.api.commons.Networks" json:"network,omitempty"`
	Amount      string                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Status      commons.WithdrawStatus `protobuf:"varint,6,opt,name=status,proto3,enum=rabex.api.commons.withdraw.WithdrawStatus" json:"status,omitempty"`
	InvoiceId   string                 `protobuf:"bytes,7,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"` // human readable
	Owner       string                 `protobuf:"bytes,8,opt,name=owner,proto3" json:"owner,omitempty"`
	Iban        string                 `protobuf:"bytes,9,opt,name=iban,proto3" json:"iban,omitempty"`
}

func (x *WithdrawalData) Reset() {
	*x = WithdrawalData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawalData) ProtoMessage() {}

func (x *WithdrawalData) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawalData.ProtoReflect.Descriptor instead.
func (*WithdrawalData) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{22}
}

func (x *WithdrawalData) GetTimeStamp() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeStamp
	}
	return nil
}

func (x *WithdrawalData) GetRequestUUID() string {
	if x != nil {
		return x.RequestUUID
	}
	return ""
}

func (x *WithdrawalData) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *WithdrawalData) GetNetwork() commons.Networks {
	if x != nil {
		return x.Network
	}
	return commons.Networks(0)
}

func (x *WithdrawalData) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WithdrawalData) GetStatus() commons.WithdrawStatus {
	if x != nil {
		return x.Status
	}
	return commons.WithdrawStatus(0)
}

func (x *WithdrawalData) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *WithdrawalData) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *WithdrawalData) GetIban() string {
	if x != nil {
		return x.Iban
	}
	return ""
}

type SearchFiatWithdrawalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*WithdrawalData `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	Count   int32             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Page    int32             `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *SearchFiatWithdrawalsResponse) Reset() {
	*x = SearchFiatWithdrawalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFiatWithdrawalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFiatWithdrawalsResponse) ProtoMessage() {}

func (x *SearchFiatWithdrawalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFiatWithdrawalsResponse.ProtoReflect.Descriptor instead.
func (*SearchFiatWithdrawalsResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{23}
}

func (x *SearchFiatWithdrawalsResponse) GetPayload() []*WithdrawalData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SearchFiatWithdrawalsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SearchFiatWithdrawalsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type WithdrawalDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   string                 `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Status      commons.WithdrawStatus `protobuf:"varint,2,opt,name=status,proto3,enum=rabex.api.commons.withdraw.WithdrawStatus" json:"status,omitempty"`
	CreatedTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	LastUpdate  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	InvoiceId   string                 `protobuf:"bytes,5,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	Ip          string                 `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	DeviceInfo  string                 `protobuf:"bytes,7,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
}

func (x *WithdrawalDetailsResponse) Reset() {
	*x = WithdrawalDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawalDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawalDetailsResponse) ProtoMessage() {}

func (x *WithdrawalDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawalDetailsResponse.ProtoReflect.Descriptor instead.
func (*WithdrawalDetailsResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{24}
}

func (x *WithdrawalDetailsResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *WithdrawalDetailsResponse) GetStatus() commons.WithdrawStatus {
	if x != nil {
		return x.Status
	}
	return commons.WithdrawStatus(0)
}

func (x *WithdrawalDetailsResponse) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *WithdrawalDetailsResponse) GetLastUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

func (x *WithdrawalDetailsResponse) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *WithdrawalDetailsResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *WithdrawalDetailsResponse) GetDeviceInfo() string {
	if x != nil {
		return x.DeviceInfo
	}
	return ""
}

// withdraw event
type WithdrawEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pass            string                 `protobuf:"bytes,1,opt,name=pass,proto3" json:"pass,omitempty"`
	InvoiceId       string                 `protobuf:"bytes,2,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	Status          commons.WithdrawStatus `protobuf:"varint,3,opt,name=status,proto3,enum=rabex.api.commons.withdraw.WithdrawStatus" json:"status,omitempty"`
	Amount          string                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Network         commons.Networks       `protobuf:"varint,5,opt,name=network,proto3,enum=rabex.api.commons.Networks" json:"network,omitempty"`
	TreasuryAddress string                 `protobuf:"bytes,6,opt,name=treasuryAddress,proto3" json:"treasuryAddress,omitempty"`
}

func (x *WithdrawEvent) Reset() {
	*x = WithdrawEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawEvent) ProtoMessage() {}

func (x *WithdrawEvent) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawEvent.ProtoReflect.Descriptor instead.
func (*WithdrawEvent) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{25}
}

func (x *WithdrawEvent) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *WithdrawEvent) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *WithdrawEvent) GetStatus() commons.WithdrawStatus {
	if x != nil {
		return x.Status
	}
	return commons.WithdrawStatus(0)
}

func (x *WithdrawEvent) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WithdrawEvent) GetNetwork() commons.Networks {
	if x != nil {
		return x.Network
	}
	return commons.Networks(0)
}

func (x *WithdrawEvent) GetTreasuryAddress() string {
	if x != nil {
		return x.TreasuryAddress
	}
	return ""
}

// Correcting Request
type CorrectingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pass   string                 `protobuf:"bytes,1,opt,name=pass,proto3" json:"pass,omitempty"`
	Amount string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Status commons.WithdrawStatus `protobuf:"varint,3,opt,name=status,proto3,enum=rabex.api.commons.withdraw.WithdrawStatus" json:"status,omitempty"`
}

func (x *CorrectingRequest) Reset() {
	*x = CorrectingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CorrectingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorrectingRequest) ProtoMessage() {}

func (x *CorrectingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorrectingRequest.ProtoReflect.Descriptor instead.
func (*CorrectingRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{26}
}

func (x *CorrectingRequest) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *CorrectingRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CorrectingRequest) GetStatus() commons.WithdrawStatus {
	if x != nil {
		return x.Status
	}
	return commons.WithdrawStatus(0)
}

type TransactionDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string                 `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Status           commons.DepositStatus  `protobuf:"varint,2,opt,name=status,proto3,enum=rabex.api.commons.deposit.DepositStatus" json:"status,omitempty"`
	CreatedTime      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	LastUpdate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	InvoiceId        string                 `protobuf:"bytes,5,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	Ip               string                 `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	DeviceInfo       string                 `protobuf:"bytes,7,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	WarehouseJournal []*WarehouseJournal    `protobuf:"bytes,8,rep,name=warehouseJournal,proto3" json:"warehouseJournal,omitempty"`
}

func (x *TransactionDetailsResponse) Reset() {
	*x = TransactionDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetailsResponse) ProtoMessage() {}

func (x *TransactionDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetailsResponse.ProtoReflect.Descriptor instead.
func (*TransactionDetailsResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{27}
}

func (x *TransactionDetailsResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *TransactionDetailsResponse) GetStatus() commons.DepositStatus {
	if x != nil {
		return x.Status
	}
	return commons.DepositStatus(0)
}

func (x *TransactionDetailsResponse) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *TransactionDetailsResponse) GetLastUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

func (x *TransactionDetailsResponse) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *TransactionDetailsResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *TransactionDetailsResponse) GetDeviceInfo() string {
	if x != nil {
		return x.DeviceInfo
	}
	return ""
}

func (x *TransactionDetailsResponse) GetWarehouseJournal() []*WarehouseJournal {
	if x != nil {
		return x.WarehouseJournal
	}
	return nil
}

type WarehouseJournal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount      string      `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Balance     string      `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	AccountType AccountType `protobuf:"varint,3,opt,name=accountType,proto3,enum=rabex.api.warehouse.AccountType" json:"accountType,omitempty"`
	Status      AssetStatus `protobuf:"varint,4,opt,name=status,proto3,enum=rabex.api.warehouse.AssetStatus" json:"status,omitempty"`
}

func (x *WarehouseJournal) Reset() {
	*x = WarehouseJournal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarehouseJournal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarehouseJournal) ProtoMessage() {}

func (x *WarehouseJournal) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarehouseJournal.ProtoReflect.Descriptor instead.
func (*WarehouseJournal) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{28}
}

func (x *WarehouseJournal) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WarehouseJournal) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *WarehouseJournal) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_UserAccount
}

func (x *WarehouseJournal) GetStatus() AssetStatus {
	if x != nil {
		return x.Status
	}
	return AssetStatus_Available
}

type TreasuryAccounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TreasuryAccounts []*TreasuryAccount `protobuf:"bytes,1,rep,name=treasuryAccounts,proto3" json:"treasuryAccounts,omitempty"`
}

func (x *TreasuryAccounts) Reset() {
	*x = TreasuryAccounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasuryAccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasuryAccounts) ProtoMessage() {}

func (x *TreasuryAccounts) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasuryAccounts.ProtoReflect.Descriptor instead.
func (*TreasuryAccounts) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{29}
}

func (x *TreasuryAccounts) GetTreasuryAccounts() []*TreasuryAccount {
	if x != nil {
		return x.TreasuryAccounts
	}
	return nil
}

type TreasuryAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string           `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Balance   string           `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Asset     commons.Assets   `protobuf:"varint,3,opt,name=asset,proto3,enum=rabex.api.commons.Assets" json:"asset,omitempty"`
	Network   commons.Networks `protobuf:"varint,4,opt,name=network,proto3,enum=rabex.api.commons.Networks" json:"network,omitempty"`
	Broker    commons.Brokers  `protobuf:"varint,5,opt,name=broker,proto3,enum=rabex.api.commons.Brokers" json:"broker,omitempty"`
}

func (x *TreasuryAccount) Reset() {
	*x = TreasuryAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warehouse_messages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasuryAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasuryAccount) ProtoMessage() {}

func (x *TreasuryAccount) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_messages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasuryAccount.ProtoReflect.Descriptor instead.
func (*TreasuryAccount) Descriptor() ([]byte, []int) {
	return file_warehouse_messages_proto_rawDescGZIP(), []int{30}
}

func (x *TreasuryAccount) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TreasuryAccount) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *TreasuryAccount) GetAsset() commons.Assets {
	if x != nil {
		return x.Asset
	}
	return commons.Assets(0)
}

func (x *TreasuryAccount) GetNetwork() commons.Networks {
	if x != nil {
		return x.Network
	}
	return commons.Networks(0)
}

func (x *TreasuryAccount) GetBroker() commons.Brokers {
	if x != nil {
		return x.Broker
	}
	return commons.Brokers(0)
}

var File_warehouse_messages_proto protoreflect.FileDescriptor

var file_warehouse_messages_proto_rawDesc = []byte{
	0x0a, 0x18, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x72, 0x61, 0x62, 0x65,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x1a,
	0x15, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x10, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x22, 0x96, 0x02, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73,
	0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x29,
	0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x7c, 0x0a, 0x12, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69,
	0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61,
	0x78, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x61, 0x78, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x61, 0x78, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x2d,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72,
	0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x22, 0x5b, 0x0a, 0x0f, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x32, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x06, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x10, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x61, 0x62, 0x65,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0xeb, 0x01, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x61,
	0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x35, 0x0a,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x61, 0x62,
	0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x22, 0xd4,
	0x01, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x61, 0x62,
	0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x35,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x3d, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x55,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x79, 0x55, 0x72, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x73, 0x73, 0x22, 0x94, 0x02, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x46, 0x75, 0x6e, 0x64, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x72,
	0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x5a, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xfd, 0x02, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x46, 0x69, 0x61, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x4e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x12,
	0x40, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xf7, 0x02, 0x0a, 0x0b, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2e,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72,
	0x64, 0x4e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x4e,
	0x6f, 0x22, 0x82, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x61, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x55, 0x55, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x55, 0x55, 0x49, 0x44, 0x73, 0x22, 0x33, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x18,
	0x54, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x19, 0x54,
	0x61, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x0f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x05, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x52,
	0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x22, 0x70, 0x0a, 0x10, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x72, 0x61, 0x62, 0x65,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x77, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xdc, 0x02,
	0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x61, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x62, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e,
	0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xf8, 0x02, 0x0a,
	0x0e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x62,
	0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x72, 0x61,
	0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x1d, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x46, 0x69, 0x61, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x61, 0x62,
	0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0xc5, 0x02, 0x0a, 0x19, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x42,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a,
	0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3a, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xfe, 0x01, 0x0a, 0x0d, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x42,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a,
	0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x61,
	0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x11,
	0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e,
	0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x97, 0x03, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x40,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a, 0x10, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x10, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x22, 0xc2, 0x01, 0x0a, 0x10,
	0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x64, 0x0a, 0x10, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x50, 0x0a, 0x10, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x10, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x05, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x61, 0x62,
	0x65, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x42, 0x22,
	0x5a, 0x20, 0x72, 0x61, 0x62, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x3b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_warehouse_messages_proto_rawDescOnce sync.Once
	file_warehouse_messages_proto_rawDescData = file_warehouse_messages_proto_rawDesc
)

func file_warehouse_messages_proto_rawDescGZIP() []byte {
	file_warehouse_messages_proto_rawDescOnce.Do(func() {
		file_warehouse_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_warehouse_messages_proto_rawDescData)
	})
	return file_warehouse_messages_proto_rawDescData
}

var file_warehouse_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_warehouse_messages_proto_goTypes = []interface{}{
	(*WarehouseReceipt)(nil),              // 0: rabex.api.warehouse.WarehouseReceipt
	(*UserAccountRequest)(nil),            // 1: rabex.api.warehouse.UserAccountRequest
	(*UserAccountResponse)(nil),           // 2: rabex.api.warehouse.UserAccountResponse
	(*AssetLimitsRequest)(nil),            // 3: rabex.api.warehouse.AssetLimitsRequest
	(*LimitsResponse)(nil),                // 4: rabex.api.warehouse.LimitsResponse
	(*BalancesRequest)(nil),               // 5: rabex.api.warehouse.BalancesRequest
	(*BalancesResponse)(nil),              // 6: rabex.api.warehouse.BalancesResponse
	(*Balance)(nil),                       // 7: rabex.api.warehouse.Balance
	(*DepositRequest)(nil),                // 8: rabex.api.warehouse.DepositRequest
	(*DepositResponse)(nil),               // 9: rabex.api.warehouse.DepositResponse
	(*DepositFundsEvent)(nil),             // 10: rabex.api.warehouse.DepositFundsEvent
	(*ListDepositsResponse)(nil),          // 11: rabex.api.warehouse.ListDepositsResponse
	(*SearchFiatDepositsRequest)(nil),     // 12: rabex.api.warehouse.SearchFiatDepositsRequest
	(*DepositData)(nil),                   // 13: rabex.api.warehouse.DepositData
	(*SearchFiatDepositsResponse)(nil),    // 14: rabex.api.warehouse.SearchFiatDepositsResponse
	(*ApproveDepositsRequest)(nil),        // 15: rabex.api.warehouse.ApproveDepositsRequest
	(*ApproveDepositsResponse)(nil),       // 16: rabex.api.warehouse.ApproveDepositsResponse
	(*TakeActionDepositRequest)(nil),      // 17: rabex.api.warehouse.TakeActionDepositRequest
	(*TakeActionDepositResponse)(nil),     // 18: rabex.api.warehouse.TakeActionDepositResponse
	(*WithdrawRequest)(nil),               // 19: rabex.api.warehouse.WithdrawRequest
	(*WithdrawResponse)(nil),              // 20: rabex.api.warehouse.WithdrawResponse
	(*SearchFiatWithdrawalsRequest)(nil),  // 21: rabex.api.warehouse.SearchFiatWithdrawalsRequest
	(*WithdrawalData)(nil),                // 22: rabex.api.warehouse.WithdrawalData
	(*SearchFiatWithdrawalsResponse)(nil), // 23: rabex.api.warehouse.SearchFiatWithdrawalsResponse
	(*WithdrawalDetailsResponse)(nil),     // 24: rabex.api.warehouse.WithdrawalDetailsResponse
	(*WithdrawEvent)(nil),                 // 25: rabex.api.warehouse.WithdrawEvent
	(*CorrectingRequest)(nil),             // 26: rabex.api.warehouse.CorrectingRequest
	(*TransactionDetailsResponse)(nil),    // 27: rabex.api.warehouse.TransactionDetailsResponse
	(*WarehouseJournal)(nil),              // 28: rabex.api.warehouse.WarehouseJournal
	(*TreasuryAccounts)(nil),              // 29: rabex.api.warehouse.TreasuryAccounts
	(*TreasuryAccount)(nil),               // 30: rabex.api.warehouse.TreasuryAccount
	(commons.Networks)(0),                 // 31: rabex.api.commons.Networks
	(commons.Assets)(0),                   // 32: rabex.api.commons.Assets
	(commons.Brokers)(0),                  // 33: rabex.api.commons.Brokers
	(AccountType)(0),                      // 34: rabex.api.warehouse.AccountType
	(commons.DepositStatus)(0),            // 35: rabex.api.commons.deposit.DepositStatus
	(*timestamppb.Timestamp)(nil),         // 36: google.protobuf.Timestamp
	(DepositScenarios)(0),                 // 37: rabex.api.warehouse.DepositScenarios
	(commons.WithdrawStatus)(0),           // 38: rabex.api.commons.withdraw.WithdrawStatus
	(AssetStatus)(0),                      // 39: rabex.api.warehouse.AssetStatus
}
var file_warehouse_messages_proto_depIdxs = []int32{
	31, // 0: rabex.api.warehouse.UserAccountRequest.network:type_name -> rabex.api.commons.Networks
	32, // 1: rabex.api.warehouse.UserAccountRequest.asset:type_name -> rabex.api.commons.Assets
	33, // 2: rabex.api.warehouse.UserAccountRequest.broker:type_name -> rabex.api.commons.Brokers
	34, // 3: rabex.api.warehouse.UserAccountRequest.type:type_name -> rabex.api.warehouse.AccountType
	31, // 4: rabex.api.warehouse.AssetLimitsRequest.network:type_name -> rabex.api.commons.Networks
	32, // 5: rabex.api.warehouse.AssetLimitsRequest.asset:type_name -> rabex.api.commons.Assets
	32, // 6: rabex.api.warehouse.LimitsResponse.base:type_name -> rabex.api.commons.Assets
	33, // 7: rabex.api.warehouse.BalancesRequest.broker:type_name -> rabex.api.commons.Brokers
	7,  // 8: rabex.api.warehouse.BalancesResponse.balance:type_name -> rabex.api.warehouse.Balance
	32, // 9: rabex.api.warehouse.Balance.asset:type_name -> rabex.api.commons.Assets
	31, // 10: rabex.api.warehouse.Balance.network:type_name -> rabex.api.commons.Networks
	33, // 11: rabex.api.warehouse.Balance.broker:type_name -> rabex.api.commons.Brokers
	32, // 12: rabex.api.warehouse.DepositRequest.asset:type_name -> rabex.api.commons.Assets
	33, // 13: rabex.api.warehouse.DepositRequest.broker:type_name -> rabex.api.commons.Brokers
	31, // 14: rabex.api.warehouse.DepositRequest.network:type_name -> rabex.api.commons.Networks
	35, // 15: rabex.api.warehouse.DepositFundsEvent.status:type_name -> rabex.api.commons.deposit.DepositStatus
	31, // 16: rabex.api.warehouse.DepositFundsEvent.network:type_name -> rabex.api.commons.Networks
	13, // 17: rabex.api.warehouse.ListDepositsResponse.depositData:type_name -> rabex.api.warehouse.DepositData
	35, // 18: rabex.api.warehouse.SearchFiatDepositsRequest.status:type_name -> rabex.api.commons.deposit.DepositStatus
	36, // 19: rabex.api.warehouse.SearchFiatDepositsRequest.startDate:type_name -> google.protobuf.Timestamp
	36, // 20: rabex.api.warehouse.SearchFiatDepositsRequest.endDate:type_name -> google.protobuf.Timestamp
	36, // 21: rabex.api.warehouse.DepositData.timeStamp:type_name -> google.protobuf.Timestamp
	32, // 22: rabex.api.warehouse.DepositData.asset:type_name -> rabex.api.commons.Assets
	31, // 23: rabex.api.warehouse.DepositData.network:type_name -> rabex.api.commons.Networks
	35, // 24: rabex.api.warehouse.DepositData.status:type_name -> rabex.api.commons.deposit.DepositStatus
	13, // 25: rabex.api.warehouse.SearchFiatDepositsResponse.payload:type_name -> rabex.api.warehouse.DepositData
	37, // 26: rabex.api.warehouse.TakeActionDepositRequest.action:type_name -> rabex.api.warehouse.DepositScenarios
	32, // 27: rabex.api.warehouse.WithdrawRequest.asset:type_name -> rabex.api.commons.Assets
	33, // 28: rabex.api.warehouse.WithdrawRequest.broker:type_name -> rabex.api.commons.Brokers
	38, // 29: rabex.api.warehouse.WithdrawResponse.status:type_name -> rabex.api.commons.withdraw.WithdrawStatus
	38, // 30: rabex.api.warehouse.SearchFiatWithdrawalsRequest.status:type_name -> rabex.api.commons.withdraw.WithdrawStatus
	36, // 31: rabex.api.warehouse.SearchFiatWithdrawalsRequest.startDate:type_name -> google.protobuf.Timestamp
	36, // 32: rabex.api.warehouse.SearchFiatWithdrawalsRequest.endDate:type_name -> google.protobuf.Timestamp
	36, // 33: rabex.api.warehouse.WithdrawalData.timeStamp:type_name -> google.protobuf.Timestamp
	32, // 34: rabex.api.warehouse.WithdrawalData.asset:type_name -> rabex.api.commons.Assets
	31, // 35: rabex.api.warehouse.WithdrawalData.network:type_name -> rabex.api.commons.Networks
	38, // 36: rabex.api.warehouse.WithdrawalData.status:type_name -> rabex.api.commons.withdraw.WithdrawStatus
	22, // 37: rabex.api.warehouse.SearchFiatWithdrawalsResponse.payload:type_name -> rabex.api.warehouse.WithdrawalData
	38, // 38: rabex.api.warehouse.WithdrawalDetailsResponse.status:type_name -> rabex.api.commons.withdraw.WithdrawStatus
	36, // 39: rabex.api.warehouse.WithdrawalDetailsResponse.createdTime:type_name -> google.protobuf.Timestamp
	36, // 40: rabex.api.warehouse.WithdrawalDetailsResponse.lastUpdate:type_name -> google.protobuf.Timestamp
	38, // 41: rabex.api.warehouse.WithdrawEvent.status:type_name -> rabex.api.commons.withdraw.WithdrawStatus
	31, // 42: rabex.api.warehouse.WithdrawEvent.network:type_name -> rabex.api.commons.Networks
	38, // 43: rabex.api.warehouse.CorrectingRequest.status:type_name -> rabex.api.commons.withdraw.WithdrawStatus
	35, // 44: rabex.api.warehouse.TransactionDetailsResponse.status:type_name -> rabex.api.commons.deposit.DepositStatus
	36, // 45: rabex.api.warehouse.TransactionDetailsResponse.createdTime:type_name -> google.protobuf.Timestamp
	36, // 46: rabex.api.warehouse.TransactionDetailsResponse.lastUpdate:type_name -> google.protobuf.Timestamp
	28, // 47: rabex.api.warehouse.TransactionDetailsResponse.warehouseJournal:type_name -> rabex.api.warehouse.WarehouseJournal
	34, // 48: rabex.api.warehouse.WarehouseJournal.accountType:type_name -> rabex.api.warehouse.AccountType
	39, // 49: rabex.api.warehouse.WarehouseJournal.status:type_name -> rabex.api.warehouse.AssetStatus
	30, // 50: rabex.api.warehouse.TreasuryAccounts.treasuryAccounts:type_name -> rabex.api.warehouse.TreasuryAccount
	32, // 51: rabex.api.warehouse.TreasuryAccount.asset:type_name -> rabex.api.commons.Assets
	31, // 52: rabex.api.warehouse.TreasuryAccount.network:type_name -> rabex.api.commons.Networks
	33, // 53: rabex.api.warehouse.TreasuryAccount.broker:type_name -> rabex.api.commons.Brokers
	54, // [54:54] is the sub-list for method output_type
	54, // [54:54] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_warehouse_messages_proto_init() }
func file_warehouse_messages_proto_init() {
	if File_warehouse_messages_proto != nil {
		return
	}
	file_warehouse_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_warehouse_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarehouseReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetLimitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFundsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepositsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFiatDepositsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFiatDepositsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveDepositsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveDepositsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeActionDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeActionDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFiatWithdrawalsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawalData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFiatWithdrawalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawalDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CorrectingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarehouseJournal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreasuryAccounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warehouse_messages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreasuryAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_warehouse_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_warehouse_messages_proto_goTypes,
		DependencyIndexes: file_warehouse_messages_proto_depIdxs,
		MessageInfos:      file_warehouse_messages_proto_msgTypes,
	}.Build()
	File_warehouse_messages_proto = out.File
	file_warehouse_messages_proto_rawDesc = nil
	file_warehouse_messages_proto_goTypes = nil
	file_warehouse_messages_proto_depIdxs = nil
}
