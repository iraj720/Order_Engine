// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: fiatgw/services.proto

package fiatgw

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FiatGWClient is the client API for FiatGW service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FiatGWClient interface {
	GetGWConfig(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetGWConfigResponse, error)
	UpdateGWConfig(ctx context.Context, in *UpdateGWConfigRequest, opts ...grpc.CallOption) (*UpdateGWConfigResponse, error)
	GetDepositURLPayment(ctx context.Context, in *GetDepositURLPaymentRequest, opts ...grpc.CallOption) (*GetDepositURLPaymentResponse, error)
	VerifyDepositPayment(ctx context.Context, in *VerifyDepositPaymentRequest, opts ...grpc.CallOption) (*VerifyDepositPaymentResponse, error)
	GetDepositTransaction(ctx context.Context, in *GetDepositTransactionRequest, opts ...grpc.CallOption) (*GetDepositTransactionResponse, error)
	SubmitWithdraw(ctx context.Context, in *SubmitWithdrawRequest, opts ...grpc.CallOption) (*SubmitWithdrawResponse, error)
	GetWithdrawTransaction(ctx context.Context, in *GetWithdrawTransactionRequest, opts ...grpc.CallOption) (*GetWithdrawTransactionResponse, error)
}

type fiatGWClient struct {
	cc grpc.ClientConnInterface
}

func NewFiatGWClient(cc grpc.ClientConnInterface) FiatGWClient {
	return &fiatGWClient{cc}
}

func (c *fiatGWClient) GetGWConfig(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetGWConfigResponse, error) {
	out := new(GetGWConfigResponse)
	err := c.cc.Invoke(ctx, "/rabex.api.fiatgw.FiatGW/GetGWConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fiatGWClient) UpdateGWConfig(ctx context.Context, in *UpdateGWConfigRequest, opts ...grpc.CallOption) (*UpdateGWConfigResponse, error) {
	out := new(UpdateGWConfigResponse)
	err := c.cc.Invoke(ctx, "/rabex.api.fiatgw.FiatGW/UpdateGWConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fiatGWClient) GetDepositURLPayment(ctx context.Context, in *GetDepositURLPaymentRequest, opts ...grpc.CallOption) (*GetDepositURLPaymentResponse, error) {
	out := new(GetDepositURLPaymentResponse)
	err := c.cc.Invoke(ctx, "/rabex.api.fiatgw.FiatGW/GetDepositURLPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fiatGWClient) VerifyDepositPayment(ctx context.Context, in *VerifyDepositPaymentRequest, opts ...grpc.CallOption) (*VerifyDepositPaymentResponse, error) {
	out := new(VerifyDepositPaymentResponse)
	err := c.cc.Invoke(ctx, "/rabex.api.fiatgw.FiatGW/VerifyDepositPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fiatGWClient) GetDepositTransaction(ctx context.Context, in *GetDepositTransactionRequest, opts ...grpc.CallOption) (*GetDepositTransactionResponse, error) {
	out := new(GetDepositTransactionResponse)
	err := c.cc.Invoke(ctx, "/rabex.api.fiatgw.FiatGW/GetDepositTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fiatGWClient) SubmitWithdraw(ctx context.Context, in *SubmitWithdrawRequest, opts ...grpc.CallOption) (*SubmitWithdrawResponse, error) {
	out := new(SubmitWithdrawResponse)
	err := c.cc.Invoke(ctx, "/rabex.api.fiatgw.FiatGW/SubmitWithdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fiatGWClient) GetWithdrawTransaction(ctx context.Context, in *GetWithdrawTransactionRequest, opts ...grpc.CallOption) (*GetWithdrawTransactionResponse, error) {
	out := new(GetWithdrawTransactionResponse)
	err := c.cc.Invoke(ctx, "/rabex.api.fiatgw.FiatGW/GetWithdrawTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FiatGWServer is the server API for FiatGW service.
// All implementations must embed UnimplementedFiatGWServer
// for forward compatibility
type FiatGWServer interface {
	GetGWConfig(context.Context, *emptypb.Empty) (*GetGWConfigResponse, error)
	UpdateGWConfig(context.Context, *UpdateGWConfigRequest) (*UpdateGWConfigResponse, error)
	GetDepositURLPayment(context.Context, *GetDepositURLPaymentRequest) (*GetDepositURLPaymentResponse, error)
	VerifyDepositPayment(context.Context, *VerifyDepositPaymentRequest) (*VerifyDepositPaymentResponse, error)
	GetDepositTransaction(context.Context, *GetDepositTransactionRequest) (*GetDepositTransactionResponse, error)
	SubmitWithdraw(context.Context, *SubmitWithdrawRequest) (*SubmitWithdrawResponse, error)
	GetWithdrawTransaction(context.Context, *GetWithdrawTransactionRequest) (*GetWithdrawTransactionResponse, error)
	mustEmbedUnimplementedFiatGWServer()
}

// UnimplementedFiatGWServer must be embedded to have forward compatible implementations.
type UnimplementedFiatGWServer struct {
}

func (UnimplementedFiatGWServer) GetGWConfig(context.Context, *emptypb.Empty) (*GetGWConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGWConfig not implemented")
}
func (UnimplementedFiatGWServer) UpdateGWConfig(context.Context, *UpdateGWConfigRequest) (*UpdateGWConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGWConfig not implemented")
}
func (UnimplementedFiatGWServer) GetDepositURLPayment(context.Context, *GetDepositURLPaymentRequest) (*GetDepositURLPaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDepositURLPayment not implemented")
}
func (UnimplementedFiatGWServer) VerifyDepositPayment(context.Context, *VerifyDepositPaymentRequest) (*VerifyDepositPaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyDepositPayment not implemented")
}
func (UnimplementedFiatGWServer) GetDepositTransaction(context.Context, *GetDepositTransactionRequest) (*GetDepositTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDepositTransaction not implemented")
}
func (UnimplementedFiatGWServer) SubmitWithdraw(context.Context, *SubmitWithdrawRequest) (*SubmitWithdrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitWithdraw not implemented")
}
func (UnimplementedFiatGWServer) GetWithdrawTransaction(context.Context, *GetWithdrawTransactionRequest) (*GetWithdrawTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWithdrawTransaction not implemented")
}
func (UnimplementedFiatGWServer) mustEmbedUnimplementedFiatGWServer() {}

// UnsafeFiatGWServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FiatGWServer will
// result in compilation errors.
type UnsafeFiatGWServer interface {
	mustEmbedUnimplementedFiatGWServer()
}

func RegisterFiatGWServer(s grpc.ServiceRegistrar, srv FiatGWServer) {
	s.RegisterService(&FiatGW_ServiceDesc, srv)
}

func _FiatGW_GetGWConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FiatGWServer).GetGWConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rabex.api.fiatgw.FiatGW/GetGWConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FiatGWServer).GetGWConfig(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _FiatGW_UpdateGWConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGWConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FiatGWServer).UpdateGWConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rabex.api.fiatgw.FiatGW/UpdateGWConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FiatGWServer).UpdateGWConfig(ctx, req.(*UpdateGWConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FiatGW_GetDepositURLPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDepositURLPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FiatGWServer).GetDepositURLPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rabex.api.fiatgw.FiatGW/GetDepositURLPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FiatGWServer).GetDepositURLPayment(ctx, req.(*GetDepositURLPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FiatGW_VerifyDepositPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyDepositPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FiatGWServer).VerifyDepositPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rabex.api.fiatgw.FiatGW/VerifyDepositPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FiatGWServer).VerifyDepositPayment(ctx, req.(*VerifyDepositPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FiatGW_GetDepositTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDepositTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FiatGWServer).GetDepositTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rabex.api.fiatgw.FiatGW/GetDepositTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FiatGWServer).GetDepositTransaction(ctx, req.(*GetDepositTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FiatGW_SubmitWithdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitWithdrawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FiatGWServer).SubmitWithdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rabex.api.fiatgw.FiatGW/SubmitWithdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FiatGWServer).SubmitWithdraw(ctx, req.(*SubmitWithdrawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FiatGW_GetWithdrawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWithdrawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FiatGWServer).GetWithdrawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rabex.api.fiatgw.FiatGW/GetWithdrawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FiatGWServer).GetWithdrawTransaction(ctx, req.(*GetWithdrawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FiatGW_ServiceDesc is the grpc.ServiceDesc for FiatGW service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FiatGW_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "rabex.api.fiatgw.FiatGW",
	HandlerType: (*FiatGWServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGWConfig",
			Handler:    _FiatGW_GetGWConfig_Handler,
		},
		{
			MethodName: "UpdateGWConfig",
			Handler:    _FiatGW_UpdateGWConfig_Handler,
		},
		{
			MethodName: "GetDepositURLPayment",
			Handler:    _FiatGW_GetDepositURLPayment_Handler,
		},
		{
			MethodName: "VerifyDepositPayment",
			Handler:    _FiatGW_VerifyDepositPayment_Handler,
		},
		{
			MethodName: "GetDepositTransaction",
			Handler:    _FiatGW_GetDepositTransaction_Handler,
		},
		{
			MethodName: "SubmitWithdraw",
			Handler:    _FiatGW_SubmitWithdraw_Handler,
		},
		{
			MethodName: "GetWithdrawTransaction",
			Handler:    _FiatGW_GetWithdrawTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fiatgw/services.proto",
}
