// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: addrseeker/services.proto

package addrseeker

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AddrSeekerAPIClient is the client API for AddrSeekerAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AddrSeekerAPIClient interface {
	Seek(ctx context.Context, in *AddrSeekRequest, opts ...grpc.CallOption) (*AddrSeekResponse, error)
}

type addrSeekerAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewAddrSeekerAPIClient(cc grpc.ClientConnInterface) AddrSeekerAPIClient {
	return &addrSeekerAPIClient{cc}
}

func (c *addrSeekerAPIClient) Seek(ctx context.Context, in *AddrSeekRequest, opts ...grpc.CallOption) (*AddrSeekResponse, error) {
	out := new(AddrSeekResponse)
	err := c.cc.Invoke(ctx, "/addrseeker.AddrSeekerAPI/Seek", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddrSeekerAPIServer is the server API for AddrSeekerAPI service.
// All implementations must embed UnimplementedAddrSeekerAPIServer
// for forward compatibility
type AddrSeekerAPIServer interface {
	Seek(context.Context, *AddrSeekRequest) (*AddrSeekResponse, error)
	mustEmbedUnimplementedAddrSeekerAPIServer()
}

// UnimplementedAddrSeekerAPIServer must be embedded to have forward compatible implementations.
type UnimplementedAddrSeekerAPIServer struct {
}

func (UnimplementedAddrSeekerAPIServer) Seek(context.Context, *AddrSeekRequest) (*AddrSeekResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Seek not implemented")
}
func (UnimplementedAddrSeekerAPIServer) mustEmbedUnimplementedAddrSeekerAPIServer() {}

// UnsafeAddrSeekerAPIServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AddrSeekerAPIServer will
// result in compilation errors.
type UnsafeAddrSeekerAPIServer interface {
	mustEmbedUnimplementedAddrSeekerAPIServer()
}

func RegisterAddrSeekerAPIServer(s grpc.ServiceRegistrar, srv AddrSeekerAPIServer) {
	s.RegisterService(&AddrSeekerAPI_ServiceDesc, srv)
}

func _AddrSeekerAPI_Seek_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddrSeekRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrSeekerAPIServer).Seek(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addrseeker.AddrSeekerAPI/Seek",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrSeekerAPIServer).Seek(ctx, req.(*AddrSeekRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AddrSeekerAPI_ServiceDesc is the grpc.ServiceDesc for AddrSeekerAPI service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AddrSeekerAPI_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "addrseeker.AddrSeekerAPI",
	HandlerType: (*AddrSeekerAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Seek",
			Handler:    _AddrSeekerAPI_Seek_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "addrseeker/services.proto",
}
