// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: xgw/deposit/services.proto

package deposit

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// DepositApiClient is the client API for DepositApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DepositApiClient interface {
	DepositHistory(ctx context.Context, in *DepositHistoryRequest, opts ...grpc.CallOption) (*DepositHistoryResponse, error)
}

type depositApiClient struct {
	cc grpc.ClientConnInterface
}

func NewDepositApiClient(cc grpc.ClientConnInterface) DepositApiClient {
	return &depositApiClient{cc}
}

func (c *depositApiClient) DepositHistory(ctx context.Context, in *DepositHistoryRequest, opts ...grpc.CallOption) (*DepositHistoryResponse, error) {
	out := new(DepositHistoryResponse)
	err := c.cc.Invoke(ctx, "/deposit.DepositApi/DepositHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DepositApiServer is the server API for DepositApi service.
// All implementations must embed UnimplementedDepositApiServer
// for forward compatibility
type DepositApiServer interface {
	DepositHistory(context.Context, *DepositHistoryRequest) (*DepositHistoryResponse, error)
	mustEmbedUnimplementedDepositApiServer()
}

// UnimplementedDepositApiServer must be embedded to have forward compatible implementations.
type UnimplementedDepositApiServer struct {
}

func (UnimplementedDepositApiServer) DepositHistory(context.Context, *DepositHistoryRequest) (*DepositHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DepositHistory not implemented")
}
func (UnimplementedDepositApiServer) mustEmbedUnimplementedDepositApiServer() {}

// UnsafeDepositApiServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DepositApiServer will
// result in compilation errors.
type UnsafeDepositApiServer interface {
	mustEmbedUnimplementedDepositApiServer()
}

func RegisterDepositApiServer(s grpc.ServiceRegistrar, srv DepositApiServer) {
	s.RegisterService(&DepositApi_ServiceDesc, srv)
}

func _DepositApi_DepositHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepositHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepositApiServer).DepositHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/deposit.DepositApi/DepositHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepositApiServer).DepositHistory(ctx, req.(*DepositHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DepositApi_ServiceDesc is the grpc.ServiceDesc for DepositApi service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DepositApi_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "deposit.DepositApi",
	HandlerType: (*DepositApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DepositHistory",
			Handler:    _DepositApi_DepositHistory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "xgw/deposit/services.proto",
}
